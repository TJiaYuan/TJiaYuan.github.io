<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2022/08/24/%E9%87%8D%E9%93%B8%E8%8B%B1%E8%AF%AD%E4%BD%93%E7%B3%BB/"/>
    <url>/2022/08/24/%E9%87%8D%E9%93%B8%E8%8B%B1%E8%AF%AD%E4%BD%93%E7%B3%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="重铸英语体系"><a href="#重铸英语体系" class="headerlink" title="重铸英语体系"></a>重铸英语体系</h1><h1 id="第一章-名词"><a href="#第一章-名词" class="headerlink" title="第一章 名词"></a>第一章 名词</h1><h2 id="1-1-什么地方用"><a href="#1-1-什么地方用" class="headerlink" title="1.1 什么地方用"></a>1.1 什么地方用</h2><h3 id="1-1-1-主语一定是名词"><a href="#1-1-1-主语一定是名词" class="headerlink" title="1.1.1 主语一定是名词"></a>1.1.1 主语一定是名词</h3><ul><li>The story is true</li><li>名词性从句”也相当于名词<ul><li>(That Tom teaches English) is true</li></ul></li></ul><h3 id="1-1-2-宾语一定是名词"><a href="#1-1-2-宾语一定是名词" class="headerlink" title="1.1.2 宾语一定是名词"></a>1.1.2 宾语一定是名词</h3><ul><li><p>I want some food.</p><ul><li><p>eg：非谓语动词也可以当作名词</p></li><li><p>I want（to go home）</p></li></ul></li></ul><h3 id="1-1-3-表语可以是名词"><a href="#1-1-3-表语可以是名词" class="headerlink" title="1.1.3 表语可以是名词"></a>1.1.3 表语可以是名词</h3><ul><li><p>Tom is a techer.</p></li><li><p>Tom is handsome.</p></li><li><p>Tom is in Beijing.</p></li></ul><h3 id="1-1-4-介词-名词"><a href="#1-1-4-介词-名词" class="headerlink" title="1.1.4 介词 + 名词"></a>1.1.4 介词 + 名词</h3><ul><li>介词后面的动词都要写成动名词!<ul><li>I have been looking forward to (meeting) you.</li></ul></li></ul><h3 id="1-1-5-限定词-名词"><a href="#1-1-5-限定词-名词" class="headerlink" title="1.1.5 限定词 + 名词"></a>1.1.5 限定词 + 名词</h3><ol><li><p>冠词（a/an/the） + 名词</p></li><li><p>形容词性物主代词（my/your/our/their/his/her/its）+ 名词</p></li><li><p>指示代词（this/that/these/those）【这个/那个】+ 名词</p></li><li><p>（形容词/介词短语/定语从句/非谓语）修饰名词</p></li></ol><ul><li><p>a handsome teacher.</p></li><li><p>the teacher (in my heart).</p></li><li><p>the teacher (who teaches English).</p></li><li><p>the teacher (teaching English).</p></li></ul><h2 id="1-2-考什么"><a href="#1-2-考什么" class="headerlink" title="1.2 考什么"></a>1.2 考什么</h2><h3 id="1-2-1-可数不可数、单复数"><a href="#1-2-1-可数不可数、单复数" class="headerlink" title="1.2.1 可数不可数、单复数"></a>1.2.1 可数不可数、单复数</h3><ol><li>可数：能数出一个不可再分的“1”，就算可数</li></ol><ul><li>论份数的都可数：如蛋糕、报纸、咖啡</li></ul><ol start="2"><li><p>不可数：无法定义出“1”</p></li><li><p>常见不可数名词</p></li></ol><ul><li><p>furniture家具/luggage行李/baggage行李</p></li><li><p>information信息/news新闻/advice建议/knowledge知识</p></li><li><p>homework作业/progress进步/work工作</p></li><li><p>paper纸/equipment设备/money钱/change零钱</p></li><li><p>food食物/water水/music音乐/joy快乐/hair头发/traffic交通</p></li></ul><h3 id="1-2-2-所有格"><a href="#1-2-2-所有格" class="headerlink" title="1.2.2 所有格"></a>1.2.2 所有格</h3><ul><li><p>Tom’s photo</p><ul><li>表所属</li></ul></li><li><p>I can’t remember all students’ names.</p></li></ul><h3 id="1-2-3-动词如何变名词"><a href="#1-2-3-动词如何变名词" class="headerlink" title="1.2.3 动词如何变名词"></a>1.2.3 动词如何变名词</h3><ol><li>同根词/加后缀</li></ol><ul><li>introduce -&gt; introduction</li><li>东西、不能加宾语<ul><li>I am reading the introduction of the book</li></ul></li></ul><ol start="2"><li>doing / 动名词</li></ol><ul><li>introduce -&gt; introducing</li><li>动作、可以加宾语<ul><li>I am looking forward to introducing the new movie to you</li></ul></li></ul><ol start="3"><li>to do</li></ol><ul><li>I want (to study Japanese)<ul><li> (to study Japanese) 做 want 宾语</li></ul></li></ul><ol start="4"><li>the + done</li></ol><ul><li>The (wounded) should be taken good care of.</li></ul><ol start="5"><li>v-er/v-ee</li></ol><ul><li><p>employer/interviewer/trainer</p></li><li><p>employee/interviewee/trainee</p></li></ul><h1 id="第二章-动词"><a href="#第二章-动词" class="headerlink" title="第二章 动词"></a>第二章 动词</h1><h2 id="2-1-谓语动词和非谓语动词区别"><a href="#2-1-谓语动词和非谓语动词区别" class="headerlink" title="2.1 谓语动词和非谓语动词区别"></a>2.1 谓语动词和非谓语动词区别</h2><h3 id="2-1-1-位置不一样"><a href="#2-1-1-位置不一样" class="headerlink" title="2.1.1 位置不一样"></a>2.1.1 位置不一样</h3><ul><li><p>谓语动词=谓语</p><ul><li>帮助动词构成时态</li></ul></li><li><p>非谓语动词=主/宾/定/状/表</p></li></ul><h3 id="2-1-2-长相不一样"><a href="#2-1-2-长相不一样" class="headerlink" title="2.1.2 长相不一样"></a>2.1.2 长相不一样</h3><ul><li><p>谓语动词 = 助动词 + 实义动词</p><ul><li><p>I will go home</p></li><li><p>I am doing my homework</p></li><li><p>I have finished my homework</p></li><li><p>I love you.( love = do love , do 省略不写)</p></li></ul></li><li><p>非谓语动词七大形式</p><ol><li><p>doing</p></li><li><p>done</p></li><li><p>to do</p></li><li><p>to be done</p></li><li><p>having done</p></li><li><p>having been done</p></li><li><p>being done</p></li></ol></li></ul><h2 id="2-2-谓语动词考什么"><a href="#2-2-谓语动词考什么" class="headerlink" title="2.2 谓语动词考什么"></a>2.2 谓语动词考什么</h2><h3 id="2-2-1-时态"><a href="#2-2-1-时态" class="headerlink" title="2.2.1 时态"></a>2.2.1 时态</h3><ol><li><p><strong>先判断意思，再选择相应的时态形式</strong></p></li><li><p>一般现在</p></li></ol><ul><li><strong><font color="red">“常态”</font></strong><ul><li>“吃/喝/拉/睡”</li><li><strong><font color="blue">”经常/真的/是…的/老“</font></strong><ul><li>Tom teaches English</li></ul></li></ul></li></ul><ol start="3"><li>一般过去</li></ol><ul><li>”讲故事“<ul><li><strong><font color="red">”动作发生在过去，句子也在描述过去“</font></strong></li><li><strong><font color="blue">”曾经/当时/刚刚“</font></strong><ul><li>I read 100 books last year</li></ul></li></ul></li></ul><ol start="4"><li>现在完成</li></ol><ul><li>”吹牛逼“<ul><li><strong><font color="red">”动作发生在过去，句子却在描述现在“</font></strong></li><li><strong><font color="blue">”已经“</font></strong></li></ul></li></ul><ol start="5"><li>过去完成</li></ol><ul><li><strong><font color="red">“发生在did之前 / 过去的过去”</font></strong></li><li><strong><font color="blue">“之前/之前已经”“</font></strong><ul><li>I told you I had written a book</li></ul></li></ul><ol start="6"><li>过去将来</li></ol><ul><li><strong><font color="red">”发生在told /said/ thought /knew /promised的将来“</font></strong></li><li><strong><font color="blue">“”会”“</font></strong><ul><li>I told you I would write a book</li></ul></li></ul><ol start="7"><li>一般将来时</li></ol><ul><li><p>will do</p><ul><li>“无计划、无预谋”</li></ul></li><li><p>be going to do</p><ul><li>“有计划、有预谋”</li></ul></li><li><p>be to do / be about to do</p><ul><li>“立刻、马上”</li></ul></li><li><p>“威逼利诱句型”</p><ul><li><p>祈使句 + and / or + sb will do sth.</p><ul><li><p>and “那么”</p><ul><li>Come here，and I will kiss you.</li></ul></li><li><p>or ”否则“</p><ul><li>Come here，or I will kill you</li></ul></li></ul></li></ul></li><li><p>“主将从现/主情从现/主祈从现”</p><ul><li><p>if / unless / as long as / when / as soon as</p><ul><li><p>I will come if you need me </p></li><li><p>I can come if you need me </p></li><li><p>Kiss me, if you love me</p></li></ul></li></ul></li><li><p>“时间表”用一般时表将来</p><ul><li><p>火车、飞机、上学放学、商店开关门….</p><ul><li><p>A:When <font color="red">does </font>the next train come?</p></li><li><p>B: It usually<font color="red"> comes</font> at 9:00,but today it <font color="red">coming</font> 20 minutes later because of the heavy rain.</p></li></ul></li></ul></li><li><p>”点动作“用进行时表将来</p><ul><li>come,go,arrive,leave,enter,die,end,start.begin…<ul><li>The old man is<font color="red"> dying</font></li></ul></li></ul></li></ul><ol start="8"><li>各种进行时</li></ol><ul><li>在某一时间点上”正在做“<ul><li>I will be flying to Shanghai at this time tomorrow afternoon</li></ul></li></ul><ol start="9"><li>完成进行时</li></ol><ul><li><p>”一直做一直做一直做“已经做了很长时间还在做</p><ul><li><p>到现在为止一直做</p><ul><li>have been doing</li></ul></li><li><p>到过去某时间点为止一直做</p><ul><li>had been doing</li></ul></li></ul></li></ul><h3 id="2-2-2-被动"><a href="#2-2-2-被动" class="headerlink" title="2.2.2 被动"></a>2.2.2 被动</h3><ol><li>be/get + done</li></ol><ul><li><p>谓语动词的被动</p><ul><li>be done / get done</li></ul></li><li><p>非谓语动词的被动</p><ul><li>done / being done / to be done / having been done</li></ul></li></ul><h3 id="2-2-3-虚拟语气-“did”"><a href="#2-2-3-虚拟语气-“did”" class="headerlink" title="2.2.3 虚拟语气 “did”"></a>2.2.3 虚拟语气 “did”</h3><ul><li><p>常用句型【本质就是动词+did】</p><ol><li><strong>时间上的虚拟</strong></li></ol><ul><li><p>对现在的虚拟</p><ul><li>I wish that sb. did sth.<ul><li>I wish I were a bird.  (am + did = were)</li></ul></li></ul></li><li><p>对过去的虚拟</p><ul><li>I wish that sb. had done sth.<ul><li>I wish I had been to Turkey. (have been + did =  had been)</li></ul></li></ul></li><li><p>对将来的虚拟</p><ul><li>I wish that sb. would do sth.<ul><li>I wish I would go to the moon.(will go + did = would go)</li></ul></li></ul></li></ul><ol start="2"><li><strong>经典例句</strong></li></ol><ul><li><p>If I were you, I would do sth.</p><ul><li>如果我是你，我会做某事</li></ul></li><li><p>It is high/about time that sb. did sth.</p><ul><li>真的到了某人做某事的时间了</li></ul></li></ul><ol start="3"><li><strong>Without you语句</strong></li></ol><ul><li><p>Without you, sb would do sth</p><ul><li>如果没有你，某人就会做某事（将来）</li></ul></li><li><p>Without you，sb would have done sth</p><ul><li>如果没有你，某人就会做了某事（过去）</li></ul></li></ul><ol start="4"><li><strong>But for you语句</strong></li></ol><ul><li><p>But for you,sb.would do sth.</p><ul><li>如果没有你，某人就会做某事（将来）</li></ul></li><li><p>But for you,sb would have done sth.</p><ul><li>如果没有你，某人就会已经做某事（过去）</li></ul></li></ul><ol start="5"><li><strong>Otherwise语句</strong></li></ol><ul><li>Otherwise，sb.would do sth.  否则，某人就会做某事（将来）</li><li>Otherwise，sb.would have done sth. 否则某人就会已经做某事（过去）<ul><li>You saved me.Otherwise,I would have died.</li></ul></li></ul><ol start="6"><li>一坚持/二命令/三建议/四要求 + （that）+sb.（should）do</li></ol><ul><li>I suggested （that）you （should）go home</li><li>insist，order，command，suggest，advise，recommend，ask，require，request，demand，（催促）urge</li></ul><ol start="7"><li>would rather 表“宁愿”</li></ol><ul><li>Would rather + sb. did sth.  对现在/将来的虚拟</li><li>Would rather + sb had done sth  对过去的虚拟</li></ul></li><li><p><strong>虚拟条件句</strong> “如果…就…”</p><ol><li>三大口诀</li></ol><ul><li>主过将 | 从过<ul><li>现在时间平台上的虚拟语气</li><li>I would go,if I were you.</li></ul></li><li>主过将完 | 从过完<ul><li>过去时间平台上的虚拟语气</li><li>I would have come，if I had known about the party.</li></ul></li><li>主过将| 从should / were to<ul><li>I would buy you a gift，if I should travel to USA.</li></ul></li></ul><ol start="2"><li>错综时间虚拟语气 【主句从句不在一个时间平台上】</li></ol><ul><li>主过将 | 从过完<ul><li>如果我之前学习更勤奋（过去），我现在就是科学家（现在）</li><li>(I would be a scientist now), (if I had studied harder).</li></ul></li><li>主过将完 | 从should / were to<ul><li>如果你将来要去法国读书（将来），你十年前就该开始学习法语（过去）</li><li>If you were to study in France,you should have started to learn French ten years.</li></ul></li></ul><ol start="3"><li>含蓄条件句【不带if但表示条件】</li></ol><ul><li>Without ….</li><li>But for ….</li><li>Other wise ….</li></ul><ol start="4"><li>条件省略形式【if去掉，助/系/情提前】</li></ol><ul><li>I would go，if I were you  ==&gt;&gt;  Were I you,I would go.</li><li>I would have come,if I had known about the party. ==&gt;&gt;  Had I known about the party,I would have come.</li></ul></li></ul><h3 id="2-2-4-主谓一致"><a href="#2-2-4-主谓一致" class="headerlink" title="2.2.4 主谓一致"></a>2.2.4 主谓一致</h3><ul><li>主语单数，谓语单数</li><li>主语复数，谓语复数</li></ul><h1 id="第三章-非谓语动词"><a href="#第三章-非谓语动词" class="headerlink" title="第三章 非谓语动词"></a>第三章 非谓语动词</h1><h2 id="3-1-什么时候用非谓语动词"><a href="#3-1-什么时候用非谓语动词" class="headerlink" title="3.1 什么时候用非谓语动词"></a>3.1 什么时候用非谓语动词</h2><ul><li>一句一主谓</li><li>当某一句子已经有谓语动词的时候，旧需要加上非谓语动词</li></ul><h2 id="3-2-谓语动词考什么"><a href="#3-2-谓语动词考什么" class="headerlink" title="3.2 谓语动词考什么"></a>3.2 谓语动词考什么</h2><h3 id="3-2-1-非谓语动词的形式【重点前三个】"><a href="#3-2-1-非谓语动词的形式【重点前三个】" class="headerlink" title="3.2.1 非谓语动词的形式【重点前三个】"></a>3.2.1 非谓语动词的形式【重点前三个】</h3><ol><li>主动 <strong>doing</strong>  <ul><li>(<u>Smiling</u>)，Tom walked in.</li></ul></li><li>被动 <strong>done</strong><ul><li>(<u>Beaten</u>)，Tom walked in.</li></ul></li><li>要做/去做/未做 <strong>to</strong> <strong>do</strong><ul><li>（<u>To finish</u> his homework），Tom turned to Jerry for help.</li></ul></li><li>要被做 <strong>to</strong> <strong>be</strong> <strong>done</strong><ul><li>Everyone wants (<u>to be praised</u>).</li></ul></li><li>正在被做 <strong>being</strong> <strong>done</strong><ul><li>（<u>Being scolded</u>）（by his father），Tom felt sad.</li><li>每个人都想被表扬</li></ul></li><li>之前做 <strong>having done</strong><ul><li>（<u>Having eaten</u>）（in this restaurant before），Tom refused (to come again).</li></ul></li><li>之前被做 <strong>having</strong> <strong>been</strong> <strong>done</strong><ul><li>(<u>Having been beaten</u> badly)，Tom refused (to come again).</li></ul></li></ol><h3 id="3-2-2-to-do-的特殊用法"><a href="#3-2-2-to-do-的特殊用法" class="headerlink" title="3.2.2 to do 的特殊用法"></a>3.2.2 to do 的特殊用法</h3><ol><li><strong>want / desire / expect to do</strong><ul><li>想要 / 渴望 / 期待去做</li></ul></li><li><strong>sb is said / reported / expected to do</strong><ul><li>被说 / 被报道 / 被期待去做</li></ul></li><li><strong>形容词 + to do</strong> <ul><li>“表喜怒哀乐惊好坏和难易”的形容词</li><li>I am happy to do sth.</li></ul></li><li><strong>英语难学结构</strong><ul><li>English is hard (for us) to study.【可省略 for us】</li></ul></li><li><strong>作用要做结构</strong><ul><li>I have homework (for me) to do. 【自己做作业】<ul><li>当用了 to do 的时候， 省略 for me </li></ul></li><li>I have homework to be done. 【谁做都行】</li></ul></li><li><strong>only + to do</strong><ul><li>表示令人惊讶的结果：“结果却…”</li><li>He went home，only to find everything stolen. </li></ul></li></ol><h3 id="3-2-3-非谓语总结"><a href="#3-2-3-非谓语总结" class="headerlink" title="3.2.3 非谓语总结"></a>3.2.3 非谓语总结</h3><ul><li><p>一个句子中用到多个动词，保留一个作谓语，其他写成非谓语</p></li><li><p>主动doing，被动done，要做去做用to do</p></li><li><p>非谓语是主句的主语干的，则前面什么都不用加【Smiling，Tom walked in.  汤姆笑着走进来，Smiling是Tom干的，前面不用加】；如果非谓语不是主句主句干的，谁干的把谁加【Jerry smiling，Tom walked in.  杰瑞笑着汤姆走了进来。 smiling 是jerry干的，加上jerry】。The sun shining in the sky, the flowers smiling to me，carrying my bag，I go to school.</p></li></ul><h1 id="第四章-名从-定从-状从"><a href="#第四章-名从-定从-状从" class="headerlink" title="第四章 名从 / 定从 / 状从"></a>第四章 名从 / 定从 / 状从</h1><h2 id="4-1-什么地方用"><a href="#4-1-什么地方用" class="headerlink" title="4.1 什么地方用"></a>4.1 什么地方用</h2><h3 id="4-1-1-从【充当的成分】看"><a href="#4-1-1-从【充当的成分】看" class="headerlink" title="4.1.1 从【充当的成分】看"></a>4.1.1 从【充当的成分】看</h3><ol><li>当名词用（名词性从句）<ul><li>主语从句</li><li>宾语从句</li><li>表语从句</li><li>同位语从句</li></ul></li><li>当形容词用（定于从句）</li><li>当副词用（状语从句）</li></ol><h3 id="4-1-2-从【主句完整性】看"><a href="#4-1-2-从【主句完整性】看" class="headerlink" title="4.1.2 从【主句完整性】看"></a>4.1.2 从【主句完整性】看</h3><ol><li>如果主句缺名词<ul><li><strong>主从</strong> 【（Tom is ugly）is true】| 主谓宾结构，主语用主从代替<ul><li>Tom is ugly   主语从句</li><li>is 谓语</li><li>true 宾语</li></ul></li><li>宾从【We all know (that Tom is ugly).】| 主谓宾结构，宾语从句代替宾语<ul><li>We 主语   all 副词</li><li>know 谓语动词</li><li>that Tom is ugly  宾语从句</li></ul></li><li><strong>表从</strong>【The fact is (that Tom is ugly)】| 主系表结构，表语从句代替表语<ul><li>The 冠词   fact 名词</li><li>is 系动词</li><li>that Tom is ugly 表语从句</li></ul></li></ul></li><li>如果主句不缺名词<ul><li><strong>同从</strong>【I know the fact (that Tom is ugly).】<ul><li>I 主语 </li><li>know 谓语</li><li>fact 宾语</li><li>that Tom is ugly  同位语从句对先行词（<strong>抽象名词</strong>）fact的内容解释说明<ul><li>抽象名词，news，fact，idea，report，answer，question，opinion…</li></ul></li></ul></li><li><strong>定从</strong>【I know the fact（that Tom said）】<ul><li>I 主语 </li><li>know 谓语</li><li>fact 宾语</li><li>that Tom said 定语从句相当于形容词<ul><li>定语从句用来对先行词“修饰限定”</li><li>定从的先行词是任意名词</li></ul></li></ul></li><li><strong>状从</strong><ul><li>明确给出主句的时间/地点/原因/结果/方式/目的/条件/让步/比较等</li><li>I read English （when I am free.）【时间状语从句】</li><li>I read English （where others play.）【地点状语从句】</li><li>I read English（ because I want to study abroad.）【原因状语从句】</li><li>I read English（ if I am free. ）【条件状语从句】</li></ul></li></ul></li></ol><h2 id="4-2-从句考什么"><a href="#4-2-从句考什么" class="headerlink" title="4.2 从句考什么"></a>4.2 从句考什么</h2><h3 id="4-2-1-根据意思选引导词"><a href="#4-2-1-根据意思选引导词" class="headerlink" title="4.2.1 根据意思选引导词"></a>4.2.1 根据意思选引导词</h3><ol><li><strong>名词性从句</strong></li></ol><ul><li>【连词】<strong>从句本身不缺名词</strong><ul><li><strong>that</strong> 【确定的事】<ul><li>意思为：”说“ / “这件事” 或 不翻译</li><li>We know that Jerry teaches well.【我们都知道杰瑞教书教得好】</li></ul></li><li><strong>if</strong> 【不确定的事】只能用于及物动词的宾语从句或带形式主语 it 的主从且不能连用or not<ul><li>意思为：“是否 / 与否”</li><li>We don’t know if Jerry teaches well.</li></ul></li><li><strong>whether</strong> 【不确定的事】 随处可用，特别跟or not 搭配<ul><li>意思为：“是否 / 与否”</li></ul></li></ul></li><li>【连接副词】<strong>从句本身不缺名词</strong> <ul><li><strong>when</strong><ul><li>…的那个时间</li><li>We don’t know (when Jerry will get married).</li><li>我们不知道杰瑞将要结婚的那个时间</li></ul></li><li><strong>where</strong><ul><li>…的那个地方</li><li>We don’t know (where Jerry will get married).</li><li>我们不知道杰瑞将要结婚的那个地方</li></ul></li><li><strong>why</strong><ul><li>…的那个原因</li><li>We don’t know (why Jerry will get married).</li><li>我们不知道杰瑞将要结婚的那个原因</li></ul></li><li><strong>how</strong><ul><li>…的那个方式，怎么，多么</li><li>We don’t know (how Jerry will get married).<ul><li>我们不知道杰瑞将要结婚的那个方式</li></ul></li><li>I wonder (how I can go home).<ul><li>我想知道我怎么回家</li></ul></li></ul></li></ul></li><li>【连接代词】<strong>从句一般缺名词</strong><ul><li><strong>who</strong> 用于能做主语和宾语<ul><li>…的那个人</li><li>(who killed Tom) is still a mystery.</li><li>杀了汤姆的那个人是非常神秘的</li></ul></li><li><strong>whom</strong> 用于只能做宾语<ul><li>…的那个人</li><li>I wonder （whom Tom killed）</li><li>我想知道杀了汤姆的那个人</li></ul></li><li><strong>which</strong> 用于有选择范围<ul><li>哪个</li><li>There are three apples，I don’t know （which you like）.</li><li>那边的三个苹果，我不知道哪个你喜欢的</li></ul></li><li><strong>what</strong> 用于没有选择范围<ul><li>…的那个东西  / 什么</li><li>I don’t know （what I can do）.</li><li>我不知道我能够做什么</li></ul></li><li><strong>例外</strong> which 和 what 修饰名词<ul><li>I don’t know （which student broke the glass）【修饰student】</li><li>我不知道哪个学生打破这个玻璃</li><li>I don’t know (what fruit you like) 【修饰fruit】</li><li>我不知道什么水果是你喜欢的</li></ul></li></ul></li></ul><ol start="2"><li><strong>定语从句</strong><ul><li><strong>特殊关系词</strong><ul><li>as<ul><li>as 和 which 一样，可以指代整个主句，as引导的定语从句放在主句之前</li><li>“正如”</li><li>As we all know，Tom is ugly.【正如我们知道的…】</li></ul></li><li>whose<ul><li>“ta的，ta们的”</li><li>I have a house whose windows face the sea.</li></ul></li></ul></li><li><strong>关系代词【从句不完整】</strong><ul><li>“他 / 它 / 他们”</li><li><strong>who</strong><ul><li>Tom is a  teacher (who teaches English).</li></ul></li><li><strong>whom</strong><ul><li>Tom is the teacher (whom we beat everyday).</li></ul></li><li><strong>which</strong><ul><li>限制性定语从句<ul><li>Tom never wears a <strong>thing</strong> (which makes him different.)【which 指代 thing】</li></ul></li><li>非限制性定语从句<ul><li><strong>Tom never wears a thing</strong>， (which makes him different.)【which 指代整个句子，可以翻译为“这件事”】</li></ul></li></ul></li><li><strong>that</strong><ul><li>Tom is a teacher （that teaches English.）</li><li>that 六个用法 “人，物，绝，不，避，人物”<ul><li>Tom is a <strong>teacher</strong> （that teaches English.） 【that指代 teacher】</li><li>Tom has a <strong>pen</strong> (that is very beautiful.) 【that 指代 pen】</li><li>Tom is the <strong>ugliest</strong> teacher (that teaches.)【that指代最高级，序数词，only/very/all】</li><li>I know <strong>something</strong> (that you don’t know.) 【that 指代不定代词,something / everything….】</li><li><strong>Who</strong> is the man （that is so ugly?）【避免与who重复，用that】</li><li>The <strong>man</strong> and his <strong>car</strong> (that I saw just now were very ugly.)【即有人又有物用that】</li></ul></li></ul></li><li><strong>关系代词判断法则</strong>【前提定语从句】<ul><li>空格前无逗号无介词，直接填that；否则不填that<ul><li>Tom has a car <strong>that</strong> is stolen.   【无逗号，无介词】</li></ul></li><li>逗号后，人用 who，物用 which<ul><li>Tom is teacher，<strong>who</strong> is ugly. 【有逗号指代人】</li><li>Tom has a car，<strong>which</strong> is ugly. 【有逗号指代物】</li></ul></li><li>介词后，人用whom，物用 which<ul><li>Tom has a girlfriend with <strong>whom</strong> he often quarrels.【with后指代人】</li><li>Tom has a car in <strong>which</strong> he often quarrels with his girlfriend .【in后指代物】</li></ul></li></ul></li></ul></li><li><strong>关系副词【从句完整】</strong><ul><li><strong>when</strong><ul><li>那会</li><li>I still remember the <strong>days</strong> (when we were young.) 【先行词为时间】</li></ul></li><li><strong>where</strong><ul><li>在那里</li><li>I still remember the <strong>farm</strong> (where we played together.) 【先行词为地点】</li></ul></li><li><strong>why</strong><ul><li>之所以 / 为什么</li><li>The reason （why…） is  (that….)</li><li>The reason (why Jerry cried) was (that Tom was too ugly.)</li></ul></li><li><strong>关系副词解题技巧</strong> <ul><li>非时间即地点，看见reason就选why</li></ul></li></ul></li><li>定语从句中没有 what 和 how</li></ul></li></ol><h1 id="第五章-并列"><a href="#第五章-并列" class="headerlink" title="第五章 并列"></a>第五章 并列</h1><h2 id="5-1-A-and-B"><a href="#5-1-A-and-B" class="headerlink" title="5.1 A and B"></a>5.1 A and B</h2><ul><li>肯定句</li><li>I like <strong>Tom</strong> and <strong>Jerry</strong>.</li></ul><h2 id="5-2-A-or-B"><a href="#5-2-A-or-B" class="headerlink" title="5.2 A or B"></a>5.2 A or B</h2><ul><li>否定句</li><li>I don’t <strong>Tom</strong> or <strong>Jerry</strong>.</li></ul><h2 id="5-3-A-as-well-as-B"><a href="#5-3-A-as-well-as-B" class="headerlink" title="5.3 A as well as B"></a>5.3 A as well as B</h2><ul><li>I like <strong>Tom</strong> as well as <strong>Jerry.</strong></li></ul><h2 id="5-4-not-only-A-but-also-B"><a href="#5-4-not-only-A-but-also-B" class="headerlink" title="5.4 not only A but (also) B"></a>5.4 not only A but (also) B</h2><ul><li>I like not only <strong>singing</strong> but also <strong>dancing</strong>.<ul><li>singing 和 dancing 并列</li></ul></li><li>Tom not only <strong>teaches</strong> Chinese but also <strong>eats</strong> rats.</li><li>Tom runs not only <strong>fast</strong> but also <strong>steady</strong>.</li></ul><h1 id="第六章-形容词"><a href="#第六章-形容词" class="headerlink" title="第六章 形容词"></a>第六章 形容词</h1><h2 id="6-1-什么地方用"><a href="#6-1-什么地方用" class="headerlink" title="6.1 什么地方用"></a>6.1 什么地方用</h2><h3 id="6-1-1-定语"><a href="#6-1-1-定语" class="headerlink" title="6.1.1 定语"></a>6.1.1 定语</h3><ul><li>修饰名词<ul><li>放在名词前面<ul><li>I want  to tell you an <strong>interesting</strong> story.</li></ul></li><li>如果跟其他词搭配，共同修饰一个名词，则需要放在名词后面<ul><li>This is a story (<strong>interesting for me</strong>).</li></ul></li></ul></li><li>修饰不定代词<ul><li>放在不定代词后<ul><li>I want  to tell you something interesting story.</li></ul></li></ul></li></ul><h3 id="6-1-2-表语"><a href="#6-1-2-表语" class="headerlink" title="6.1.2 表语"></a>6.1.2 表语</h3><ul><li>常见的“表语形容词“只能做表语的形容词</li><li>alike、aloud、afraid、asleep、alive、alone、awake…</li></ul><h3 id="6-1-3-补语【宾语补足语】"><a href="#6-1-3-补语【宾语补足语】" class="headerlink" title="6.1.3 补语【宾语补足语】"></a>6.1.3 补语【宾语补足语】</h3><ul><li>I will make the child <strong>happy</strong>. </li><li> I 主 make 谓 child 宾 happy 补语</li></ul><h2 id="6-2-形容词考什么"><a href="#6-2-形容词考什么" class="headerlink" title="6.2 形容词考什么"></a>6.2 形容词考什么</h2><h3 id="6-2-1-名词变形容词"><a href="#6-2-1-名词变形容词" class="headerlink" title="6.2.1 名词变形容词"></a>6.2.1 名词变形容词</h3><ul><li>-ful</li><li>-less</li><li>同根词</li></ul><h3 id="6-2-2-动词变形容词"><a href="#6-2-2-动词变形容词" class="headerlink" title="6.2.2 动词变形容词"></a>6.2.2 动词变形容词</h3><ul><li>-doing【令人…】<ul><li>exciting  令人兴奋的，修饰人</li></ul></li><li>-done【感到…】<ul><li>感到兴奋的，修饰物</li></ul></li><li>-able<ul><li>eatable</li></ul></li></ul><h3 id="6-2-3-形容词比较急最高级"><a href="#6-2-3-形容词比较急最高级" class="headerlink" title="6.2.3 形容词比较急最高级"></a>6.2.3 形容词比较急最高级</h3><ul><li>碰到 as 选原级<ul><li>Tom is as handsome as Jerry.</li></ul></li><li>碰到than选比较级<ul><li>Tom is more handsome than Jerry.</li></ul></li><li>in/of/among最高级<ul><li>Tom is the most handsome man (among/of/in all human beings) in the world.</li></ul></li></ul><h1 id="第七章-副词"><a href="#第七章-副词" class="headerlink" title="第七章 副词"></a>第七章 副词</h1><h2 id="7-1-什么地方用"><a href="#7-1-什么地方用" class="headerlink" title="7.1 什么地方用"></a>7.1 什么地方用</h2><h3 id="7-1-1-修饰动词"><a href="#7-1-1-修饰动词" class="headerlink" title="7.1.1 修饰动词"></a>7.1.1 修饰动词</h3><ul><li>放在be动词之后<ul><li>Tom is <strong>really ugly</strong>.</li></ul></li><li>放在实义动词之前<ul><li>Tom <strong>really likes</strong> bananas.</li></ul></li><li>放在助动词和实义动词之间<ul><li>Tom <strong>should really stop</strong> smoking.</li></ul></li></ul><h2 id="7-1-2-修饰整句"><a href="#7-1-2-修饰整句" class="headerlink" title="7.1.2 修饰整句"></a>7.1.2 修饰整句</h2><ul><li><strong>Unfortunately</strong>，Tom died.</li></ul><h3 id="7-1-3-修饰形容词副词"><a href="#7-1-3-修饰形容词副词" class="headerlink" title="7.1.3 修饰形容词副词"></a>7.1.3 修饰形容词副词</h3><ul><li>Tom is <strong>really ugly</strong>.</li><li>Tom runs <strong>really fast</strong>.</li></ul><h2 id="7-2-副词考什么"><a href="#7-2-副词考什么" class="headerlink" title="7.2 副词考什么"></a>7.2 副词考什么</h2><ul><li>形容词 + ly = 副词</li><li>副词的比较级 / 最高级<ul><li>碰到 as 选原级</li><li>碰到than选比较级</li><li>in/of/among最高级</li></ul></li></ul><h1 id="第八章-介词用法"><a href="#第八章-介词用法" class="headerlink" title="第八章 介词用法"></a>第八章 介词用法</h1><h2 id="8-1-介词搭配靠积累"><a href="#8-1-介词搭配靠积累" class="headerlink" title="8.1 介词搭配靠积累"></a>8.1 介词搭配靠积累</h2><h2 id="8-2-部分介词含义"><a href="#8-2-部分介词含义" class="headerlink" title="8.2 部分介词含义"></a>8.2 部分介词含义</h2><h3 id="8-2-1-in"><a href="#8-2-1-in" class="headerlink" title="8.2.1 in"></a>8.2.1 in</h3><ul><li>表示 ”范围里“</li><li>arrive in + 大地方</li><li>in the evening</li><li>in anger</li><li>in regret</li><li>in danger  在危险里面</li></ul><h3 id="8-2-2-on"><a href="#8-2-2-on" class="headerlink" title="8.2.2 on"></a>8.2.2 on</h3><ul><li>表示 ”吸附“</li><li>a lecture (on science)</li></ul><h3 id="8-2-3-at"><a href="#8-2-3-at" class="headerlink" title="8.2.3 at"></a>8.2.3 at</h3><ul><li>表示 ”点“</li><li>arrive at + 小地点</li><li>at night</li><li>look at</li><li>stare at</li><li>shoot at</li><li>laugh at</li><li>knock at</li><li>aim at</li></ul><h3 id="8-2-4-to"><a href="#8-2-4-to" class="headerlink" title="8.2.4 to"></a>8.2.4 to</h3><ul><li>表示 ”终点“</li><li>go to school</li><li>look forward to xxx</li></ul><h3 id="8-2-5-for"><a href="#8-2-5-for" class="headerlink" title="8.2.5 for"></a>8.2.5 for</h3><ul><li>表示 ”因为、为了“<ul><li>look for</li><li>leave for Beijing</li></ul></li><li>表示”花钱、花时间“<ul><li>I bought this book for 10 dollars</li><li>for a long time</li></ul></li></ul><h3 id="8-2-6-of"><a href="#8-2-6-of" class="headerlink" title="8.2.6 of"></a>8.2.6 of</h3><ul><li>表”修饰“<ul><li>a book (of stories)</li><li>be made of</li></ul></li><li>表”所属“<ul><li>one (of us)</li></ul></li></ul><h3 id="8-2-7-from"><a href="#8-2-7-from" class="headerlink" title="8.2.7 from"></a>8.2.7 from</h3><ul><li>表示”离开”<ul><li>come (from Beijing)</li><li>be made from</li></ul></li></ul><h3 id="8-2-8-over"><a href="#8-2-8-over" class="headerlink" title="8.2.8 over"></a>8.2.8 over</h3><ul><li>表示”正上方 / 越过“</li></ul><h3 id="8-2-9-through"><a href="#8-2-9-through" class="headerlink" title="8.2.9 through"></a>8.2.9 through</h3><ul><li>表示”介质中 / 穿过“</li></ul><h3 id="8-2-10-across"><a href="#8-2-10-across" class="headerlink" title="8.2.10 across"></a>8.2.10 across</h3><ul><li>表示”平面上 /  经过“</li></ul><h3 id="8-2-11-under"><a href="#8-2-11-under" class="headerlink" title="8.2.11 under"></a>8.2.11 under</h3><ul><li>表示”正下方“</li></ul><h3 id="8-2-12-above"><a href="#8-2-12-above" class="headerlink" title="8.2.12 above"></a>8.2.12 above</h3><ul><li>表示在…上方 </li></ul><h3 id="8-2-13-below"><a href="#8-2-13-below" class="headerlink" title="8.2.13 below"></a>8.2.13 below</h3><ul><li>表示在…下方</li></ul><h3 id="8-2-14-beneath"><a href="#8-2-14-beneath" class="headerlink" title="8.2.14 beneath"></a>8.2.14 beneath</h3><ul><li>表示在….下方</li></ul><h3 id="8-2-15-beyond"><a href="#8-2-15-beyond" class="headerlink" title="8.2.15 beyond"></a>8.2.15 beyond</h3><ul><li>表示在…远方 / 超越<ul><li>beyond my immagination</li></ul></li></ul><h3 id="8-2-16-with"><a href="#8-2-16-with" class="headerlink" title="8.2.16 with"></a>8.2.16 with</h3><ul><li>表 伴随</li></ul><h3 id="8-2-17-by"><a href="#8-2-17-by" class="headerlink" title="8.2.17 by"></a>8.2.17 by</h3><ul><li>表倚靠，连用交通工具</li></ul><h3 id="8-2-18-against"><a href="#8-2-18-against" class="headerlink" title="8.2.18 against"></a>8.2.18 against</h3><ul><li>对着</li><li>guarantee sb against sth</li></ul><h3 id="8-2-19-into"><a href="#8-2-19-into" class="headerlink" title="8.2.19 into"></a>8.2.19 into</h3><ul><li>表 往里面靠</li><li>look into</li><li>change into</li></ul><h3 id="8-2-20-out-of"><a href="#8-2-20-out-of" class="headerlink" title="8.2.20 out of"></a>8.2.20 out of</h3><ul><li>表往外面靠</li><li>Get out of here!</li></ul><h3 id="8-2-21-about"><a href="#8-2-21-about" class="headerlink" title="8.2.21 about"></a>8.2.21 about</h3><ul><li>在周围<ul><li>They fly about the bushes</li></ul></li><li>关于<ul><li>Let’s talk about books</li></ul></li></ul><h3 id="8-2-22-around"><a href="#8-2-22-around" class="headerlink" title="8.2.22 around"></a>8.2.22 around</h3><ul><li>在周围</li><li>They fly around the bushes</li></ul><h1 id="第九章-冠词代词固定搭配"><a href="#第九章-冠词代词固定搭配" class="headerlink" title="第九章 冠词代词固定搭配"></a>第九章 冠词代词固定搭配</h1><h2 id="9-1-特指与泛指"><a href="#9-1-特指与泛指" class="headerlink" title="9.1 特指与泛指"></a>9.1 特指与泛指</h2><ul><li>特指明确知道说哪个用the</li><li>泛指随便哪个<ul><li>元音用 an</li><li>辅音用 a</li></ul></li></ul><h2 id="9-2-有the-表具体，无the表抽象"><a href="#9-2-有the-表具体，无the表抽象" class="headerlink" title="9.2 有the 表具体，无the表抽象"></a>9.2 有the 表具体，无the表抽象</h2><ul><li>in hospital    在住院</li><li>in the hospital  在医院里</li><li>乐器前面必须加 the</li></ul><h2 id="9-3-代词"><a href="#9-3-代词" class="headerlink" title="9.3 代词"></a>9.3 代词</h2><ul><li>代指名词</li><li>代指形容词</li></ul><h2 id="9-4-固定搭配"><a href="#9-4-固定搭配" class="headerlink" title="9.4 固定搭配"></a>9.4 固定搭配</h2><ul><li>靠积累</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2022/08/24/Vue%E9%A1%B9%E7%9B%AE/"/>
    <url>/2022/08/24/Vue%E9%A1%B9%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="Vue项目"><a href="#Vue项目" class="headerlink" title="Vue项目"></a>Vue项目</h1><h2 id="第1章-入门"><a href="#第1章-入门" class="headerlink" title="第1章 入门"></a>第1章 入门</h2><ol><li>项目介绍</li><li>工具安装和环境搭建（ndoe.js,npm,mongodb）<ul><li>官网安装node、MongoDB</li></ul></li><li>初始化项目<ul><li>安装脚手架<ul><li><code>npm i -g @vue/cli</code></li></ul></li><li>web端<ul><li><code>vue create web</code> 创建web端项目</li></ul></li><li>后端<ul><li><code>vue create admin</code>创建后台管理界面项目</li></ul></li><li>server端<ul><li><code>npm init -y </code> 初始化服务端项目</li><li>新建服务端入口文件 <code>index.js</code></li><li>全局安装实时刷新插件  <code>npm i -g nodemon</code></li><li>配置服务端入口 <code>&quot;serve&quot;:&quot;nodemon index.js&quot;</code></li></ul></li></ul></li></ol><h2 id="第2章-管理后台"><a href="#第2章-管理后台" class="headerlink" title="第2章 管理后台"></a>第2章 管理后台</h2><ol><li><p>基于<code>Element UI</code>的后台管理界面<code>admin</code></p><ul><li>安装 <code>vue add element</code> </li><li>安装路由 <code>vue add router</code></li><li><code>Main.vue</code>下存放整体布局<ul><li>调整<code>Main.vue</code>布局</li></ul></li></ul></li><li><p>创建分类操作<code>Main.vue</code></p><ul><li><p>分类菜单设置<code>router</code>属性，点击跳转到index指定路由</p><ul><li>```vue<el-menu router :default-openeds="['1', '3']">      <el-submenu index="1">        <template slot="title"><i class="el-icon-message"></i>内容管理</template>        <el-menu-item-group>          <template slot="title">分类</template>          <!-- 跳转到 categories/create /  1-2 -->          <el-menu-item index="/categories/create">新建分类</el-menu-item>          <el-menu-item index="/categories/list">分类列表</el-menu-item>        </el-menu-item-group>              </el-submenu><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs xl"><br>- 因为分类是`Main.vue`的子路由，所以容器设置子路由，包括`<span class="hljs-built_in">path</span>`，对应组件等<br><br>  - ```js<br>    const routes = [<br>      &#123;<br>        <span class="hljs-built_in">path</span>: <span class="hljs-string">&#x27;/&#x27;</span>,<br>        <span class="hljs-keyword">name</span>: <span class="hljs-string">&#x27;main&#x27;</span>,<br>        component: Main,<br>        children:[<br>          <span class="hljs-comment">// 添加子路由 在 Main里面  通过 router-vier显示</span><br>          &#123;<span class="hljs-built_in">path</span>:<span class="hljs-string">&#x27;/categories/create&#x27;</span>,component:CategoryEdit&#125;,<br>          &#123;<span class="hljs-built_in">path</span>:<span class="hljs-string">&#x27;/categories/list&#x27;</span>,component:CategoryList&#125;<br>        ]<br>      &#125;,<br>    ]<br></code></pre></td></tr></table></figure></el-menu></li></ul></li><li><p>给输入框双向绑定，获取数据<code>CategoriesEdit.vue</code></p><ul><li>```vue<br><el-input v-model="model.name"></el-input><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><br>- 保存按钮通过绑定事件，通过`axiso`进行异步请求  `npm i axios`<br><br>- 请求接口通过`http.js`进行<br><br>  - ```js<br>    // 用于请求接口文件<br>    import axios from <span class="hljs-string">&quot;axios&quot;</span><span class="hljs-comment">;</span><br>    const http = axios.create(&#123;<br><span class="hljs-title">        baseURL:&#x27;http://localhost:</span><span class="hljs-number">3000</span>/admin/api&#x27; <br>    &#125;)<br>    export default http<br></code></pre></td></tr></table></figure></li></ul></li><li><p>在<code>main.js</code>使用请求接口</p><ul><li>```js<br>// 使用请求接口<br>import http from ‘./http’<br>// 这样就可以任意文件通过 this.$http 访问<br>Vue.prototype.$http = http<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><br>- 服务端`index.js`写请求接口，安装express，mongoose，cors允许跨域请求 `npm i express@next mongoose cors`<br><br>- 在服务器上连接数据库`plugins/db.js`<br><br>  - ```js<br>    // 数据库接口<br>    module.exports = app =&gt; &#123;<br>        const mongoose = require(<span class="hljs-string">&quot;mongoose&quot;</span>)<br><span class="hljs-title">        mongoose.connect(&#x27;mongodb://127.0.0.1:</span><span class="hljs-number">27017</span>/node-vue-moba&#x27;,&#123;<br><span class="hljs-title">            useNewUrlParser:</span><span class="hljs-literal">true</span><br>        &#125;)<br>    &#125;<br></code></pre></td></tr></table></figure></li></ul></li><li><p>Category模型，存放Category存放的数据<code>models/Category.js</code></p><ul><li>```js<br>const mongoose = require(‘mongoose’)<br>const schema =  new mongoose.Schema({<pre><code class="hljs">name:&#123; type:String &#125;</code></pre>})<br>module.exports = mongoose.model(‘Category’,schema)<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><br>- 子路由文件`<span class="language-javascript">routes/admin/index.<span class="hljs-property">js</span></span>`<br><br>  - ```<span class="language-javascript">js</span><br><span class="language-javascript">    <span class="hljs-comment">// 后端路由</span></span><br><span class="language-javascript">    <span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = <span class="hljs-function"><span class="hljs-params">app</span> =&gt;</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>)</span><br><span class="language-javascript">        <span class="hljs-comment">// express的子路由</span></span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> router = express.<span class="hljs-title class_">Router</span>()</span><br><span class="language-javascript">    </span><br><span class="language-javascript">        <span class="hljs-comment">// 使用 Category模型</span></span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> <span class="hljs-title class_">Category</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;../../models/Category&#x27;</span>)</span><br><span class="language-javascript">    </span><br><span class="language-javascript">        <span class="hljs-comment">// 接口地址</span></span><br><span class="language-javascript">        router.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/categories&#x27;</span>,<span class="hljs-title function_">async</span>(req,res)=&gt;&#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> model = <span class="hljs-keyword">await</span> <span class="hljs-title class_">Category</span>.<span class="hljs-title function_">create</span>(req.<span class="hljs-property">body</span>)</span><br><span class="language-javascript">            <span class="hljs-comment">// 发回给客户端进行接收</span></span><br><span class="language-javascript">            res.<span class="hljs-title function_">send</span>(model)</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">        <span class="hljs-comment">// 接收总路由的路由</span></span><br><span class="language-javascript">        app.<span class="hljs-title function_">use</span>(<span class="hljs-string">&#x27;/admin/api&#x27;</span>,router)</span><br><span class="language-javascript">    &#125;</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>主路由进行接口，跨域，express使用等<code>index.js</code></p><ul><li>```JS<br>//  服务端请求接口<br>const express = require(‘express’)<br>const app = express()<br>// 跨域请求模块<br>app.use(require(‘cors’)())<br>// 使用await 的中间件<br>app.use(express.json())<br>// 将接口文件传给admin 路由 参数与 admin路由参数对应<br>require(‘./routes/admin/index’)(app)<br>// 同理数据库接口<br>require(‘./plugins/db’)(app)<br>app.listen(3000,() =&gt; {<pre><code class="hljs">console.log(&#39;服务器启动成功!,http://localhost:3000&#39;);</code></pre>})<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><br>- save进行post请求<br><br>  - ```vue<br>    &lt;el-form label-width=<span class="hljs-string">&quot;120px&quot;</span> <span class="hljs-meta">@submit</span>.native.prevent=<span class="hljs-string">&quot;save&quot;</span>&gt;<br>    <br>    methods: &#123;<br>    <span class="hljs-comment">// 通过 axios 提交数据</span><br>    async save()<br>    <span class="hljs-comment">// 请求接口</span><br>    <span class="hljs-keyword">const</span> res = await <span class="hljs-keyword">this</span>.$http.post(<span class="hljs-string">&#x27;categories&#x27;</span>,<span class="hljs-keyword">this</span>.model)<br>    <span class="hljs-comment">//  数据发送成功，跳转到 list</span><br>    <span class="hljs-keyword">this</span>.$router.push(<span class="hljs-string">&#x27;/categories/list&#x27;</span>)<br>    <span class="hljs-comment">//  跳转成功提示</span><br>    <span class="hljs-keyword">this</span>.$message(&#123;<br>            type:<span class="hljs-string">&#x27;success&#x27;</span>,<br>            message:<span class="hljs-string">&#x27;保存成功&#x27;</span><br>    &#125;)<br>       &#125;,<br>    &#125;,<br></code></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>列表页<code>CategoriesList.vue</code></p><ul><li><p>表格属性编写</p><ul><li>```vue<el-table :data="items">        <el-table-column prop="_id" label="ID" width="230"></el-table-column>        <el-table-column prop="name" label="分类名称"></el-table-column>      </el-table><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs vim"><br>- 接口地址`routes/admin/<span class="hljs-built_in">index</span>.js`<br><br>  - ```js<br>    // 列表接口地址<br>        router.<span class="hljs-built_in">get</span>(<span class="hljs-string">&#x27;/categories&#x27;</span>,async(req,<span class="hljs-keyword">res</span>)=&gt;&#123;<br>            const <span class="hljs-built_in">items</span> = await Category.<span class="hljs-keyword">find</span>().limit(<span class="hljs-number">10</span>)<br>            // 发回给客户端<span class="hljs-built_in">items</span><br>            <span class="hljs-keyword">res</span>.send(<span class="hljs-built_in">items</span>)<br>        &#125;)<br></code></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>列表页的增删改</p><ul><li><p>修改页面，在<code>CategoryList.vue</code>下，新增一个编辑按钮，编辑的按钮通过id找到对应的分类</p><ul><li>```vue<br>&lt;el-button type=”primary” size=”small” @click=”$router.push(<code>/categories/edit/$&#123;scope.row._id&#125;</code>)”&gt;编辑<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><br>- `router/index.js`下通过id，进行页面跳转，与新建页面公用一个组件<br><br>  - ```js<br>    // 为编辑页面使用跳转的地址,props 将页面id注入CategoryEdit中，然后CategoryEdit接收props<br><span class="hljs-title">          &#123; path:&#x27;/categories/edit/:id&#x27;,component:CategoryEdit,props:</span><span class="hljs-literal">true</span> &#125;,<br></code></pre></td></tr></table></figure></li></ul></li><li><p>在<code>CategoryEdit.vue</code>下，通过props接收到id</p><ul><li>```js<br>props:{ id:{} },<figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml"></span><br><span class="language-xml">- 通过id控制，是否编辑或新建分类</span><br><span class="language-xml"></span><br><span class="language-xml">  - ```html</span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">id</span> ? <span class="hljs-string">&quot;编辑&quot;</span> : <span class="hljs-string">&quot;新建&quot;</span>&#125;&#125;</span><span class="language-xml">分类<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>如果有id执行 <code>fetch</code>方法</p><ul><li>```js<br>async fetch() {<pre><code class="hljs">const res = await this.$http.get(`categories/$&#123;this.id&#125;`)this.model = res.data</code></pre>}created() {<pre><code class="hljs">// 如果有了 id 就是编辑页面 才执行this.id &amp;&amp; this.fetch()</code></pre>},<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><br>- 使用 `put`方法调用编辑页面接口<br><br>  - ```js<br>    async save()&#123;<br>        <span class="hljs-comment">// 数据更新或者新建数据</span><br>        let res<br>        <span class="hljs-comment">// 如果有 ID 则编辑</span><br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.id) &#123;<br>    <span class="hljs-comment">// 请求编辑页面接口   put 方法</span><br>    <span class="hljs-keyword">const</span> res = await <span class="hljs-keyword">this</span>.$http.put(`categories/$&#123;<span class="hljs-keyword">this</span>.id&#125;`,<span class="hljs-keyword">this</span>.model)<br>                        <span class="hljs-comment">// 否则为新建</span><br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                       <span class="hljs-comment">// 请求新建页面接口</span><br>                        <span class="hljs-keyword">const</span> res = await <span class="hljs-keyword">this</span>.$http.post(<span class="hljs-string">&#x27;categories&#x27;</span>,<span class="hljs-keyword">this</span>.model)<br>                    &#125;<br>                    <span class="hljs-comment">//  数据发送成功，跳转到 list</span><br>                    <span class="hljs-keyword">this</span>.$router.push(<span class="hljs-string">&#x27;/categories/list&#x27;</span>)<br>                    <span class="hljs-comment">//  跳转成功提示</span><br>                    <span class="hljs-keyword">this</span>.$message(&#123;<br>                        type:<span class="hljs-string">&#x27;success&#x27;</span>,<br>                        message:<span class="hljs-string">&#x27;保存成功&#x27;</span><br>                    &#125;)<br>                &#125;,<br></code></pre></td></tr></table></figure></li></ul></li><li><p><code>routes/admin/index.js</code>编写编辑页面接口地址</p><ul><li><p>```js<br>// 更新（编辑）列表接口地址</p><pre><code class="hljs"> router.put(&#39;/categories/:id&#39;,async(req,res)=&gt;&#123;    const model = await Category.findByIdAndUpdate(req.params.id,req.body)    // 发回给客户端    res.send(model)&#125;)</code></pre><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><br>- 分类删除<br><br>  - `CategoryList.vue`下获取到当下行的数据<br><br>    - ```vue<br>      &lt;el-button type=<span class="hljs-string">&quot;danger&quot;</span> size=<span class="hljs-string">&quot;small&quot;</span> @click=<span class="hljs-string">&quot;remove(scope.row)&quot;</span>&gt;删除&lt;/el-button&gt;<br></code></pre></td></tr></table></figure></li><li><p>通过<code>remove</code>方法删除</p><ul><li>```js<br>// 删除分类列表<pre><code class="hljs">    async remove(row) &#123;      this.$confirm(`是否确定删除分类?&quot;$&#123;row.name&#125;&quot;`, &#39;提示&#39;, &#123;      confirmButtonText: &#39;确定&#39;,      cancelButtonText: &#39;取消&#39;,      type: &#39;warning&#39;    &#125;).then(async() =&gt; &#123;      // 请求删除接口      const res = await this.$http.delete(`categories/$&#123;row._id&#125;`)      this.$message(&#123;        type: &#39;success&#39;,        message: &#39;删除成功!&#39;      &#125;);      // 重新(刷新页面)获取数据      this.fetch()    &#125;).catch(() =&gt; &#123;      this.$message(&#123;        type: &#39;info&#39;,        message: &#39;已取消删除&#39;      &#125;)             &#125;)    &#125;    // 删除分类结束</code></pre><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><br>- `routes/admin/index.js`下删除的接口<br><br>  - ```js<br>     <span class="hljs-comment">// 通过delete 方法删除列表接口地址</span><br>         router.delete(&#x27;/categories/:id&#x27;,async(req,res)=&gt;&#123;<br>            const model = await <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Category</span>.</span></span>find<span class="hljs-constructor">ByIdAndDelete(<span class="hljs-params">req</span>.<span class="hljs-params">params</span>.<span class="hljs-params">id</span>,<span class="hljs-params">req</span>.<span class="hljs-params">body</span>)</span><br>            <span class="hljs-comment">// 发回给客户端model</span><br>            res.send(&#123;<br>                success:<span class="hljs-literal">true</span><br>            &#125;)<br>        &#125;)<br></code></pre></td></tr></table></figure></li></ul></li></ul></li></ul></li><li><p>子分类</p><ul><li><p><code>CategoryList.vue</code>下，设置上级分类，prop 展示内容为上级分类名称</p><ul><li><p>```vue<br><el-table-column prop="parent.name" label="上级分类"></el-table-column></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml"><br>- `CategoryEdit.vue`下，设置上级分类下拉框，并循环遍历获取到的上级分类名称<br><br>  - ```vue<br>    <span class="hljs-comment">&lt;!-- 子分类开始 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">el-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;上级分类&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">el-select</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;model.parent&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">el-option</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in parents&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item._id&quot;</span></span><br><span class="hljs-tag">                       <span class="hljs-attr">:label</span>=<span class="hljs-string">&quot;item.name&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;item._id&quot;</span></span><br><span class="hljs-tag">                       &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">el-option</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">el-select</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">el-form-item</span>&gt;</span><br>              <span class="hljs-comment">&lt;!-- 子分类结束 --&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>```js<br>// 设置parent数据为空<br>// 上级分类选项</p><pre><code class="hljs">parents:[]</code></pre><p>// 上级分类选项结束</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><br>```<span class="language-javascript">js</span><br><span class="language-javascript"><span class="hljs-comment">// 上级分类接口去分类列表接口一致</span></span><br><span class="language-javascript"><span class="hljs-comment">// 获取上级分类</span></span><br><span class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-title function_">fetchParents</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">$http</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">`categories`</span>)</span><br><span class="language-javascript">    <span class="hljs-variable language_">this</span>.<span class="hljs-property">parents</span> = res.<span class="hljs-property">data</span></span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"><span class="hljs-comment">// 获取上级分类结束</span></span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-title function_">created</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">    <span class="hljs-comment">// 页面开始获取到数据</span></span><br><span class="language-javascript">    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">fetchParents</span>()</span><br><span class="language-javascript">&#125;,</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>服务器端<code>models/index.js</code>设置存储第二级分类的数据类型</p><ul><li>```js<br>// 上级分类<pre><code class="hljs">parent:&#123; type:mongoose.SchemaTypes.ObjectId,ref:&#39;Category&#39; &#125;,</code></pre>// 上级分类结束<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><br>- 重新设置列表接口的数据查出`routes/admin/index.js`<br><br>  - ```js<br>    <span class="hljs-comment">// 列表接口地址</span><br>    router<span class="hljs-selector-class">.get</span>(<span class="hljs-string">&#x27;/categories&#x27;</span>,<span class="hljs-built_in">async</span>(req,res)=&gt;&#123;<br>        <span class="hljs-comment">// 查出ID和完整数据 populate</span><br>        const items = await Category<span class="hljs-selector-class">.find</span>()<span class="hljs-selector-class">.populate</span>(<span class="hljs-string">&#x27;parent&#x27;</span>)<span class="hljs-selector-class">.limit</span>(<span class="hljs-number">10</span>)<br>        <span class="hljs-comment">// 发回给客户端items</span><br>        res<span class="hljs-selector-class">.send</span>(items)<br>    &#125;)<br></code></pre></td></tr></table></figure></li></ul></li></ul></li></ol><h2 id="第3章-通用CRUD接口"><a href="#第3章-通用CRUD接口" class="headerlink" title="第3章 通用CRUD接口"></a>第3章 通用CRUD接口</h2><ol><li><p>安装<code>npm i inflection</code> 插件，该插件将大写转换成小写，单数转复数，因为模型是大写的，接口地址是小写加复数，所以要转换</p></li><li><p>接口使用前缀修改<code>/admin/api/rest/:resource</code>   rest是区别其他接口地址，resource是找到的资源</p><ul><li>```js<br>// 接收总路由的【CRUD通用接口】<br>app.use(‘/admin/api/rest/:resource’,<pre><code class="hljs">    // 当调用接口前使用中间件，将找到的小写改成大写及复数,再去调用接口    async(req,res,next) =&gt; &#123;//  通过 inflection将小写改大写，单数改负数const modelName = require(&#39;inflection&#39;).classify(req.params.resource)// 找到小写路径 inflection转大写及负数req.Model = require(`../../models/$&#123;modelName&#125;`)next()</code></pre>}<br>,router)<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><br><span class="hljs-number">3</span>. 将所有`Category`接口改写成`req.Model`<br><br>   - ```js<br>     <span class="hljs-comment">/*通用接口开始*/</span><br>         <span class="hljs-comment">// 新建列表接口地址</span><br>         router<span class="hljs-selector-class">.post</span>(<span class="hljs-string">&#x27;/&#x27;</span>,<span class="hljs-built_in">async</span>(req,res)=&gt;&#123;<br>             const model = await req<span class="hljs-selector-class">.Model</span><span class="hljs-selector-class">.create</span>(req.body)<br>             <span class="hljs-comment">// 发回给客户端model</span><br>             res<span class="hljs-selector-class">.send</span>(model)<br>         &#125;)<br>          <span class="hljs-comment">// 更新（编辑）列表接口地址</span><br>          router<span class="hljs-selector-class">.put</span>(<span class="hljs-string">&#x27;/:id&#x27;</span>,<span class="hljs-built_in">async</span>(req,res)=&gt;&#123;<br>             const model = await req<span class="hljs-selector-class">.Model</span><span class="hljs-selector-class">.findByIdAndUpdate</span>(req<span class="hljs-selector-class">.params</span><span class="hljs-selector-class">.id</span>,req.body)<br>             <span class="hljs-comment">// 发回给客户端model</span><br>             res<span class="hljs-selector-class">.send</span>(model)<br>         &#125;)<br>     <br>         <span class="hljs-comment">// 列表接口地址</span><br>         router<span class="hljs-selector-class">.get</span>(<span class="hljs-string">&#x27;/&#x27;</span>,<span class="hljs-built_in">async</span>(req,res)=&gt;&#123;<br>             <span class="hljs-comment">// 查出ID和完整数据s</span><br>             const items = await req<span class="hljs-selector-class">.Model</span><span class="hljs-selector-class">.find</span>()<span class="hljs-selector-class">.populate</span>(<span class="hljs-string">&#x27;parent&#x27;</span>)<span class="hljs-selector-class">.limit</span>(<span class="hljs-number">10</span>)<br>             <span class="hljs-comment">// 发回给客户端items</span><br>             res<span class="hljs-selector-class">.send</span>(items)<br>         &#125;)<br>          <span class="hljs-comment">// 编辑页面接口地址</span><br>          router<span class="hljs-selector-class">.get</span>(<span class="hljs-string">&#x27;/:id&#x27;</span>,<span class="hljs-built_in">async</span>(req,res)=&gt;&#123;<br>             const model = await req<span class="hljs-selector-class">.Model</span><span class="hljs-selector-class">.findById</span>(req<span class="hljs-selector-class">.params</span>.id)<br>             <span class="hljs-comment">// 发回给客户端model</span><br>             res<span class="hljs-selector-class">.send</span>(model)<br>         &#125;)<br>     <br>          <span class="hljs-comment">// 删除列表接口地址</span><br>          router<span class="hljs-selector-class">.delete</span>(<span class="hljs-string">&#x27;/:id&#x27;</span>,<span class="hljs-built_in">async</span>(req,res)=&gt;&#123;<br>             const model = await req<span class="hljs-selector-class">.Model</span><span class="hljs-selector-class">.findByIdAndDelete</span>(req<span class="hljs-selector-class">.params</span><span class="hljs-selector-class">.id</span>,req.body)<br>             <span class="hljs-comment">// 发回给客户端model</span><br>             res<span class="hljs-selector-class">.send</span>(&#123;<br>                 success:true<br>             &#125;)<br>         &#125;)<br>         <span class="hljs-comment">/*通用接口结束*/</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>前端页面请求接口的写法为:<code>rest/categories</code></p></li></ol><h3 id="物品装备管理"><a href="#物品装备管理" class="headerlink" title="物品装备管理"></a>物品装备管理</h3><ol><li><p>调整前端页面<code>ItemEdit.vue</code> <code>ItemList.vue</code>,路由，菜单等</p></li><li><p>因为调整了通用接口，所以只需要加模型即可<code>models/Item.js</code></p><ul><li>```js<br>const mongoose = require(‘mongoose’)<br>const schema =  new mongoose.Schema({<pre><code class="hljs">name:&#123; type:String &#125;,icon:&#123; type:String &#125;</code></pre>})<br>module.exports = mongoose.model(‘Item’,schema)<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><br><span class="hljs-comment">### 上传图片</span><br><br><span class="hljs-number">1</span>. 调整前端页面`<span class="hljs-title class_">ItemEdit</span>.vue`<br><br>   - ```vue<br>     &lt;el-form-item label=<span class="hljs-string">&quot;图标&quot;</span>&gt;<br>             &lt;el-upload<br>               class=<span class="hljs-string">&quot;avatar-uploader&quot;</span><br>               <span class="hljs-symbol">:action=<span class="hljs-string">&quot;$http.defaults.baseURL + &#x27;/upload&#x27;&quot;</span></span><br>               <span class="hljs-symbol">:show-file-list=<span class="hljs-string">&quot;false&quot;</span></span><br>               <span class="hljs-symbol">:on-success=<span class="hljs-string">&quot;afterUpload&quot;</span></span><br>             &gt;<br>               &lt;img v-<span class="hljs-keyword">if</span>=<span class="hljs-string">&quot;model.icon&quot;</span> <span class="hljs-symbol">:src=<span class="hljs-string">&quot;model.icon&quot;</span></span> class=<span class="hljs-string">&quot;avatar&quot;</span> /&gt;<br>               &lt;i v-<span class="hljs-keyword">else</span> class=<span class="hljs-string">&quot;el-icon-plus avatar-uploader-icon&quot;</span>&gt;&lt;/i&gt;<br>             &lt;/el-upload&gt;<br>           &lt;/el-form-item&gt;<br></code></pre></td></tr></table></figure></li></ul></li><li><p><code>afterUpload</code>方法</p><ul><li>```js<br>afterUpload(res) {<pre><code class="hljs">  // 上传图片操作  this.$set(this.model,&#39;icon&#39;,res.url)&#125;,</code></pre><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs awk"><br><span class="hljs-number">3</span>. `server<span class="hljs-regexp">/routes/</span>admin/index.js`接口请求  `npm i multer` 将二进制文件转为静态文件<br><br>   - ```js<br>     <span class="hljs-regexp">//</span> 上传图片接口<br>         const multer = require(<span class="hljs-string">&#x27;multer&#x27;</span>)<br>         <span class="hljs-regexp">//</span> 参数为目标地址<br>         const upload = multer(&#123;dest:__dirname + <span class="hljs-string">&#x27;/../../uploads&#x27;</span>&#125;)<br>         <span class="hljs-regexp">//</span> 字段名为 form data里面的 file<br>         app.post(<span class="hljs-string">&#x27;/admin/api/upload&#x27;</span>,upload.single(<span class="hljs-string">&#x27;file&#x27;</span>),async(req,res) =&gt; &#123;<br>             <span class="hljs-regexp">//</span> npm i multer 处理数据中间件<br>             const file = req.file<br>             file.url = `http:<span class="hljs-regexp">//</span>localhost:<span class="hljs-number">3000</span><span class="hljs-regexp">/uploads/</span><span class="hljs-variable">$&#123;file.filename&#125;</span>`<br>             res.send(file)<br>         &#125;)<br>         <span class="hljs-regexp">//</span> 上传图片接口结束<br></code></pre></td></tr></table></figure></li></ul></li><li><p><code>server/index.js</code>将uploads文件下的静态文件展示给前端</p><ul><li>```js<br>// 表示 uploads下文件都是静态文件用于展示给前端<br>app.use(‘/uploads’,express.static(__dirname + ‘/uploads’))<figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><br><span class="hljs-number">5.</span> `ItemList.vue`前端展示<br><br>   - ```vue<br>     &lt;el-<span class="hljs-keyword">table</span>-<span class="hljs-keyword">column</span> prop=&quot;icon&quot; label=&quot;图标&quot;&gt;<br>             &lt;<span class="hljs-keyword">template</span> slot-scope=&quot;scope&quot;&gt;<br>                 &lt;img :src=&quot;scope.row.icon&quot; style=&quot;height:3rem;&quot;&gt;<br>             &lt;/<span class="hljs-keyword">template</span>&gt;<br>           &lt;/el-<span class="hljs-keyword">table</span>-<span class="hljs-keyword">column</span>&gt;<br></code></pre></td></tr></table></figure></li></ul></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/"/>
    <url>/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="四六级"><a href="#四六级" class="headerlink" title="四六级"></a>四六级</h1><h2 id="段落匹配"><a href="#段落匹配" class="headerlink" title="段落匹配"></a>段落匹配</h2><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-03-27_15-14-21.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-03-27_15-15-18.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-03-27_15-18-49.png"></p><h3 id="答题步骤"><a href="#答题步骤" class="headerlink" title="答题步骤"></a>答题步骤</h3><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-03-27_15-21-23.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-03-27_15-20-44.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-03-27_15-25-44.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-03-29_11-03-22.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-03-29_11-03-32.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-03-29_11-09-38.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-03-29_11-17-11.png"></p><h2 id="仔细阅读"><a href="#仔细阅读" class="headerlink" title="仔细阅读"></a>仔细阅读</h2><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_14-34-14.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_14-34-20.png"></p><h3 id="答题步骤-1"><a href="#答题步骤-1" class="headerlink" title="答题步骤"></a>答题步骤</h3><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_14-35-29.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_14-40-42.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_14-42-47.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_16-08-05.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_16-07-16.png"></p><h3 id="选考题型"><a href="#选考题型" class="headerlink" title="选考题型"></a>选考题型</h3><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_16-29-07.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_16-29-38.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_16-42-17.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_16-42-42.png"></p><h4 id><a href="#" class="headerlink" title></a><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_16-46-56.png"></h4><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_16-49-07.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_16-49-48.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_16-50-36.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_16-51-10.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_16-51-37.png"></p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_17-00-24.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_17-01-18.png"></p><p><img src="/2022/08/24/%E5%9B%9B%E5%85%AD%E7%BA%A7/assets/%E5%9B%9B%E5%85%AD%E7%BA%A7/Snipaste_2022-04-09_17-02-04.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第5章数据库</title>
    <link href="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <url>/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<h1 id="第5章数据库"><a href="#第5章数据库" class="headerlink" title="第5章数据库"></a>第5章数据库</h1><h2 id="概念数据模型"><a href="#概念数据模型" class="headerlink" title="概念数据模型"></a>概念数据模型</h2><p><img src="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/Snipaste_2022-05-08_22-53-08.png"></p><p><img src="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/Snipaste_2022-05-09_21-15-53.png"></p><p><img src="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/Snipaste_2022-05-09_21-16-43.png"></p><p><img src="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/Snipaste_2022-05-09_21-41-05.png"></p><p><img src="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/Snipaste_2022-05-09_21-42-37.png"></p><h2 id="结构数据模型"><a href="#结构数据模型" class="headerlink" title="结构数据模型"></a>结构数据模型</h2><p><img src="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/Snipaste_2022-05-09_21-44-18.png"></p><p><img src="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/Snipaste_2022-05-09_21-44-48.png"></p><p><img src="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/Snipaste_2022-05-09_21-45-24.png"></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/Snipaste_2022-05-09_21-48-53.png"></p><h2 id="数据库的三级模式结构"><a href="#数据库的三级模式结构" class="headerlink" title="数据库的三级模式结构"></a>数据库的三级模式结构</h2><p><img src="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/Snipaste_2022-05-09_21-51-00.png"></p><p><img src="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/Snipaste_2022-05-09_22-25-08.png"></p><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/Snipaste_2022-05-09_22-26-50.png"></p><h2 id="两级映像"><a href="#两级映像" class="headerlink" title="两级映像"></a>两级映像</h2><p><img src="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/Snipaste_2022-05-09_23-24-10.png"></p><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/Snipaste_2022-05-09_23-24-40.png"></p><p><img src="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/Snipaste_2022-05-09_23-25-20.png"></p><h2 id="关系模型中的基本术语"><a href="#关系模型中的基本术语" class="headerlink" title="关系模型中的基本术语"></a>关系模型中的基本术语</h2><p><img src="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/Snipaste_2022-05-09_23-29-46.png"></p><p><img src="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/Snipaste_2022-05-09_23-29-54.png"></p><h2 id="关系模型的定义"><a href="#关系模型的定义" class="headerlink" title="关系模型的定义"></a>关系模型的定义</h2><p><img src="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/Snipaste_2022-05-09_23-31-12.png"></p><p><img src="/2022/08/24/%E7%AC%AC5%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93/Snipaste_2022-05-09_23-34-22.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第4章知识产权</title>
    <link href="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/"/>
    <url>/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/</url>
    
    <content type="html"><![CDATA[<h1 id="第4章知识产权"><a href="#第4章知识产权" class="headerlink" title="第4章知识产权"></a>第4章知识产权</h1><h2 id="著作权"><a href="#著作权" class="headerlink" title="著作权"></a>著作权</h2><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-13-53.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-14-16.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-15-12.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-17-52.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-15-32.png"></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-16-22.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-16-53.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-17-24.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-18-27.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-19-10.png"></p><h2 id="计算机软件著作权"><a href="#计算机软件著作权" class="headerlink" title="计算机软件著作权"></a>计算机软件著作权</h2><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-21-20.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-21-59.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-23-57.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-24-16.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-24-44.png"></p><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-25-27.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-26-01.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-26-31.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-26-48.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-27-07.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-27-26.png"></p><h2 id="计算机软件著作权的归属"><a href="#计算机软件著作权的归属" class="headerlink" title="计算机软件著作权的归属"></a>计算机软件著作权的归属</h2><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-28-27.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-28-55.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-34-32.png"></p><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-29-55.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-30-29.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-30-55.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-31-18.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-32-24.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-32-45.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-33-08.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-33-26.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-33-08-16520204382581.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-35-17.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-35-49.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-37-55.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-38-46.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-39-15.png"></p><h2 id="计算机软件商业秘密权"><a href="#计算机软件商业秘密权" class="headerlink" title="计算机软件商业秘密权"></a>计算机软件商业秘密权</h2><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-40-28.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-40-43.png"></p><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-41-09.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-41-39.png"></p><h2 id="专利申请"><a href="#专利申请" class="headerlink" title="专利申请"></a>专利申请</h2><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-42-25.png"></p><h3 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-43-22.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-44-00.png"></p><h2 id="商标权"><a href="#商标权" class="headerlink" title="商标权"></a>商标权</h2><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-44-47.png"></p><h3 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-45-13.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-45-35.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-46-29.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-47-26.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-47-55.png"></p><h2 id="杂题选讲"><a href="#杂题选讲" class="headerlink" title="杂题选讲"></a>杂题选讲</h2><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-48-51.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-49-05.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-49-27.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-49-45.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-50-05.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-50-30.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-50-53.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-51-11.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-51-29.png"></p><p><img src="/2022/08/24/%E7%AC%AC4%E7%AB%A0%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/Snipaste_2022-05-08_22-51-47.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第3章数据结构</title>
    <link href="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <url>/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<h1 id="第3章数据结构"><a href="#第3章数据结构" class="headerlink" title="第3章数据结构"></a>第3章数据结构</h1><h2 id="大O表示法"><a href="#大O表示法" class="headerlink" title="大O表示法"></a>大O表示法</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-20_11-15-14.png"></p><h2 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-20_20-32-12.png"></p><h2 id="空间复杂度"><a href="#空间复杂度" class="headerlink" title="空间复杂度"></a>空间复杂度</h2><p>无</p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-20_20-39-06.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-20_20-48-31.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-20_20-50-18.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-20_20-51-28.png"></p><h2 id="渐进符号"><a href="#渐进符号" class="headerlink" title="渐进符号"></a>渐进符号</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-20_20-56-56.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-20_21-01-57.png"></p><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-20_21-34-47.png"></p><h2 id="递归式时间、空间复杂度"><a href="#递归式时间、空间复杂度" class="headerlink" title="递归式时间、空间复杂度"></a>递归式时间、空间复杂度</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-20_22-01-54.png"></p><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-20_22-04-18.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-20_22-08-35.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-20_22-10-43.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-20_22-17-57.png"></p><h2 id="线性结构"><a href="#线性结构" class="headerlink" title="线性结构"></a>线性结构</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-20_22-35-52.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_21-47-31.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_22-03-34.png"></p><h2 id="顺序表插入、删除、查找时间复杂度"><a href="#顺序表插入、删除、查找时间复杂度" class="headerlink" title="顺序表插入、删除、查找时间复杂度"></a>顺序表插入、删除、查找时间复杂度</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_22-51-13.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_22-52-23.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_22-53-48.png"></p><h2 id="单链表插入"><a href="#单链表插入" class="headerlink" title="单链表插入"></a>单链表插入</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_22-18-41.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_22-42-47.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_22-56-22.png"></p><h2 id="单链表删除"><a href="#单链表删除" class="headerlink" title="单链表删除"></a>单链表删除</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_22-58-31.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_22-59-17.png"></p><h2 id="单链表查找"><a href="#单链表查找" class="headerlink" title="单链表查找"></a>单链表查找</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_23-00-09.png"></p><h2 id="循环单链表"><a href="#循环单链表" class="headerlink" title="循环单链表"></a>循环单链表</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_23-02-29.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_23-03-16.png"></p><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_23-07-30.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_23-13-43.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_23-16-15.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_23-17-57.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_23-18-42.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_23-21-01.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_23-22-18.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-23_23-23-38.png"></p><h2 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_21-43-47.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_21-50-22.png"></p><h3 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_21-51-13.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_21-53-31.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_21-55-54.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_21-59-34.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-01-17.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-02-39.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-03-10.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-07-20.png"></p><h2 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-16-36.png"></p><h3 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-27-23.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-30-20.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-35-28.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-37-03.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-41-35.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-42-04.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-43-09.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-47-15.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-50-24.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-51-19.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-54-00.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-55-10.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-57-13.png"></p><h2 id="串"><a href="#串" class="headerlink" title="串"></a>串</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-57-43.png"></p><h3 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_22-59-33.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-24_23-01-53.png"></p><h2 id="串的模式匹配和朴素算法"><a href="#串的模式匹配和朴素算法" class="headerlink" title="串的模式匹配和朴素算法"></a>串的模式匹配和朴素算法</h2><h2 id="串的next值运算"><a href="#串的next值运算" class="headerlink" title="串的next值运算"></a>串的next值运算</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_20-17-27.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_20-24-32.png"></p><h3 id="题目-7"><a href="#题目-7" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_20-30-11.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_20-37-51.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_20-40-25.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_20-41-34.png"></p><h2 id="一维数组和二维数组"><a href="#一维数组和二维数组" class="headerlink" title="一维数组和二维数组"></a>一维数组和二维数组</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_21-06-16.png"></p><h3 id="题目-8"><a href="#题目-8" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_21-08-51.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_21-13-09.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_21-13-55.png"></p><h2 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_21-19-10.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_21-42-29.png"></p><p><img src><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_21-59-57.png" alt="Snipaste_2022-04-25_21-59-57"></p><h3 id="题目-9"><a href="#题目-9" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-04-15.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-05-06.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-07-15.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-08-16.png"><br><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-09-02.png"><br><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-09-37.png"><br><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-11-11.png"></p><h2 id="树"><a href="#树" class="headerlink" title="树"></a>树</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-11-44.png"><br><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-12-08.png"><br><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-15-44.png"><br><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-17-33.png"><br><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-24-10.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-28-13.png"></p><h3 id="题目-10"><a href="#题目-10" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-32-54.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-35-51.png"></p><h2 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-36-58.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-42-15.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-45-35.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-46-40.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-52-34.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-54-18.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-56-06.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-56-41.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_22-57-40.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_23-00-15.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_23-05-40.png"></p><h2 id="二叉树的存储"><a href="#二叉树的存储" class="headerlink" title="二叉树的存储"></a>二叉树的存储</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_23-07-01.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_23-08-43.png"></p><h3 id="题目-11"><a href="#题目-11" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_23-10-31.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_23-13-27.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_23-14-01.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-25_23-14-42.png"></p><h2 id="二叉树的遍历算法"><a href="#二叉树的遍历算法" class="headerlink" title="二叉树的遍历算法"></a>二叉树的遍历算法</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-27_21-59-23.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-27_22-00-19.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-27_22-00-55.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-27_22-01-30.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-27_23-02-41.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-27_23-05-37.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-27_23-06-56.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-27_23-07-42.png"></p><h2 id="题目-12"><a href="#题目-12" class="headerlink" title="题目"></a>题目</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-27_23-09-46.png"></p><p><strong>————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-27_23-12-14.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-27_23-15-04.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-27_23-17-01.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-27_23-18-41.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-27_23-21-05.png"></p><h2 id="平衡二叉树"><a href="#平衡二叉树" class="headerlink" title="平衡二叉树"></a>平衡二叉树</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-04-27_23-25-58.png"></p><h2 id="二叉排序树"><a href="#二叉排序树" class="headerlink" title="二叉排序树"></a>二叉排序树</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_20-21-34.png"></p><h2 id="二叉排序树的构造"><a href="#二叉排序树的构造" class="headerlink" title="二叉排序树的构造"></a>二叉排序树的构造</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_20-29-19.png"></p><h3 id="题目-13"><a href="#题目-13" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_20-30-14.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_20-31-05.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_20-34-41.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_20-38-06.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_20-39-28.png"></p><h2 id="最优二叉树（哈夫曼树）"><a href="#最优二叉树（哈夫曼树）" class="headerlink" title="最优二叉树（哈夫曼树）"></a>最优二叉树（哈夫曼树）</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_20-45-29.png"></p><h2 id="哈夫曼树构造"><a href="#哈夫曼树构造" class="headerlink" title="哈夫曼树构造"></a>哈夫曼树构造</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_20-51-09.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_21-03-14.png"></p><h2 id="哈夫曼编码定义"><a href="#哈夫曼编码定义" class="headerlink" title="哈夫曼编码定义"></a>哈夫曼编码定义</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_21-13-47.png"></p><h2 id="哈夫曼编码压缩比"><a href="#哈夫曼编码压缩比" class="headerlink" title="哈夫曼编码压缩比"></a>哈夫曼编码压缩比</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_21-24-54.png"></p><h3 id="题目-14"><a href="#题目-14" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_21-25-32.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_21-26-09.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_21-27-31.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_21-41-08.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_21-42-42.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_21-45-43.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_21-47-22.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_21-58-33.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_22-03-26.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_22-06-08.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-05_22-11-57.png"></p><h2 id="建立线索二叉树"><a href="#建立线索二叉树" class="headerlink" title="建立线索二叉树"></a>建立线索二叉树</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-06_20-26-27.png"></p><h3 id="题目-15"><a href="#题目-15" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-06_21-10-38.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-06_22-06-17.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-06_23-17-20.png"></p><h2 id="图"><a href="#图" class="headerlink" title="图"></a>图</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-06_23-26-21.png"></p><h2 id="有向图和无向图"><a href="#有向图和无向图" class="headerlink" title="有向图和无向图"></a>有向图和无向图</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-06_23-28-33.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-06_23-30-14.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-06_23-32-04.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-06_23-43-01.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-06_23-49-36.png"></p><h2 id="图的存储结构"><a href="#图的存储结构" class="headerlink" title="图的存储结构"></a>图的存储结构</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-06_23-51-49.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-06_23-53-35.png"></p><h2 id="稠密图和稀疏图"><a href="#稠密图和稀疏图" class="headerlink" title="稠密图和稀疏图"></a>稠密图和稀疏图</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-06_23-55-21.png"></p><h2 id="网"><a href="#网" class="headerlink" title="网"></a>网</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_00-02-33.png"></p><h3 id="题目-16"><a href="#题目-16" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-06_23-50-24.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-06_23-50-50.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-06_23-55-55.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-06_23-59-04.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_00-00-17.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_00-01-31.png"></p><h2 id="图的遍历"><a href="#图的遍历" class="headerlink" title="图的遍历"></a>图的遍历</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_20-42-51.png"></p><h2 id="深度优先搜索-DFS"><a href="#深度优先搜索-DFS" class="headerlink" title="深度优先搜索(DFS)"></a>深度优先搜索(DFS)</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_20-57-04.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_20-57-50.png"></p><h2 id="广度优先搜索-BFS"><a href="#广度优先搜索-BFS" class="headerlink" title="广度优先搜索(BFS)"></a>广度优先搜索(BFS)</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_21-02-48.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_21-03-15.png"></p><h3 id="题目-17"><a href="#题目-17" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_21-04-34.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_21-06-29.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_21-07-56.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_21-08-21.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_21-13-53.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_21-17-26.png"></p><h2 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a>拓扑排序</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_21-22-12.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_21-25-56.png"></p><h3 id="题目-18"><a href="#题目-18" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_21-27-35.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_21-28-56.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_21-29-52.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_21-31-21.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_21-32-45.png"></p><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_22-00-50.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_22-01-07-16519320928851.png"></p><h2 id="静态查找表的查找方法"><a href="#静态查找表的查找方法" class="headerlink" title="静态查找表的查找方法"></a>静态查找表的查找方法</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_22-07-01.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_22-18-12.png"></p><h3 id="题目-19"><a href="#题目-19" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_22-33-40.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_22-34-44.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_22-40-37.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_22-41-34.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_22-43-43.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_22-45-17.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_22-52-24.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_22-57-54.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_23-01-34.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_23-06-25.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_23-11-18.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-07_23-15-16.png"></p><h2 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_15-23-18.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_15-27-50-16519949411811.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_15-37-41.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_15-43-26.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_15-47-32.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_15-49-54.png"></p><h3 id="题目-20"><a href="#题目-20" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_15-50-39.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_15-54-44.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_15-55-15.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_15-55-38.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_15-56-02.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_15-58-49.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_16-03-42.png"></p><h2 id="小顶堆和大顶堆"><a href="#小顶堆和大顶堆" class="headerlink" title="小顶堆和大顶堆"></a>小顶堆和大顶堆</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_16-06-29.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_16-09-27.png"></p><h3 id="题目-21"><a href="#题目-21" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_16-12-19.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_16-16-13.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_16-17-29.png"></p><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_16-23-19.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_16-23-46.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_16-35-35.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_20-23-50.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_20-30-19.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_20-46-39.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_21-05-16.png"></p><p> <img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_21-44-26.png"></p><h3 id="题目-22"><a href="#题目-22" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_20-25-10.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_20-26-01.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_20-27-18.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_20-27-52.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_20-34-25.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_20-37-49.png"></p><p> <img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_21-21-02.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_21-25-31.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_21-27-13.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_21-33-16.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_21-45-04.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_21-46-34.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_21-53-19.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_21-54-20.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_21-58-17.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_21-59-49.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_22-02-02.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_22-06-30.png"></p><h2 id="杂题选讲"><a href="#杂题选讲" class="headerlink" title="杂题选讲"></a>杂题选讲</h2><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_22-07-25.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_22-07-50.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_22-08-12.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_22-08-35.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_22-08-55.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_22-09-20.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_22-09-41.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_22-10-07.png"></p><p><img src="/2022/08/24/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Snipaste_2022-05-08_22-10-35.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第2章程序设计语言</title>
    <link href="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/"/>
    <url>/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/</url>
    
    <content type="html"><![CDATA[<h1 id="第2章程序设计语言"><a href="#第2章程序设计语言" class="headerlink" title="第2章程序设计语言"></a>第2章程序设计语言</h1><h2 id="程序设计语言的基本概念"><a href="#程序设计语言的基本概念" class="headerlink" title="程序设计语言的基本概念"></a>程序设计语言的基本概念</h2><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-16_22-17-45.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_22-11-30.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_22-11-39.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_22-13-00.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_22-13-44.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_22-14-19.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_22-15-34.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_22-16-12.png"></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_22-20-43.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_22-21-13.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_22-26-20.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_22-27-28.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_22-29-53.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_22-30-56.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_22-31-46.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_22-33-15.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_22-46-33.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_22-51-09.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_22-54-01.png"></p><h2 id="传值调用与传地址调用"><a href="#传值调用与传地址调用" class="headerlink" title="传值调用与传地址调用"></a>传值调用与传地址调用</h2><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_23-00-12.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_23-08-10.png"></p><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_23-09-42.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_23-10-42.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_23-11-28.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_23-12-21.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_23-13-10.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_23-13-36.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_23-14-17.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_23-21-03.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_23-26-27.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_23-28-00.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_23-29-42.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_23-31-00.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_23-34-34.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_23-39-12.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_23-43-54.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-17_23-58-13.png"></p><h2 id="编译、解释程序翻译阶段"><a href="#编译、解释程序翻译阶段" class="headerlink" title="编译、解释程序翻译阶段"></a>编译、解释程序翻译阶段</h2><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_20-22-10.png"></p><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_20-24-31.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_20-25-51.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_20-26-23.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_20-29-15.png"></p><h2 id="符号表"><a href="#符号表" class="headerlink" title="符号表"></a>符号表</h2><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_20-30-14.png"></p><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_20-31-17.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_20-31-52.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_20-32-22.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_20-32-49.png"></p><h2 id="词法分析"><a href="#词法分析" class="headerlink" title="词法分析"></a>词法分析</h2><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_20-39-25.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_20-39-45.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_20-40-40.png"></p><h2 id="语法分析"><a href="#语法分析" class="headerlink" title="语法分析"></a>语法分析</h2><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_20-46-51.png"></p><h2 id="语义分析"><a href="#语义分析" class="headerlink" title="语义分析"></a>语义分析</h2><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_20-51-57.png"></p><h2 id="目标代码生成"><a href="#目标代码生成" class="headerlink" title="目标代码生成"></a>目标代码生成</h2><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_20-54-22.png"></p><h2 id="语义分析动态语义错误"><a href="#语义分析动态语义错误" class="headerlink" title="语义分析动态语义错误"></a>语义分析动态语义错误</h2><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-11-30.png"></p><h2 id="中间代码生成"><a href="#中间代码生成" class="headerlink" title="中间代码生成"></a>中间代码生成</h2><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-19-39.png"></p><h3 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_20-56-43.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-01-28.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-01-47.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-02-20.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-02-49.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-03-23.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-03-51.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-04-17.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-04-35.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-05-06.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-06-32.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-07-04.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-13-11.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-14-25.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-15-45.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-17-19.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-18-26.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-21-10.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-21-42.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-22-04.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-22-46.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-23-19.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-23-55.png"></p><h2 id="正规式（词法分析工具）"><a href="#正规式（词法分析工具）" class="headerlink" title="正规式（词法分析工具）"></a>正规式（词法分析工具）</h2><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-32-58.png"></p><h3 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-38-11.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-40-35.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-42-27.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-46-59.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_21-52-38.png"></p><h2 id="有限自动机"><a href="#有限自动机" class="headerlink" title="有限自动机"></a>有限自动机</h2><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_22-23-49.png"></p><h3 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_22-25-42.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_22-30-05.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_22-31-38.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_22-32-55.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_22-35-17.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_22-36-50.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_22-42-14.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_22-43-19.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_22-44-17.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_22-45-35.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_22-46-47.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_22-48-02.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_22-50-09.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_22-51-35.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_22-52-56.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_22-55-04.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_22-56-50.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_23-00-14.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_23-02-53.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-18_23-05-51.png"></p><h2 id="上下文无关文法"><a href="#上下文无关文法" class="headerlink" title="上下文无关文法"></a>上下文无关文法</h2><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_20-15-13.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_20-21-01.png"></p><h3 id="题目-7"><a href="#题目-7" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_20-24-47.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_20-31-48.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_20-32-25.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_20-32-58.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_20-33-31.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_20-35-51.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_20-49-27.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_20-52-20.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_20-55-33.png"></p><h2 id="中缀、后缀表达式转换"><a href="#中缀、后缀表达式转换" class="headerlink" title="中缀、后缀表达式转换"></a>中缀、后缀表达式转换</h2><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_20-59-25.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_21-03-22.png"></p><h2 id="语法树中、后序遍历"><a href="#语法树中、后序遍历" class="headerlink" title="语法树中、后序遍历"></a>语法树中、后序遍历</h2><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_21-18-50.png"></p><h3 id="题目-8"><a href="#题目-8" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_21-29-34.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_21-36-24.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_21-37-51.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_21-39-03.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_21-41-53.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_21-42-39.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Users/JiayA/Desktop/Snipaste_2022-04-19_21-43-04.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_21-44-03.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_21-45-10.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_21-47-52.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_21-48-35.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_21-49-27.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_21-50-53.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_21-51-35.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-19_21-53-34.png"></p><h2 id="杂题选讲"><a href="#杂题选讲" class="headerlink" title="杂题选讲"></a>杂题选讲</h2><h3 id="题目-9"><a href="#题目-9" class="headerlink" title="题目"></a>题目</h3><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-31-06.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-33-00.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-35-34.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-36-26.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-36-54.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-38-12.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-40-09.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-40-54.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-42-31.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-44-07.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-44-45.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-45-16.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-46-21.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-47-24.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-49-09.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-50-13.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-52-04.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-52-35.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-53-04.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-53-31.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-54-41.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-55-55.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-56-30.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-57-54.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-58-51.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_10-59-46.png"></p><p><img src="/2022/08/24/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/Snipaste_2022-04-20_11-01-14.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第1章计算机基础</title>
    <link href="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h1 id="第1章计算机基础"><a href="#第1章计算机基础" class="headerlink" title="第1章计算机基础"></a>第1章计算机基础</h1><h2 id="计算机系统硬件基本组成"><a href="#计算机系统硬件基本组成" class="headerlink" title="计算机系统硬件基本组成"></a>计算机系统硬件基本组成</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-24_22-13-05.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-24_22-14-07.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-26_20-05-48.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-26_20-18-46.png"></p><h2 id="计算机系统硬件基本组成题目"><a href="#计算机系统硬件基本组成题目" class="headerlink" title="计算机系统硬件基本组成题目"></a>计算机系统硬件基本组成题目</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-24_22-15-41.png" alt="Snipaste_2022-03-24_22-15-41"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-26_20-06-29.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-26_20-26-08.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-26_20-28-00.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-26_20-29-06.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-26_20-31-20.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-26_20-33-04.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-26_20-34-31.png"></p><p>————————————————————————————————————————</p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-26_20-36-08.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-26_20-36-46.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-26_20-38-41.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-26_20-43-55.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-26_20-47-03.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-26_20-47-54.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-26_20-48-42.png"></p><h2 id="计算机基本单位"><a href="#计算机基本单位" class="headerlink" title="计算机基本单位"></a>计算机基本单位</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-29_21-43-46.png"></p><h2 id="十进制与二进制"><a href="#十进制与二进制" class="headerlink" title="十进制与二进制"></a>十进制与二进制</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-29_21-56-45.png"></p><h2 id="十六进制"><a href="#十六进制" class="headerlink" title="十六进制"></a>十六进制</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-29_22-07-40.png"></p><h2 id="进制加减法"><a href="#进制加减法" class="headerlink" title="进制加减法"></a>进制加减法</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-29_22-25-40.png"></p><h3 id="进制加减法题目"><a href="#进制加减法题目" class="headerlink" title="进制加减法题目"></a>进制加减法题目</h3><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-29_22-41-29.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-29_22-46-51.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-31_22-48-00.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-03-31_22-53-44.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-04_22-27-35.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-04_22-33-01.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-04_22-36-25.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-04_22-40-30.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-04_22-43-24.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-04_22-46-44.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-04_22-49-06.png"></p><h2 id="数据表示【原、反、补、移码】"><a href="#数据表示【原、反、补、移码】" class="headerlink" title="数据表示【原、反、补、移码】"></a>数据表示【原、反、补、移码】</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-05_16-55-32.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-05_17-00-09.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-05_17-13-37.png"></p><h2 id="原、反、补、移码范围"><a href="#原、反、补、移码范围" class="headerlink" title="原、反、补、移码范围"></a>原、反、补、移码范围</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-05_17-21-54.png"></p><h3 id="数据表示题目"><a href="#数据表示题目" class="headerlink" title="数据表示题目"></a>数据表示题目</h3><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-05_17-25-04.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-05_17-28-50.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-05_17-31-25.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-05_17-32-19.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-05_17-33-13.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-05_17-39-29.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-05_17-40-26.png"></p><h2 id="浮点数和规格浮点数"><a href="#浮点数和规格浮点数" class="headerlink" title="浮点数和规格浮点数"></a>浮点数和规格浮点数</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-07_22-31-14.png"></p><h3 id="浮点数题目"><a href="#浮点数题目" class="headerlink" title="浮点数题目"></a>浮点数题目</h3><h3 id><a href="#" class="headerlink" title></a><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-07_22-47-51.png"></h3><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-07_22-52-15.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-07_22-56-07.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-07_22-58-24.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-09_22-49-16.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-09_22-49-49.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-09_22-51-06.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-09_22-57-13.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-09_23-00-35.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-09_23-00-56.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-09_23-07-56.png"></p><h2 id="寻址"><a href="#寻址" class="headerlink" title="寻址"></a>寻址</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-09_23-14-56.png"></p><h3 id="寻址题目"><a href="#寻址题目" class="headerlink" title="寻址题目"></a>寻址题目</h3><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-09_23-16-39.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-09_23-18-31.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-09_23-19-48.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-09_23-23-20.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-09_23-24-05.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-09_23-24-53.png"></p><h2 id="奇偶校验码"><a href="#奇偶校验码" class="headerlink" title="奇偶校验码"></a>奇偶校验码</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_22-37-10.png"></p><h2 id="海明码"><a href="#海明码" class="headerlink" title="海明码"></a>海明码</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_22-39-07.png"></p><h2 id="循环冗余校验码"><a href="#循环冗余校验码" class="headerlink" title="循环冗余校验码"></a>循环冗余校验码</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_22-42-09.png"></p><h3 id="校验码题目"><a href="#校验码题目" class="headerlink" title="校验码题目"></a>校验码题目</h3><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_22-40-25.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_22-44-09.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_22-46-08.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_22-47-20.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_22-48-40.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_22-50-57.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_22-52-20.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_22-54-53.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_22-56-53.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_22-57-36.png"></p><h2 id="RISC-和-CISC"><a href="#RISC-和-CISC" class="headerlink" title="RISC 和 CISC"></a>RISC 和 CISC</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_23-00-51.png"></p><h3 id="RISC和CISC题目"><a href="#RISC和CISC题目" class="headerlink" title="RISC和CISC题目"></a>RISC和CISC题目</h3><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_23-02-43.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_23-03-49.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_23-04-28.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_23-05-11.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_23-06-25.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_23-08-29.png"></p><h2 id="流水线公式和概念"><a href="#流水线公式和概念" class="headerlink" title="流水线公式和概念"></a>流水线公式和概念</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_23-21-05.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_23-28-18.png"></p><h3 id="流水线题目"><a href="#流水线题目" class="headerlink" title="流水线题目"></a>流水线题目</h3><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_23-30-45.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_23-32-18.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_23-32-50.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_23-33-48.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_23-39-50.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_23-41-52.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_23-43-47.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_23-46-48.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_23-47-43.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-11_23-48-45.png"></p><h2 id="存储器"><a href="#存储器" class="headerlink" title="存储器"></a>存储器</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_17-06-14.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_17-06-50.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_17-08-11.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_17-08-46.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_18-15-51.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_18-20-15.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_18-22-09.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_18-25-00.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_18-25-53.png"></p><h3 id="存储器题目"><a href="#存储器题目" class="headerlink" title="存储器题目"></a>存储器题目</h3><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_17-10-40.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_17-11-18.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_17-11-45.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_17-12-37.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_17-13-02.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_17-15-31.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_17-17-06.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_17-19-38.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_17-19-59.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_18-28-41.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_18-30-42.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_18-32-07.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_18-33-47.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_18-34-35.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_18-35-00.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_18-35-23.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_18-35-43.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_18-36-11.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_18-36-32.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_18-36-56.png"></p><h2 id="中断"><a href="#中断" class="headerlink" title="中断"></a>中断</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_22-33-07.png"></p><h3 id="中断题目"><a href="#中断题目" class="headerlink" title="中断题目"></a>中断题目</h3><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_22-34-22.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_22-36-55.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_22-37-31.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_22-38-08.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_22-38-37.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_22-39-04.png"></p><p><strong>——————————————————————————————————————————————————</strong></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_22-39-27.png"></p><h2 id="输入输出-IO-控制方式"><a href="#输入输出-IO-控制方式" class="headerlink" title="输入输出(IO)控制方式"></a>输入输出(IO)控制方式</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_22-46-48.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_22-51-22.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_22-55-28.png"></p><h3 id="输入输出-IO-控制方式题目"><a href="#输入输出-IO-控制方式题目" class="headerlink" title="输入输出(IO)控制方式题目"></a>输入输出(IO)控制方式题目</h3><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_22-58-04.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_22-58-53.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_23-01-26.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_23-02-43.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_23-03-44.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_23-04-19.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_23-05-03.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_23-05-33.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_23-06-16.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_23-06-56.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-12_23-07-36.png"></p><h2 id="总线【了解】"><a href="#总线【了解】" class="headerlink" title="总线【了解】"></a>总线【了解】</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-13_22-48-08.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-13_22-49-30.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-13_22-49-59.png"></p><h3 id="总线题目"><a href="#总线题目" class="headerlink" title="总线题目"></a>总线题目</h3><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-13_22-51-21.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-13_22-55-20.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-13_22-56-37.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-13_22-57-08.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-13_22-57-56.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-13_22-58-31.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-13_23-00-18.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-13_23-01-13.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-13_23-02-12.png"></p><h2 id="加密技术与认证技术"><a href="#加密技术与认证技术" class="headerlink" title="加密技术与认证技术"></a>加密技术与认证技术</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-13_23-24-39.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-21-05.png" alt="154"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-28-56.png"></p><h3 id="加密技术与认证技术题目"><a href="#加密技术与认证技术题目" class="headerlink" title="加密技术与认证技术题目"></a>加密技术与认证技术题目</h3><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-32-06.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-33-16.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-34-25.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-35-31.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-36-52.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-39-53.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-40-57.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-41-47.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-42-48.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-43-36.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-44-40.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-45-23.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-46-48.png"></p><h2 id="加密算法"><a href="#加密算法" class="headerlink" title="加密算法"></a>加密算法</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-48-50.png"></p><h3 id="加密算法题目"><a href="#加密算法题目" class="headerlink" title="加密算法题目"></a>加密算法题目</h3><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-49-52.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-52-28.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-53-30.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-55-11.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-56-01.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-56-53.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-57-40.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_22-59-51.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-00-50.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-01-46.png"></p><h2 id="可靠性公式"><a href="#可靠性公式" class="headerlink" title="可靠性公式"></a>可靠性公式</h2><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-04-14.png"></p><h3 id="可靠性公式题目"><a href="#可靠性公式题目" class="headerlink" title="可靠性公式题目"></a>可靠性公式题目</h3><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-05-58.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-06-52.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-07-47.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-08-20.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-09-02.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-10-29.png"></p><h2 id="杂题选讲"><a href="#杂题选讲" class="headerlink" title="杂题选讲"></a>杂题选讲</h2><h3 id="杂题题目"><a href="#杂题题目" class="headerlink" title="杂题题目"></a>杂题题目</h3><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-12-05.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-13-05.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-15-38.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-18-59.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-20-00.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-21-29.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-22-53.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-24-43.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-26-08.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-26-45.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-30-43.png"></p><p><img src="/2022/08/24/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Snipaste_2022-04-14_23-35-19.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ES6-ES11</title>
    <link href="/2022/08/24/ES6-ES11/"/>
    <url>/2022/08/24/ES6-ES11/</url>
    
    <content type="html"><![CDATA[<h1 id="ES6-ES11"><a href="#ES6-ES11" class="headerlink" title="ES6-ES11"></a>ES6-ES11</h1><h1 id="第一章-ECMSript-6-特性"><a href="#第一章-ECMSript-6-特性" class="headerlink" title="第一章 ECMSript 6 特性"></a>第一章 ECMSript 6 特性</h1><h2 id="1-1-ES6-简介"><a href="#1-1-ES6-简介" class="headerlink" title="1.1 ES6 简介"></a>1.1 ES6 简介</h2><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-13_14-55-10.png"></p><h2 id="1-2-为什么学习新特性"><a href="#1-2-为什么学习新特性" class="headerlink" title="1.2 为什么学习新特性"></a>1.2 为什么学习新特性</h2><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-13_14-55-46.png"><h2 id="1-3-前置知识"><a href="#1-3-前置知识" class="headerlink" title="1.3 前置知识"></a>1.3 前置知识</h2><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-13_14-56-34.png"><h2 id="1-2-let关键字"><a href="#1-2-let关键字" class="headerlink" title="1.2 let关键字"></a>1.2 let关键字</h2><h3 id="1-2-1-变量不能重复说明"><a href="#1-2-1-变量不能重复说明" class="headerlink" title="1.2.1 变量不能重复说明"></a>1.2.1 变量不能重复说明</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> a,b,d;<br><span class="hljs-keyword">let</span> num = <span class="hljs-number">100</span>;<br></code></pre></td></tr></table></figure><h3 id="1-2-2-块级作用域"><a href="#1-2-2-块级作用域" class="headerlink" title="1.2.2 块级作用域"></a>1.2.2 块级作用域</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&#123;<br>    <span class="hljs-keyword">let</span> girl = <span class="hljs-string">&#x27;tom&#x27;</span>;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(girl);  <span class="hljs-comment">// 可以获取到</span><br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(girl);  <span class="hljs-comment">// 获取不到girl</span><br></code></pre></td></tr></table></figure><h3 id="1-2-3-不存在变量提升"><a href="#1-2-3-不存在变量提升" class="headerlink" title="1.2.3 不存在变量提升"></a>1.2.3 不存在变量提升</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 不存在变量提升</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(song);<br><span class="hljs-keyword">let</span> song = <span class="hljs-string">&#x27;12&#x27;</span>;<br></code></pre></td></tr></table></figure><h3 id="1-2-4-不影响作用域链"><a href="#1-2-4-不影响作用域链" class="headerlink" title="1.2.4 不影响作用域链"></a>1.2.4 不影响作用域链</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&#123;<br>    <span class="hljs-keyword">let</span> school = <span class="hljs-string">&#x27;TOM&#x27;</span>;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">fn</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(school);<br>    &#125;<br>    <span class="hljs-title function_">fn</span>();   <span class="hljs-comment">// 可以获取到 school 变量</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1-3-const-关键字"><a href="#1-3-const-关键字" class="headerlink" title="1.3 const 关键字"></a>1.3 const 关键字</h2><h3 id="1-3-1-声明常量"><a href="#1-3-1-声明常量" class="headerlink" title="1.3.1 声明常量"></a>1.3.1 声明常量</h3><ul><li>const 声明常量要赋初始值</li><li>一般常量使用大写</li><li>常量的值不能修改</li><li>块级作用域</li><li>对于数组和对象的元素修改，不算对常量的修改，不会报错</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> school = <span class="hljs-string">&#x27;TOM&#x27;</span>;<br></code></pre></td></tr></table></figure><h2 id="1-4-解构赋值"><a href="#1-4-解构赋值" class="headerlink" title="1.4 解构赋值"></a>1.4 解构赋值</h2><ul><li>ES6 允许按照一定模式从数组和对象中提取值，对变量进行赋值，成为解构赋值</li></ul><h3 id="1-4-1-数组的结构"><a href="#1-4-1-数组的结构" class="headerlink" title="1.4.1 数组的结构"></a>1.4.1 数组的结构</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">F3</span> = [<span class="hljs-string">&#x27;12&#x27;</span>,<span class="hljs-string">&#x27;123&#x27;</span>,<span class="hljs-string">&#x27;231&#x27;</span>];<br><span class="hljs-keyword">let</span> [xiao,liu,zhao] = <span class="hljs-variable constant_">F3</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xiao);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(liu);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(zhao);<br></code></pre></td></tr></table></figure><h3 id="1-4-2-对象结构"><a href="#1-4-2-对象结构" class="headerlink" title="1.4.2 对象结构"></a>1.4.2 对象结构</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> zhao = &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;zhao&#x27;</span>,<br>    age :<span class="hljs-string">&#x27;22&#x27;</span>,<br>    xiaopin : <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;12&#x27;</span>);<br>    &#125;<br>&#125;;<br><br><span class="hljs-keyword">let</span> &#123;<br>    name,<br>    age,<br>    xiaopin<br>&#125; = zhao;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(name);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(age);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xiaopin);<br><span class="hljs-title function_">xiaopin</span>();<br></code></pre></td></tr></table></figure><h2 id="1-5-模板字符串"><a href="#1-5-模板字符串" class="headerlink" title="1.5 模板字符串"></a>1.5 模板字符串</h2><h3 id="1-5-1-反引号"><a href="#1-5-1-反引号" class="headerlink" title="1.5.1 `` 反引号"></a>1.5.1 `` 反引号</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> str = <span class="hljs-string">`字符串`</span>;<br></code></pre></td></tr></table></figure><h3 id="1-5-2-模板字符串特性"><a href="#1-5-2-模板字符串特性" class="headerlink" title="1.5.2 模板字符串特性"></a>1.5.2 模板字符串特性</h3><ul><li>可以出现换行符</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> str = <span class="hljs-string">`&lt;ul&gt;</span><br><span class="hljs-string">&lt;li&gt;&lt;/&lt;li&gt;</span><br><span class="hljs-string">   &lt;/ul&gt;`</span>;<br></code></pre></td></tr></table></figure><ul><li>变量拼接</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> love = <span class="hljs-string">&#x27;qq&#x27;</span>;<br><span class="hljs-comment">// 固定格式</span><br><span class="hljs-keyword">let</span> out = <span class="hljs-string">`<span class="hljs-subst">$&#123;love&#125;</span>122`</span>;<br></code></pre></td></tr></table></figure><h2 id="1-6-ES6简化对象写法"><a href="#1-6-ES6简化对象写法" class="headerlink" title="1.6  ES6简化对象写法"></a>1.6  ES6简化对象写法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> name = <span class="hljs-string">&#x27;shool&#x27;</span>;<br><span class="hljs-keyword">let</span> change = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;这是很好的&#x27;</span>)<br>&#125;<br><span class="hljs-comment">// 属性值和变量名一样的时候可以进行简化操作</span><br><span class="hljs-keyword">const</span> shool = &#123;<br>    name,<br>    change,<br>    <span class="hljs-comment">// 声明方法</span><br>    <span class="hljs-title function_">improve</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;简化操作&#x27;</span>);<br>&#125;<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(shool);<br></code></pre></td></tr></table></figure><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-13_16-13-29.png" style="zoom:150%;"><h2 id="1-7-箭头函数"><a href="#1-7-箭头函数" class="headerlink" title="1.7  箭头函数"></a>1.7  箭头函数</h2><h3 id="1-7-1-箭头函数声明调用"><a href="#1-7-1-箭头函数声明调用" class="headerlink" title="1.7.1 箭头函数声明调用"></a>1.7.1 箭头函数声明调用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 普通函数定义</span><br><span class="hljs-keyword">let</span> fn = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;未简化&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">let</span> <span class="hljs-title function_">fn1</span> = (<span class="hljs-params">a,b</span>) =&gt; &#123;<br><span class="hljs-keyword">return</span> a + b;<br>&#125;<br><span class="hljs-comment">// 调用</span><br><span class="hljs-keyword">let</span> result = <span class="hljs-title function_">fn1</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result);<br></code></pre></td></tr></table></figure><h3 id="1-7-2-箭头函数特点"><a href="#1-7-2-箭头函数特点" class="headerlink" title="1.7.2 箭头函数特点"></a>1.7.2 箭头函数特点</h3><ul><li>this 是静态的，this始终指向函数声明时所在作用域下的 this 的值</li><li>不能作为构造函数实例化对象</li><li>不能使用 arguments 变量</li><li>箭头函数的简写</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">// 省略小括号，当形参有且只有一个的时候</span><br><span class="hljs-keyword">let</span> <span class="hljs-title function_">add</span> = n =&gt; &#123;<br>    <span class="hljs-keyword">return</span> n + n;<br>&#125;<br><span class="hljs-comment">// 省略花括号,当代码体只有一条语句的时候,此时return必须省略</span><br><span class="hljs-keyword">let</span> <span class="hljs-title function_">pow</span> = (<span class="hljs-params">n</span>) =&gt; n + n;<br></code></pre></td></tr></table></figure><h3 id="1-7-3-箭头函数实践与运用"><a href="#1-7-3-箭头函数实践与运用" class="headerlink" title="1.7.3 箭头函数实践与运用"></a>1.7.3 箭头函数实践与运用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">let</span> change = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;#ad&#x27;</span>);<br>change.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">style</span>.<span class="hljs-property">background</span> = <span class="hljs-string">&#x27;pink&#x27;</span>;<br>&#125;,<span class="hljs-number">2000</span>)<br>&#125;)<br><br><span class="hljs-comment">// 从数组中返回偶数的元素</span><br><span class="hljs-keyword">const</span> arr = [<span class="hljs-number">1</span>,<span class="hljs-number">512</span>,<span class="hljs-number">34</span>,<span class="hljs-number">123</span>,<span class="hljs-number">1214</span>,<span class="hljs-number">67</span>,<span class="hljs-number">12</span>];<br><span class="hljs-keyword">const</span> result = arr.<span class="hljs-title function_">filter</span>( <span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span>(item % <span class="hljs-number">2</span> === <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result);<br></code></pre></td></tr></table></figure><ul><li>箭头函数适合与this无关的回调，例如定时器，数组方法回调等等，不适用于事件回调，对象方法等等</li></ul><h2 id="1-8-函数参数"><a href="#1-8-函数参数" class="headerlink" title="1.8. 函数参数"></a>1.8. 函数参数</h2><h3 id="1-8-1-赋值初始化"><a href="#1-8-1-赋值初始化" class="headerlink" title="1.8.1 赋值初始化"></a>1.8.1 赋值初始化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">a,b,c = <span class="hljs-number">10</span></span>) &#123;<br>    <span class="hljs-keyword">return</span> a + b + c;<br>&#125;<br><span class="hljs-keyword">let</span> result = <span class="hljs-title function_">add</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>);  <span class="hljs-comment">// 13</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result);<br></code></pre></td></tr></table></figure><h3 id="1-8-2-与结构赋值的结合"><a href="#1-8-2-与结构赋值的结合" class="headerlink" title="1.8.2 与结构赋值的结合"></a>1.8.2 与结构赋值的结合</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">connect</span>(<span class="hljs-params">&#123; host,uname,password&#125;</span>)<br>&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(host);     <br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(uname);           <br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(password);           <br>&#125;<br><span class="hljs-title function_">connect</span>(&#123;<br>    <span class="hljs-attr">host</span>:<span class="hljs-string">&#x27;127.0.0.1&#x27;</span>,<br>    <span class="hljs-attr">uname</span>:<span class="hljs-string">&#x27;admin&#x27;</span>,<br>    <span class="hljs-attr">password</span>:<span class="hljs-string">&#x27;admin&#x27;</span><br>&#125;)<br></code></pre></td></tr></table></figure><h3 id="1-8-3-rest参数"><a href="#1-8-3-rest参数" class="headerlink" title="1.8.3 rest参数"></a>1.8.3 rest参数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">data</span>(<span class="hljs-params">...args</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(args);<br>&#125;<br><span class="hljs-title function_">data</span>(<span class="hljs-string">&#x27;12&#x27;</span>,<span class="hljs-string">&#x27;123&#x27;</span>,<span class="hljs-string">&#x27;1234&#x27;</span>);<br></code></pre></td></tr></table></figure><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-13_16-51-28.png" style="zoom:150%;"><ul><li>rest 参数必须放在参数最后</li></ul><h2 id="1-9-Symbol基本使用"><a href="#1-9-Symbol基本使用" class="headerlink" title="1.9  Symbol基本使用"></a>1.9  Symbol基本使用</h2><h3 id="1-9-1-Symbol的特点"><a href="#1-9-1-Symbol的特点" class="headerlink" title="1.9.1 Symbol的特点"></a>1.9.1 Symbol的特点</h3><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-13_16-57-06.png"></p><h3 id="1-9-2-Symbol-的创建"><a href="#1-9-2-Symbol-的创建" class="headerlink" title="1.9.2 Symbol 的创建"></a>1.9.2 Symbol 的创建</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> s = <span class="hljs-title class_">Symbol</span>();<br><span class="hljs-comment">// console.log(s,typeof s);</span><br><span class="hljs-keyword">let</span> s2 = <span class="hljs-title class_">Symbol</span>(<span class="hljs-string">&#x27;school&#x27;</span>);<br><br><span class="hljs-keyword">let</span> s3 = <span class="hljs-title class_">Symbol</span>.<span class="hljs-title function_">for</span>(<span class="hljs-string">&#x27;school&#x27;</span>);  <span class="hljs-comment">// 对象</span><br></code></pre></td></tr></table></figure><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-13_16-58-09.png" style="zoom:150%;"><ul><li><p>symbol不能与其他数据进行运算</p></li><li><p>数据类型总结</p></li></ul><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-13_17-01-42.png"></p><h3 id="1-9-3-symbol创建对象属性"><a href="#1-9-3-symbol创建对象属性" class="headerlink" title="1.9.3 symbol创建对象属性"></a>1.9.3 symbol创建对象属性</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> game = &#123;<br>    name : <span class="hljs-string">&#x27;狼人杀&#x27;</span>,<br>    [<span class="hljs-title class_">Symbol</span>(<span class="hljs-string">&#x27;say&#x27;</span>)]: <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;111&#x27;</span>);<br>    &#125;,<br>    [<span class="hljs-title class_">Symbol</span>(<span class="hljs-string">&#x27;bomb&#x27;</span>)] : <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;22&#x27;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(game);<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-13_17-09-06.png"></p><h3 id="1-9-4-Symbol-内置属性"><a href="#1-9-4-Symbol-内置属性" class="headerlink" title="1.9.4 Symbol 内置属性"></a>1.9.4 Symbol 内置属性</h3><p><img src="/2022/08/24/ES6-ES11/1.png"></p><p><img src="/2022/08/24/ES6-ES11/2.png"></p><h2 id="1-10-迭代器"><a href="#1-10-迭代器" class="headerlink" title="1.10 迭代器"></a>1.10 迭代器</h2><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-14_20-58-39.png"></p><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-14_21-01-44.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">for</span>...<span class="hljs-keyword">of</span>  遍历  <br><span class="hljs-keyword">const</span> xiyou = [<span class="hljs-string">&#x27;123&#x27;</span>,<span class="hljs-string">&#x27;456&#x27;</span>,<span class="hljs-string">&#x27;789&#x27;</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> v <span class="hljs-keyword">of</span> xiyou) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xiyou);<br>&#125;<br><br><span class="hljs-comment">// next 方法</span><br><span class="hljs-keyword">const</span> xiyou = [<span class="hljs-string">&#x27;123&#x27;</span>,<span class="hljs-string">&#x27;456&#x27;</span>,<span class="hljs-string">&#x27;789&#x27;</span>];<br><span class="hljs-keyword">let</span> iterator = xiyou[<span class="hljs-title class_">Symbol</span>.<span class="hljs-property">iterator</span>]();<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(iterator.<span class="hljs-title function_">next</span>());<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(iterator.<span class="hljs-title function_">next</span>());<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(iterator.<span class="hljs-title function_">next</span>());<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(iterator.<span class="hljs-title function_">next</span>());   <span class="hljs-comment">// 当返回 true时，操作完成</span><br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-14_21-06-27.png"></p><h3 id="10-1-1-迭代器自定义遍历对象"><a href="#10-1-1-迭代器自定义遍历对象" class="headerlink" title="10.1.1 迭代器自定义遍历对象"></a>10.1.1 迭代器自定义遍历对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> banji = &#123;<br>    name : <span class="hljs-string">&quot;销售&quot;</span>,<br>    stus : [<br>        <span class="hljs-string">&#x27;xiaoming&#x27;</span>,<br>        <span class="hljs-string">&#x27;xiaoning&#x27;</span>,<br>        <span class="hljs-string">&#x27;xiaotian&#x27;</span>,<br>        <span class="hljs-string">&#x27;xiaoshou&#x27;</span><br>    ],<br>    [<span class="hljs-title class_">Symbol</span>.<span class="hljs-property">iterator</span>]() &#123;<br>        <span class="hljs-comment">// 缩影变量</span><br>        <span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">return</span> &#123;<br>            next : <span class="hljs-function">() =&gt;</span> &#123;<br>                <span class="hljs-keyword">if</span>(index &lt; <span class="hljs-variable language_">this</span>.<span class="hljs-property">stus</span>.<span class="hljs-property">length</span>) &#123;<br>                    <span class="hljs-keyword">const</span> result = &#123;<br>                        <span class="hljs-attr">value</span>:<span class="hljs-variable language_">this</span>.<span class="hljs-property">stus</span>[index],<span class="hljs-attr">done</span>:<span class="hljs-literal">false</span><br>                    &#125;;<br>                    index++;<br>                    <span class="hljs-comment">// 返回结果</span><br>                    <span class="hljs-keyword">return</span> result;<br>                &#125;<span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">return</span> &#123;<br>                        <span class="hljs-attr">value</span>:<span class="hljs-literal">undefined</span>,<span class="hljs-attr">done</span>:<span class="hljs-literal">true</span>  <span class="hljs-comment">// 停止遍历</span><br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> v <span class="hljs-keyword">of</span> banji) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(v);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-14_21-22-12.png"></p><h2 id="1-11-生成器"><a href="#1-11-生成器" class="headerlink" title="1.11  生成器"></a>1.11  生成器</h2><h3 id="1-11-1-生成器简介"><a href="#1-11-1-生成器简介" class="headerlink" title="1.11.1 生成器简介"></a>1.11.1 生成器简介</h3><ul><li>生成器就是一个特殊函数</li><li>进行异步编程</li></ul><h3 id="1-11-2-生成器创建"><a href="#1-11-2-生成器创建" class="headerlink" title="1.11.2 生成器创建"></a>1.11.2 生成器创建</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> * <span class="hljs-title function_">gen</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;生成器 hello&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">let</span> iterator = <span class="hljs-title function_">gen</span>();<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(iterator); <span class="hljs-comment">// 返回迭代器对象</span><br>iterator.<span class="hljs-title function_">next</span>(); <span class="hljs-comment">// 返回数据</span><br></code></pre></td></tr></table></figure><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-14_21-27-46.png" style="zoom:150%;"><h3 id="1-11-3-生成器的函数参数"><a href="#1-11-3-生成器的函数参数" class="headerlink" title="1.11.3 生成器的函数参数"></a>1.11.3 生成器的函数参数</h3><ul><li>next() 方法可以传入实参</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> * <span class="hljs-title function_">gen</span>(<span class="hljs-params">arg</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arg);<br>    <span class="hljs-keyword">let</span> one = <span class="hljs-keyword">yield</span> <span class="hljs-number">111</span>;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(one);<br>    <span class="hljs-keyword">let</span> two = <span class="hljs-keyword">yield</span> <span class="hljs-number">222</span>;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(two);<br>    <span class="hljs-keyword">let</span> three = <span class="hljs-keyword">yield</span> <span class="hljs-number">333</span>;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(three);<br>&#125;<br><span class="hljs-comment">// 执行生成器对象</span><br><span class="hljs-keyword">let</span> iterator = <span class="hljs-title function_">gen</span>(<span class="hljs-string">&#x27;AAA&#x27;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(iterator.<span class="hljs-title function_">next</span>());<br><span class="hljs-comment">// next 方法传参</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(iterator.<span class="hljs-title function_">next</span>(<span class="hljs-string">&#x27;BBB&#x27;</span>));<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(iterator.<span class="hljs-title function_">next</span>(<span class="hljs-string">&#x27;ccc&#x27;</span>));<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(iterator.<span class="hljs-title function_">next</span>(<span class="hljs-string">&#x27;ddd&#x27;</span>));<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-15_20-19-51.png"></p><h3 id="1-11-4-生成器解决异步编程"><a href="#1-11-4-生成器解决异步编程" class="headerlink" title="1.11.4 生成器解决异步编程"></a>1.11.4 生成器解决异步编程</h3><h4 id="案例1"><a href="#案例1" class="headerlink" title="案例1"></a>案例1</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 1s 后控制台输出111  2s后输出222   3秒后输出333</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">one</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">111</span>);<br>        iterator.<span class="hljs-title function_">next</span>();<br>&#125;,<span class="hljs-number">1000</span>)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">two</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">222</span>);<br>        iterator.<span class="hljs-title function_">next</span>();<br>    &#125;,<span class="hljs-number">2000</span>)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">three</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">333</span>);<br>    iterator.<span class="hljs-title function_">next</span>();<br>&#125;,<span class="hljs-number">3000</span>)<br>&#125;<br><span class="hljs-comment">// 生成器调用</span><br><span class="hljs-keyword">function</span> * <span class="hljs-title function_">gen</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">yield</span> <span class="hljs-title function_">one</span>();<br>    <span class="hljs-keyword">yield</span> <span class="hljs-title function_">two</span>();<br>    <span class="hljs-keyword">yield</span> <span class="hljs-title function_">three</span>();<br>&#125;<br><span class="hljs-comment">// 使用生成器</span><br><span class="hljs-keyword">let</span> iterator = <span class="hljs-title function_">gen</span>();<br>iterator.<span class="hljs-title function_">next</span>();<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-15_20-28-41.png"></p><h4 id="案例2"><a href="#案例2" class="headerlink" title="案例2"></a>案例2</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 模拟获取商品数据  先获取用户在获取订单在获取商品</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getUers</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">()=&gt;</span>&#123;<br>        <span class="hljs-keyword">let</span> data = <span class="hljs-string">&#x27;用户数据 &#x27;</span>;<br>        <span class="hljs-comment">// 通过生成器接收数据返回给yield</span><br>        iterator.<span class="hljs-title function_">next</span>(data);<br>    &#125;,<span class="hljs-number">1000</span>)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getOrders</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">()=&gt;</span>&#123;<br>        <span class="hljs-keyword">let</span> data = <span class="hljs-string">&#x27;订单数据 &#x27;</span>;<br>        iterator.<span class="hljs-title function_">next</span>(data);<br>    &#125;,<span class="hljs-number">1000</span>)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getGoods</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">()=&gt;</span>&#123;<br>        <span class="hljs-keyword">let</span> data = <span class="hljs-string">&#x27;商品数据 &#x27;</span>;<br>        iterator.<span class="hljs-title function_">next</span>(data);<br>    &#125;,<span class="hljs-number">1000</span>)<br>&#125;<br><span class="hljs-keyword">function</span> * <span class="hljs-title function_">gen</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">let</span> uers = <span class="hljs-keyword">yield</span> <span class="hljs-title function_">getUers</span>();<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(uers);<br>    <span class="hljs-keyword">let</span> orders = <span class="hljs-keyword">yield</span> <span class="hljs-title function_">getOrders</span>();<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(orders);<br>    <span class="hljs-keyword">let</span> goods = <span class="hljs-keyword">yield</span> <span class="hljs-title function_">getGoods</span>();<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(goods);<br>&#125;<br><span class="hljs-comment">// 调用生成器</span><br><span class="hljs-keyword">let</span> iterator = <span class="hljs-title function_">gen</span>();<br>iterator.<span class="hljs-title function_">next</span>();<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-15_20-44-12.png"></p><h2 id="1-12-Promise"><a href="#1-12-Promise" class="headerlink" title="1.12  Promise"></a>1.12  Promise</h2><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-15_23-07-44.png"></p><ul><li>promise 解决回调地狱问题</li></ul><h3 id="1-12-1-Promise-创建"><a href="#1-12-1-Promise-创建" class="headerlink" title="1.12.1 Promise 创建"></a>1.12.1 Promise 创建</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> p <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">resolv,reject</span>) &#123;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>        <span class="hljs-comment">//如果调用数据库成功则调用 then方法的 value 函数</span><br>        <span class="hljs-keyword">let</span> data = <span class="hljs-string">&#x27;数据库中的用户数据&#x27;</span>;<br>        <span class="hljs-title function_">resolve</span>(data);<br>        <span class="hljs-comment">// 如果调用书库看失败，则调用then方法reason函数</span><br>        <span class="hljs-keyword">let</span> err = <span class="hljs-string">&#x27;数据读取失败&#x27;</span>;<br>        <span class="hljs-title function_">reject</span>(err);<br>    &#125;,<span class="hljs-number">1000</span>);<br>&#125;);<br><br><span class="hljs-comment">// 调用 primise 中的 then 方法</span><br>p.<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(value);<br>&#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">reason</span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(reason);<br>&#125;)<br></code></pre></td></tr></table></figure><h3 id="1-12-2-Promise读取文件-js"><a href="#1-12-2-Promise读取文件-js" class="headerlink" title="1.12.2 Promise读取文件.js"></a>1.12.2 Promise读取文件.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 1.引入fs 模块  </span><br><span class="hljs-keyword">const</span> &#123; log &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;console&#x27;</span>);<br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><br><span class="hljs-comment">// // 2.调用方法读取文件</span><br><span class="hljs-comment">// fs.readFile(&#x27;./resources/学习.md&#x27;,(err,data) =&gt; &#123;</span><br><span class="hljs-comment">//     // 如果错误调用 err</span><br><span class="hljs-comment">//     if(err) throw err;</span><br><span class="hljs-comment">//     // 如果成功获取data</span><br><span class="hljs-comment">//     console.log(data.toString());</span><br><span class="hljs-comment">// &#125;);</span><br><span class="hljs-comment">// 3. promise 封装</span><br><span class="hljs-keyword">const</span> p = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">resolve,reject</span>)&#123;<br>    fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">&#x27;./resources/学习.md&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">err,data</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">// 如果错误调用 err</span><br>        <span class="hljs-keyword">if</span>(err) <span class="hljs-title function_">reject</span>(err);<br>        <span class="hljs-comment">// 如果成功 </span><br>        <span class="hljs-title function_">resolve</span>(data);<br>    &#125;);<br>&#125;);<br>p.<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(value.<span class="hljs-title function_">toString</span>());<br>&#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">reson</span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;读取失败!&#x27;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-16_11-11-55.png"></p><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-16_11-12-17.png"></p><h3 id="1-12-3-Promise-封装Ajax"><a href="#1-12-3-Promise-封装Ajax" class="headerlink" title="1.12.3 Promise 封装Ajax"></a>1.12.3 Promise 封装Ajax</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> p = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve,reject</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 1.创建对象</span><br>    <span class="hljs-keyword">const</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br>    <span class="hljs-comment">// 2.初始化</span><br>    xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;https://api.apiopen.top/getJoke&#x27;</span>);<br>    <span class="hljs-comment">// 3. 发送请求</span><br>    xhr.<span class="hljs-title function_">send</span>();<br>    <span class="hljs-comment">// 4. 绑定事件</span><br>    xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-comment">// 判断</span><br>        <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>) &#123;<br>            <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">status</span> &gt;= <span class="hljs-number">200</span> &amp;&amp; xhr.<span class="hljs-property">status</span> &lt; <span class="hljs-number">300</span>) &#123;<br>                <span class="hljs-comment">// 表示成功</span><br>                <span class="hljs-title function_">resolve</span>(xhr.<span class="hljs-property">response</span>);<br>            &#125;<span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-comment">// 表示失败</span><br>                <span class="hljs-title function_">reject</span>(xhr.<span class="hljs-property">status</span>);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;)<br><br>.<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>)&#123;<br>    <span class="hljs-comment">// 成功回调</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(value);<br>&#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">reason</span>)&#123;<br>    <span class="hljs-comment">// 失败回调</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(reason);<br>&#125;);<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-16_11-22-55.png"></p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-16_11-23-18.png" style="zoom:150%;"><h3 id="1-12-4-Promise中then方法"><a href="#1-12-4-Promise中then方法" class="headerlink" title="1.12.4 Promise中then方法"></a>1.12.4 Promise中then方法</h3><h4 id="结果为非Promise的返回值"><a href="#结果为非Promise的返回值" class="headerlink" title="结果为非Promise的返回值"></a>结果为非Promise的返回值</h4><ul><li>如果回调函数中返回的结果时非 Promise 类型的属性,状态为成功,则返回值为对象成功的值</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> p = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolv,reject</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-title function_">resolv</span>(<span class="hljs-string">&#x27;成功数据&#x27;</span>); <br>    &#125;,<span class="hljs-number">1000</span>)<br>&#125;);<br><br><span class="hljs-keyword">const</span>  result = p.<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(value);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;成功的话返回这个数据&#x27;</span>;  <span class="hljs-comment">// 如果没有这行数据,则返回 undefined</span><br>&#125;,<span class="hljs-function">(<span class="hljs-params">reason</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(reason);<br>&#125;)<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result);<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-16_11-31-43.png"></p><h4 id="结果为promise的返回值"><a href="#结果为promise的返回值" class="headerlink" title="结果为promise的返回值"></a>结果为promise的返回值</h4><ul><li>如果是promise对象,那对象里面是什么就返回什么</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> p = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolv,reject</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-title function_">resolv</span>(<span class="hljs-string">&#x27;成功数据&#x27;</span>);<br>    &#125;,<span class="hljs-number">1000</span>)<br>&#125;);<br><br><span class="hljs-keyword">const</span>  result = p.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">value</span> =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(value);<br>    <span class="hljs-comment">// 1.非promise对象</span><br>    <span class="hljs-comment">// return &#x27;成功返回这个数据&#x27;</span><br>    <span class="hljs-comment">// 2.promise对象</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolv,reject</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">// resolv(&#x27;ok&#x27;);  </span><br>        <span class="hljs-title function_">reject</span>(<span class="hljs-string">&#x27;error&#x27;</span>);<br>    &#125;)<br>&#125;,<span class="hljs-function">(<span class="hljs-params">reason</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(reason);<br>&#125;)<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result);<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-16_11-39-16.png"></p><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-16_11-42-01.png"></p><h4 id="抛出错误的返回值"><a href="#抛出错误的返回值" class="headerlink" title="抛出错误的返回值"></a>抛出错误的返回值</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> p = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolv,reject</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-title function_">resolv</span>(<span class="hljs-string">&#x27;成功数据&#x27;</span>);<br>    &#125;,<span class="hljs-number">1000</span>)<br>&#125;);<br><br><span class="hljs-keyword">const</span>  result = p.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">value</span> =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(value);<br>    <span class="hljs-comment">// 1.非promise对象</span><br>    <span class="hljs-comment">// return &#x27;成功返回这个数据&#x27;</span><br>    <span class="hljs-comment">// 2.promise对象</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolv,reject</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&#x27;抛出错误数据&#x27;</span>);<br>    &#125;)<br>&#125;,<span class="hljs-function">(<span class="hljs-params">reason</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(reason);<br>&#125;)<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result);<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-16_11-43-58.png"></p><h3 id="1-12-5-promise读取多个文件"><a href="#1-12-5-promise读取多个文件" class="headerlink" title="1.12.5 promise读取多个文件"></a>1.12.5 promise读取多个文件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 1. 引入 </span><br><span class="hljs-keyword">const</span> &#123; rejects &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;assert&#x27;</span>);<br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">const</span> &#123; resolve &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<br><br><span class="hljs-comment">// 使用 promise实现</span><br><span class="hljs-keyword">const</span> p = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve,reject</span>) =&gt;</span> &#123;<br>    fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">&quot;./resources/学习.md&quot;</span>,<span class="hljs-function">(<span class="hljs-params">err,data</span>) =&gt;</span> &#123;<br>        <span class="hljs-title function_">resolve</span>(data);<br>    &#125;);<br>&#125;);<br><br>p.<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve,reject</span>) =&gt;</span> &#123;<br>        fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">&quot;./resources/学习1.md&quot;</span>,<span class="hljs-function">(<span class="hljs-params">err,data</span>) =&gt;</span> &#123;<br>            <span class="hljs-title function_">resolve</span>([value,data]);<br>        &#125;);<br>    &#125;)<br>&#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve,reject</span>) =&gt;</span> &#123;<br>        fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">&quot;./resources/学习2.md&quot;</span>,<span class="hljs-function">(<span class="hljs-params">err,data</span>) =&gt;</span> &#123;<br>            value.<span class="hljs-title function_">push</span>(data);<br>            <span class="hljs-title function_">resolve</span>(value);<br>        &#125;)<br>    &#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(value.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;\r\n&#x27;</span>));<br>    &#125;)<br>&#125;)<br></code></pre></td></tr></table></figure><h3 id="1-12-6-promise中catch方法"><a href="#1-12-6-promise中catch方法" class="headerlink" title="1.12.6  promise中catch方法"></a>1.12.6  promise中catch方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> p = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve,reject</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-title function_">reject</span>(<span class="hljs-string">&quot;出错啦!&quot;</span>)<br>    &#125;,<span class="hljs-number">1000</span>)<br>&#125;)<br><br>p.<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">reason</span>) =&gt;</span> &#123;    <span class="hljs-comment">// catch 只需要写一个回调函数</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">warn</span>(reason);<br>&#125;)<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-16_20-33-03.png"></p><h2 id="1-13-SET"><a href="#1-13-SET" class="headerlink" title="1.13 SET"></a>1.13 SET</h2><h3 id="1-13-1-Set-介绍"><a href="#1-13-1-Set-介绍" class="headerlink" title="1.13.1 Set 介绍"></a>1.13.1 Set 介绍</h3><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-16_20-35-21.png"></p><h3 id="1-13-2-Set-用法"><a href="#1-13-2-Set-用法" class="headerlink" title="1.13.2 Set 用法"></a>1.13.2 Set 用法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 声明 set</span><br><span class="hljs-keyword">let</span> s = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>();<br><span class="hljs-comment">// 传参数</span><br><span class="hljs-keyword">let</span> s1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>([<span class="hljs-string">&#x27;大事情&#x27;</span>,<span class="hljs-string">&#x27;小事情&#x27;</span>,<span class="hljs-string">&#x27;中事情&#x27;</span>]);<br><span class="hljs-comment">// 元素个数</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(s1.<span class="hljs-property">size</span>);<br><span class="hljs-comment">// 添加新元素</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(s1.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;喜事尔&#x27;</span>));<br><span class="hljs-comment">// 删除元素</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(s1.<span class="hljs-title function_">delete</span>(<span class="hljs-string">&#x27;小事情&#x27;</span>));<br><span class="hljs-comment">// 检测</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(s1.<span class="hljs-title function_">has</span>(<span class="hljs-string">&#x27;中事情&#x27;</span>));<br><span class="hljs-comment">// 清空</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(s1.<span class="hljs-title function_">clear</span>());<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-16_23-07-06.png"></p><h3 id="1-13-3-数组去重"><a href="#1-13-3-数组去重" class="headerlink" title="1.13.3 数组去重"></a>1.13.3 数组去重</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> arr = [<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">5</span>];<br><span class="hljs-keyword">let</span> result = [...<span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>(arr)];<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result);<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-17_19-46-36-16475176842621.png"></p><h3 id="1-13-4-交集"><a href="#1-13-4-交集" class="headerlink" title="1.13.4 交集"></a>1.13.4 交集</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 取交集要先去重</span><br><span class="hljs-keyword">let</span> arr = [<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>];<br><span class="hljs-keyword">let</span> arr1 = [<span class="hljs-number">7</span>,<span class="hljs-number">9</span>,<span class="hljs-number">11</span>,<span class="hljs-number">21</span>,<span class="hljs-number">41</span>]<br><span class="hljs-keyword">let</span> result = [...<span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>(arr)].<span class="hljs-title function_">filter</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> s1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>(arr1);<br>    <span class="hljs-keyword">if</span>(s1.<span class="hljs-title function_">has</span>(item)) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;) <br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result);<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-17_19-54-27.png"></p><h3 id="1-13-5-并集"><a href="#1-13-5-并集" class="headerlink" title="1.13.5 并集"></a>1.13.5 并集</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 两数组合并去重</span><br><span class="hljs-keyword">let</span> arr = [<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>];<br><span class="hljs-comment">// 合并两个数组</span><br><span class="hljs-keyword">let</span> result = [...arr,...arr1];<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result);<br></code></pre></td></tr></table></figure><h3 id="1-13-6-差集"><a href="#1-13-6-差集" class="headerlink" title="1.13.6 差集"></a>1.13.6 差集</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> arr = [<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>];<br><span class="hljs-keyword">let</span> diff = [...<span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>(arr)].<span class="hljs-title function_">filter</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> !(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>(arr1).<span class="hljs-title function_">has</span>(item)))<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(diff);<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-17_20-00-38.png"></p><h2 id="1-14-Map"><a href="#1-14-Map" class="headerlink" title="1.14  Map"></a>1.14  Map</h2><h3 id="1-14-1-Map介绍"><a href="#1-14-1-Map介绍" class="headerlink" title="1.14.1 Map介绍"></a>1.14.1 Map介绍</h3><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-17_20-05-30.png"></p><h3 id="1-14-2-Map-操作"><a href="#1-14-2-Map-操作" class="headerlink" title="1.14.2 Map 操作"></a>1.14.2 Map 操作</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 声明 Map</span><br><span class="hljs-keyword">let</span> m = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Map</span>();<br><span class="hljs-comment">// 添加元素</span><br>m.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;name&#x27;</span>,<span class="hljs-string">&#x27;TOM&#x27;</span>);<br>m.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;change&#x27;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;111&#x27;</span>);<br>&#125;);<br><span class="hljs-keyword">let</span> key = &#123;<br>    school : <span class="hljs-string">&#x27;Atugui&#x27;</span><br>&#125;;<br>m.<span class="hljs-title function_">set</span>(key,[<span class="hljs-string">&#x27;北京&#x27;</span>,<span class="hljs-string">&#x27;伤害&#x27;</span>]);<br><span class="hljs-comment">// size </span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(m.<span class="hljs-property">size</span>);<br><span class="hljs-comment">// 删除</span><br>m.<span class="hljs-title function_">delete</span>(<span class="hljs-string">&#x27;name&#x27;</span>);<br><span class="hljs-comment">// 获取</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(m.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;change&#x27;</span>));<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(m.<span class="hljs-title function_">get</span>(key));<br><span class="hljs-comment">// 清空</span><br>m.<span class="hljs-title function_">clear</span>();<br><span class="hljs-comment">// 遍历</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> v <span class="hljs-keyword">for</span> m) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(v);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1-15-class-类"><a href="#1-15-class-类" class="headerlink" title="1.15  class 类"></a>1.15  class 类</h2><h3 id="1-15-1-class-介绍"><a href="#1-15-1-class-介绍" class="headerlink" title="1.15.1 class 介绍"></a>1.15.1 class 介绍</h3><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-17_20-09-59.png"></p><h3 id="1-15-2-class-使用"><a href="#1-15-2-class-使用" class="headerlink" title="1.15.2 class 使用"></a>1.15.2 class 使用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Phone</span> &#123;<br>    <span class="hljs-comment">// 构造方法,名字固定</span><br>    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">brand,price</span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">brand</span> = brand;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">price</span> = price;<br>    &#125;<br>    <span class="hljs-comment">// 方法必须使用该语法,不能使用ES5的对象</span><br>    <span class="hljs-title function_">call</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;我可以带电话!&#x27;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">let</span> onPlus = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phone</span>(<span class="hljs-string">&#x27;1+&#x27;</span>,<span class="hljs-number">1999</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(onPlus);<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-17_20-13-59.png"></p><h3 id="1-15-3-class-的静态成员"><a href="#1-15-3-class-的静态成员" class="headerlink" title="1.15.3 class 的静态成员"></a>1.15.3 class 的静态成员</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Phone</span> &#123;<br>     <span class="hljs-comment">// 静态属性</span><br>     <span class="hljs-keyword">static</span> name = <span class="hljs-string">&#x27;手机&#x27;</span>;<br>     <span class="hljs-keyword">static</span> <span class="hljs-title function_">change</span>(<span class="hljs-params"></span>) &#123;<br>         <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;我可以该百年实践&quot;</span>);<br>     &#125;<br> &#125;<br><span class="hljs-keyword">let</span> nokia = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phone</span>();<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(nokia.<span class="hljs-property">name</span>);  <span class="hljs-comment">// undifined</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Phone</span>.<span class="hljs-property">name</span>);  <span class="hljs-comment">// 手机</span><br></code></pre></td></tr></table></figure><h3 id="1-15-4-类的get-set属性"><a href="#1-15-4-类的get-set属性" class="headerlink" title="1.15.4 类的get/set属性"></a>1.15.4 类的get/set属性</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> <span class="hljs-title class_">Phone</span>() &#123;<br>    <span class="hljs-keyword">get</span> <span class="hljs-title function_">price</span>() &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;价格属性被读取!!&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">set</span> <span class="hljs-title function_">price</span>(<span class="hljs-params">newVal</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;价格属性被修改&#x27;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment">// 实例化对象</span><br><span class="hljs-keyword">let</span> s = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phone</span>();<br>s.<span class="hljs-property">price</span> = <span class="hljs-string">&#x27;free&#x27;</span>;<br></code></pre></td></tr></table></figure><h2 id="1-16-对象方法扩展"><a href="#1-16-对象方法扩展" class="headerlink" title="1.16  对象方法扩展"></a>1.16  对象方法扩展</h2><h3 id="1-16-1-Object-is"><a href="#1-16-1-Object-is" class="headerlink" title="1.16.1 Object.is"></a>1.16.1 Object.is</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">is</span>(<span class="hljs-number">12</span>,<span class="hljs-number">123</span>));<br></code></pre></td></tr></table></figure><h3 id="1-16-2-Object-assign"><a href="#1-16-2-Object-assign" class="headerlink" title="1.16.2 Object.assign"></a>1.16.2 Object.assign</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> onfig = &#123;<br>    <span class="hljs-attr">host</span>:<span class="hljs-string">&#x27;localhost&#x27;</span>,<br>    <span class="hljs-attr">port</span>:<span class="hljs-number">3315</span>;<br>&#125;<br><span class="hljs-keyword">const</span> onfig1 = &#123;<br>    <span class="hljs-attr">host</span>:<span class="hljs-string">&#x27;baidu.com&#x27;</span>,<br>    <span class="hljs-attr">port</span>:<span class="hljs-number">33153</span>;<br>&#125;<br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(onfig,onfig1);<br></code></pre></td></tr></table></figure><h3 id="1-16-3-Object-setPrototypeOf"><a href="#1-16-3-Object-setPrototypeOf" class="headerlink" title="1.16.3 Object.setPrototypeOf"></a>1.16.3 Object.setPrototypeOf</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> school = &#123;<br>name : <span class="hljs-string">&#x27;shang&#x27;</span><br>&#125;<br><span class="hljs-keyword">const</span> cities = &#123;<br><span class="hljs-attr">xiaoqu</span>:[<span class="hljs-string">&#x27;asdj&#x27;</span>,<span class="hljs-string">&#x27;asjd&#x27;</span>]<br>&#125;<br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">setPrototypeOf</span>(school,cities);<br></code></pre></td></tr></table></figure><h3 id="1-16-4-Object-getPrototypeOf"><a href="#1-16-4-Object-getPrototypeOf" class="headerlink" title="1.16.4 Object.getPrototypeOf"></a>1.16.4 Object.getPrototypeOf</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> school = &#123;<br>name : <span class="hljs-string">&#x27;shang&#x27;</span><br>&#125;<br><span class="hljs-keyword">const</span> cities = &#123;<br><span class="hljs-attr">xiaoqu</span>:[<span class="hljs-string">&#x27;asdj&#x27;</span>,<span class="hljs-string">&#x27;asjd&#x27;</span>]<br>&#125;<br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">getPrototypeOf</span>(school);<br></code></pre></td></tr></table></figure><h2 id="1-17-模块化"><a href="#1-17-模块化" class="headerlink" title="1.17 模块化"></a>1.17 模块化</h2><h3 id="1-17-1-模块化好处"><a href="#1-17-1-模块化好处" class="headerlink" title="1.17.1 模块化好处"></a>1.17.1 模块化好处</h3><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-17_20-58-26.png"></p><h3 id="1-17-2-模块化语法"><a href="#1-17-2-模块化语法" class="headerlink" title="1.17.2  模块化语法"></a>1.17.2  模块化语法</h3><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-17_21-15-38.png"></p><h3 id="1-17-3-模块化使用【通用方式】"><a href="#1-17-3-模块化使用【通用方式】" class="headerlink" title="1.17.3 模块化使用【通用方式】"></a>1.17.3 模块化使用【通用方式】</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 第一种导出</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> school = <span class="hljs-string">&quot;伤害&quot;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">teach</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;这是一个函数&#x27;</span>);<br>&#125; <br><br><span class="hljs-comment">// 第二种导出</span><br><span class="hljs-keyword">let</span> school = <span class="hljs-string">&quot;伤害&quot;</span>;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">teach</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;这是一个函数&#x27;</span>);<br>&#125; <br><br><span class="hljs-keyword">export</span>&#123;<br>school,<br>    teach<br>&#125;<br><br><span class="hljs-comment">// 第三种暴露(默认暴露)</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>    school = <span class="hljs-string">&quot;伤害&quot;</span>,<br>    <span class="hljs-attr">teach</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;这是一个函数&#x27;</span>);<br> &#125; <br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;module&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">     <span class="hljs-comment">// 导入这个模块</span></span><br><span class="language-javascript">     <span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> m1 <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./js/m1.js&quot;</span>;</span><br><span class="language-javascript">     <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(m1);</span><br><span class="language-javascript">     <span class="hljs-comment">// 使用默认暴露</span></span><br><span class="language-javascript">     m1.<span class="hljs-property">default</span>.<span class="hljs-title function_">teach</span>();</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="1-17-4-解构赋值模块化使用"><a href="#1-17-4-解构赋值模块化使用" class="headerlink" title="1.17.4 解构赋值模块化使用"></a>1.17.4 解构赋值模块化使用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123;school,findJob&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./js/m2.js&quot;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(school,findJob);<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-keyword">default</span> <span class="hljs-keyword">as</span> m1&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./js/m3.js&quot;</span><br><span class="hljs-comment">// 简便方式 针对默认暴露</span><br><span class="hljs-keyword">import</span> m3 <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./js/m3.js&quot;</span><br></code></pre></td></tr></table></figure><h2 id="1-18-ES6-babel使用"><a href="#1-18-ES6-babel使用" class="headerlink" title="1.18 ES6-babel使用"></a>1.18 ES6-babel使用</h2><h3 id="1-18-1-babel-cli-安装"><a href="#1-18-1-babel-cli-安装" class="headerlink" title="1.18.1 babel-cli 安装"></a>1.18.1 babel-cli 安装</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">npm init --yes    <span class="hljs-regexp">//</span> 初始化<br>npm i babel-cli babel-preset-env browserify -D  <span class="hljs-regexp">//</span> 全局安装<br></code></pre></td></tr></table></figure><h3 id="1-18-2-文件转换"><a href="#1-18-2-文件转换" class="headerlink" title="1.18.2 文件转换"></a>1.18.2 文件转换</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">npx babel .<span class="hljs-regexp">/js -d dist/</span>js --presets=babel-preset-env<br><span class="hljs-regexp">//</span> 将js目录下文件打包到dist文件下<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-20_19-47-55.png"></p><h3 id="1-18-3-打包"><a href="#1-18-3-打包" class="headerlink" title="1.18.3 打包"></a>1.18.3 打包</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">npx browserify dist<span class="hljs-regexp">/js/</span>app.js -o dist/bundle.js<br><span class="hljs-regexp">//</span> 将dist<span class="hljs-regexp">/js/</span>app.js文件打包成bundle.js文件<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-20_19-51-33.png"></p><h1 id="第二章-ECMASript7-新特性"><a href="#第二章-ECMASript7-新特性" class="headerlink" title="第二章 ECMASript7 新特性"></a>第二章 ECMASript7 新特性</h1><h2 id="2-1-Array-prototype-includes"><a href="#2-1-Array-prototype-includes" class="headerlink" title="2.1 Array.prototype.includes"></a>2.1 Array.prototype.includes</h2><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-20_19-57-39.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> mingzhu = [<span class="hljs-string">&#x27;西游记&#x27;</span>,<span class="hljs-string">&#x27;红楼梦&#x27;</span>]；<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(mingzhu.<span class="hljs-title function_">incldes</span>(<span class="hljs-string">&#x27;红楼梦&#x27;</span>));<br></code></pre></td></tr></table></figure><h1 id="第三章-ECMASript8-新特性"><a href="#第三章-ECMASript8-新特性" class="headerlink" title="第三章 ECMASript8 新特性"></a>第三章 ECMASript8 新特性</h1><h2 id="3-1-async-和-await"><a href="#3-1-async-和-await" class="headerlink" title="3.1 async 和 await"></a>3.1 async 和 await</h2><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-20_20-07-42.png"></p><h3 id="3-1-1-async-函数"><a href="#3-1-1-async-函数" class="headerlink" title="3.1.1 async 函数"></a>3.1.1 async 函数</h3><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-20_20-08-05.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">fn</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">//1. 如果返回的结果不是promise对象，则返回一个成功的promise</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;123&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">const</span> result = <span class="hljs-title function_">fn</span>();<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result);<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-20_20-14-39.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">fn</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">//2. 抛出错误,返回一个失败的promise对象</span><br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&#x27;出错了&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">const</span> result = <span class="hljs-title function_">fn</span>();<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result);<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-20_20-16-02.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">fn</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 3.返回一个promise对象</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve,reject</span>) =&gt;</span>&#123;<br>        <span class="hljs-title function_">resolve</span>(<span class="hljs-string">&#x27;成功的数据&#x27;</span>);<br>    &#125;)<br>&#125;<br><span class="hljs-keyword">const</span> result = <span class="hljs-title function_">fn</span>();<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result);<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-20_20-18-37.png"></p><h3 id="3-1-2-await-表达式"><a href="#3-1-2-await-表达式" class="headerlink" title="3.1.2 await 表达式"></a>3.1.2 await 表达式</h3><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-20_20-22-15.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-comment">// 创建promise对象</span><br><span class="hljs-keyword">const</span> p = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve,reject</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// resolve(&quot;用户数据&quot;);</span><br>    <span class="hljs-title function_">reject</span>(<span class="hljs-string">&quot;数据获取出错&quot;</span>);<br>&#125;)<br><span class="hljs-comment">// await 放在async 函数里面</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">// await,成功的数据在这里接收 </span><br>        <span class="hljs-keyword">let</span> result = <span class="hljs-keyword">await</span> p;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result);<br>    &#125;<span class="hljs-keyword">catch</span>(e) &#123;<br>        <span class="hljs-comment">// 失败的数据在这接收</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e);<br>    &#125;<br>&#125;<br><span class="hljs-comment">// 调用函数</span><br><span class="hljs-title function_">main</span>();<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-20_20-28-54.png"></p><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-20_20-29-40.png"></p><h3 id="3-1-3-async和await读取文件"><a href="#3-1-3-async和await读取文件" class="headerlink" title="3.1.3 async和await读取文件"></a>3.1.3 async和await读取文件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> &#123; rejects &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;assert&#x27;</span>);<br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">const</span> &#123; resolve &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<br><br><span class="hljs-comment">// 读取第一个文件</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">readOne</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve,reject</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">// 读取文件</span><br>        fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">&quot;./resources/学习.md&quot;</span>,<span class="hljs-function">(<span class="hljs-params">err,data</span>) =&gt;</span> &#123;<br>            <span class="hljs-comment">// 读取成功</span><br>            <span class="hljs-title function_">resolve</span>(data);<br>            <span class="hljs-comment">// 读取失败</span><br>            <span class="hljs-keyword">if</span>(err) &#123;<br>                <span class="hljs-title function_">reject</span>(err);<br>            &#125;<br>        &#125;)<br>    &#125;)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">readTwo</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve,reject</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">// 读取文件</span><br>        fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">&quot;./resources/学习1.md&quot;</span>,<span class="hljs-function">(<span class="hljs-params">err,data</span>) =&gt;</span> &#123;<br>            <span class="hljs-comment">// 读取成功</span><br>            <span class="hljs-title function_">resolve</span>(data);<br>            <span class="hljs-comment">// 读取失败</span><br>            <span class="hljs-keyword">if</span>(err) &#123;<br>                <span class="hljs-title function_">reject</span>(err);<br>            &#125;<br>        &#125;)<br>    &#125;)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">readThree</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve,reject</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">// 读取文件</span><br>        fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">&quot;./resources/学习2.md&quot;</span>,<span class="hljs-function">(<span class="hljs-params">err,data</span>) =&gt;</span> &#123;<br>            <span class="hljs-comment">// 读取成功</span><br>            <span class="hljs-title function_">resolve</span>(data);<br>            <span class="hljs-comment">// 读取失败</span><br>            <span class="hljs-keyword">if</span>(err) &#123;<br>                <span class="hljs-title function_">reject</span>(err);<br>            &#125;<br>        &#125;)<br>    &#125;)<br>&#125;<br><span class="hljs-comment">// 声明 async 函数</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 接收返回成功的值</span><br>    <span class="hljs-keyword">let</span> successOne = <span class="hljs-keyword">await</span> <span class="hljs-title function_">readOne</span>();<br>    <span class="hljs-keyword">let</span> successTwo = <span class="hljs-keyword">await</span> <span class="hljs-title function_">readTwo</span>();<br>    <span class="hljs-keyword">let</span> successThree = <span class="hljs-keyword">await</span> <span class="hljs-title function_">readThree</span>();<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(successOne.<span class="hljs-title function_">toString</span>());<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(successTwo.<span class="hljs-title function_">toString</span>());<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(successThree.<span class="hljs-title function_">toString</span>());<br><br>&#125;<br><span class="hljs-comment">// 调用函数</span><br><span class="hljs-title function_">main</span>();<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-20_20-40-53.png"></p><h3 id="3-1-4-async和await发送Ajax"><a href="#3-1-4-async和await发送Ajax" class="headerlink" title="3.1.4 async和await发送Ajax"></a>3.1.4 async和await发送Ajax</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">sendAJAX</span>(<span class="hljs-params">url</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve,reject</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">const</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br>        xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>,url);<br>        xhr.<span class="hljs-title function_">send</span>();<br><br>        xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>) &#123;<br>                <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">status</span> &gt;= <span class="hljs-number">200</span> &amp;&amp; xhr.<span class="hljs-property">status</span> &lt; <span class="hljs-number">300</span>) &#123;<br>                    <span class="hljs-comment">// 成功数据</span><br>                    <span class="hljs-title function_">resolve</span>(xhr.<span class="hljs-property">response</span>);<br>                &#125;<span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-comment">// 失败数据</span><br>                    <span class="hljs-title function_">reject</span>(xhr.<span class="hljs-property">status</span>);<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;)<br>&#125;<br><span class="hljs-comment">// await 接收</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">let</span> result = <span class="hljs-keyword">await</span> <span class="hljs-title function_">sendAJAX</span>(<span class="hljs-string">&#x27;https://api.apiopen.top/getJoke&#x27;</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result);<br>&#125;<br><span class="hljs-title function_">main</span>();<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-20_20-52-34.png"></p><h2 id="3-2-ES8-对象扩展"><a href="#3-2-ES8-对象扩展" class="headerlink" title="3.2 ES8 对象扩展"></a>3.2 ES8 对象扩展</h2><h3 id="3-2-1-Object-values-和-Object-entries"><a href="#3-2-1-Object-values-和-Object-entries" class="headerlink" title="3.2.1 Object.values 和 Object.entries"></a>3.2.1 Object.values 和 Object.entries</h3><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-20_20-54-59.png"></p><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-20_20-57-24.png"></p><h3 id="3-2-2-Object-getOwnPropertyDescriptors"><a href="#3-2-2-Object-getOwnPropertyDescriptors" class="headerlink" title="3.2.2 Object.getOwnPropertyDescriptors"></a>3.2.2 Object.getOwnPropertyDescriptors</h3><p><img src="/2022/08/24/ES6-ES11/Snipaste_2022-03-20_20-57-53.png"></p><p>54</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript</title>
    <link href="/2022/08/24/JavaScript/"/>
    <url>/2022/08/24/JavaScript/</url>
    
    <content type="html"><![CDATA[<h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h1 id="1-初始JavaScript"><a href="#1-初始JavaScript" class="headerlink" title="1. 初始JavaScript"></a><strong>1. 初始JavaScript</strong></h1><h2 id="1-1-JavaScript历史"><a href="#1-1-JavaScript历史" class="headerlink" title="1.1 JavaScript历史"></a><strong>1.1 JavaScript历史</strong></h2><ul><li>略</li></ul><h2 id="1-2-JavaScript是什么"><a href="#1-2-JavaScript是什么" class="headerlink" title="1.2 JavaScript是什么"></a><strong>1.2 JavaScript是什么</strong></h2><ul><li><ul><li>运行在客户端的脚本语言</li></ul></li><li><ul><li>可以基于Node.js技术进行服务器编程</li></ul></li></ul><h2 id="1-3-JavaScript的作用"><a href="#1-3-JavaScript的作用" class="headerlink" title="1.3 JavaScript的作用"></a><strong>1.3 JavaScript的作用</strong></h2><ul><li><ul><li>表单动态校验</li><li>网页特效</li><li>服务端开发</li><li>桌面程序</li><li>APP</li><li>控制硬件-物联网</li><li>游戏开发</li></ul></li></ul><h2 id="1-4-浏览器执行JS简介"><a href="#1-4-浏览器执行JS简介" class="headerlink" title="1.4 浏览器执行JS简介"></a><strong>1.4 浏览器执行JS简介</strong></h2><ul><li><ul><li><strong>渲染引擎：</strong>解析HTML/CSS</li><li><strong>JS引擎：</strong>读取网页中JS代码</li></ul></li></ul><h2 id="1-5-JS的组成"><a href="#1-5-JS的组成" class="headerlink" title="1.5 JS的组成"></a><strong>1.5 JS的组成</strong></h2><ul><li><ul><li>ECMAScript</li><li>DOM<strong>（文档对象模型）</strong></li><li>BOM<strong>（浏览器对象模型）</strong></li></ul></li></ul><h2 id="1-6-JS初体验"><a href="#1-6-JS初体验" class="headerlink" title="1.6 JS初体验"></a><strong>1.6 JS初体验</strong></h2><ul><li>JS的三种嵌入方式    </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;input type=<span class="hljs-string">&quot;button&quot;</span> value=<span class="hljs-string">&quot;ss&quot;</span> onclick=<span class="hljs-string">&quot;alert(&#x27;sssss&#x27;)&quot;</span>&gt;    <span class="hljs-comment">// 行内式</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-xml"> <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;弹出框&quot;</span>)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span>         <span class="hljs-comment">// 内嵌式嵌入&lt;style标签&gt;</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">scr</span>=<span class="hljs-string">&quot;JS路径文件&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>   <br></code></pre></td></tr></table></figure><h2 id="1-7-JS的注释"><a href="#1-7-JS的注释" class="headerlink" title="1.7 JS的注释"></a><strong>1.7 JS的注释</strong></h2><ul><li>略</li></ul><h2 id="1-8-JS输入输出语句"><a href="#1-8-JS输入输出语句" class="headerlink" title="1.8 JS输入输出语句"></a><strong>1.8 JS输入输出语句</strong></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;输入框！&#x27;</span>);      <span class="hljs-comment">// prompt(&#x27;输入内容&#x27;);</span><br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;弹出警示框&#x27;</span>);     <span class="hljs-comment">// alert(&#x27;输出结果&#x27;); 输出</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;控制台输出&#x27;</span>);  <span class="hljs-comment">// console.log(&#x27;结果&#x27;); 用于测试代码</span><br></code></pre></td></tr></table></figure><h1 id="2-变量"><a href="#2-变量" class="headerlink" title="2. 变量"></a>2. <strong>变量</strong></h1><h2 id="2-1-变量的概述"><a href="#2-1-变量的概述" class="headerlink" title="2.1 变量的概述"></a><strong>2.1 变量的概述</strong></h2><ul><li>变量就是装东西的容器，用于存放数据的容器，通过变量名获取</li></ul><h2 id="2-2-变量的使用"><a href="#2-2-变量的使用" class="headerlink" title="2.2 变量的使用"></a><strong>2.2 变量的使用</strong></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-number">1.</span> 声明变量    <span class="hljs-number">2.</span>赋值<br><span class="hljs-keyword">var</span> age;     <span class="hljs-comment">// age自己定义的名字，申请一个空的空间</span><br>age = <span class="hljs-number">22</span>；   <span class="hljs-comment">// 给变量赋值，把 22 给age</span><br>&lt;script&gt;  <br>    <span class="hljs-keyword">var</span> age = <span class="hljs-number">22</span>;        <span class="hljs-comment">// 简写，称为变量的初始化</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(age);      <span class="hljs-comment">// 控制台输出22</span><br>&lt;/script&gt;<br><br><span class="hljs-number">3.</span> 声明多个变量<br><span class="hljs-keyword">var</span> age = <span class="hljs-number">22</span>,uName = <span class="hljs-string">&#x27;地里&#x27;</span>,address = <span class="hljs-string">&#x27;冬泳&#x27;</span>;  <span class="hljs-comment">// 变量之间逗号隔开</span><br><br><span class="hljs-number">4.</span> 声明变量的特殊情况<br><span class="hljs-keyword">var</span> sex; <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(sex);  <span class="hljs-comment">// 只声明不赋值  undefind  </span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(age);     <span class="hljs-comment">// 不声明不赋值  浏览器报错</span><br>address = <span class="hljs-string">&#x27;东部村&#x27;</span>; <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(address);    <span class="hljs-comment">// 不声明直接赋值 输出结果(不提倡使用) </span><br><br><span class="hljs-comment">//  综合案例</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> uName = <span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;请输入您的名字&#x27;</span>); <span class="hljs-comment">// 输入名字，赋值在uNname中</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">alert</span>(uName);      <span class="hljs-comment">// 弹出刚才的对话框</span></span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h2 id="2-3-变量的语法扩展"><a href="#2-3-变量的语法扩展" class="headerlink" title="2.3 变量的语法扩展"></a><strong>2.3 变量的语法扩展</strong></h2><h3 id="2-3-1-更新变量"><a href="#2-3-1-更新变量" class="headerlink" title="2.3.1 更新变量"></a><strong>2.3.1 更新变量</strong></h3><ul><li>一个变量被重新赋值后，它原有的赋值会被覆盖，以最后的一次赋值为准</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-keyword">var</span> uName = <span class="hljs-string">&#x27;这是什么&#x27;</span>;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(uName);  <span class="hljs-comment">// 输出&#x27;这是什么&#x27;</span><br>    uName = <span class="hljs-string">&#x27;我也不知道&#x27;</span>;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(uName);  <span class="hljs-comment">// 输出&#x27;我也不知道&#x27;</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h2 id="2-4-变量的命名规范"><a href="#2-4-变量的命名规范" class="headerlink" title="2.4 变量的命名规范"></a><strong>2.4 变量的命名规范</strong></h2><ul><li>略</li></ul><h2 id="2-5-课堂练习"><a href="#2-5-课堂练习" class="headerlink" title="2.5 课堂练习"></a><strong>2.5 课堂练习</strong></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-comment">// 两个数交换</span><br>    <span class="hljs-keyword">var</span> num1 = <span class="hljs-number">1</span>,num2 = <span class="hljs-number">4</span>;<br>    <span class="hljs-keyword">var</span> temp;<br>    num1 = temp;      <span class="hljs-comment">// temp = 1;</span><br>    num1 = num2;      <span class="hljs-comment">// num1 = 4;</span><br>    num2 = temp;      <span class="hljs-comment">// num2 = 1;</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h1 id="3-数据类型"><a href="#3-数据类型" class="headerlink" title="3. 数据类型"></a>3. <strong>数据类型</strong></h1><h2 id="3-1-数据类型的简介"><a href="#3-1-数据类型的简介" class="headerlink" title="3.1 数据类型的简介"></a><strong>3.1 数据类型的简介</strong></h2><ul><li>不同的数据所占的存储空间不同，有五种基本数据类型；</li></ul><h2 id="3-2-变量的数据类型"><a href="#3-2-变量的数据类型" class="headerlink" title="3.2 变量的数据类型"></a><strong>3.2 变量的数据类型</strong></h2><ul><li>简单数据类型<strong>（Number，String，Boolean，Undefined，Nulll）</strong></li><li>复杂数据类型<strong>（Object）</strong></li></ul><h2 id="3-3-数字型类型-Number"><a href="#3-3-数字型类型-Number" class="headerlink" title="3.3 数字型类型 Number"></a><strong>3.3 数字型类型</strong> <strong>Number</strong></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-number">1.</span> 定义<br><span class="hljs-keyword">var</span> age = <span class="hljs-number">21</span>;   <span class="hljs-comment">// 整数</span><br><span class="hljs-keyword">var</span> <span class="hljs-variable constant_">PI</span> = <span class="hljs-number">3.14</span>; <span class="hljs-comment">// 浮点型</span><br><span class="hljs-number">2.</span> 数字型进制（二进制，八进制，十进制，十六进制）<br>八进制：<span class="hljs-number">0</span> ~ <span class="hljs-number">7</span>;  <span class="hljs-keyword">var</span> num1 = <span class="hljs-number">010</span>;   <span class="hljs-comment">// 程序里面加0 表示八进制   </span><br>               <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(num1);  <span class="hljs-comment">// 8  010转为十进制</span><br>十六进制:<span class="hljs-number">0</span> ~ <span class="hljs-number">9</span>,a ~ f;  <span class="hljs-keyword">var</span> num3 = <span class="hljs-number">0x9</span>;  <span class="hljs-comment">// 数字前面加0x表示十六进制 </span><br>                      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(num3);  <span class="hljs-comment">// 9 </span><br></code></pre></td></tr></table></figure><h3 id="3-3-1-数字的范围"><a href="#3-3-1-数字的范围" class="headerlink" title="3.3.1 数字的范围"></a><strong>3.3.1 数字的范围</strong></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Number</span>.<span class="hljs-property">MAX_VALUE</span>);         <span class="hljs-comment">// 数字最大值 console.log(Number.MIN_VALUE);         // 数字最小值              </span><br></code></pre></td></tr></table></figure><h3 id="3-3-2-数字型的三个特殊值"><a href="#3-3-2-数字型的三个特殊值" class="headerlink" title="3.3.2 数字型的三个特殊值"></a><strong>3.3.2 数字型的三个特殊值</strong></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Infinity</span>);      <span class="hljs-comment">//无穷大 </span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(-<span class="hljs-title class_">Infinity</span>);    <span class="hljs-comment">//无穷小 </span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">NaN</span>);      <span class="hljs-comment">// not a number 非数值 </span><br><span class="hljs-comment">// isNaN  判断非数字，不是数字返回ture  是数字返回false </span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-built_in">isNaN</span>(<span class="hljs-number">12</span>));       <span class="hljs-comment">// false </span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-built_in">isNaN</span>(<span class="hljs-string">&#x27;Y&#x27;</span>));      <span class="hljs-comment">// true        </span><br></code></pre></td></tr></table></figure><p>​      </p><h2 id="3-4-字符串型-String"><a href="#3-4-字符串型-String" class="headerlink" title="3.4 字符串型 String"></a><strong>3.4 字符串型</strong> <strong>String</strong></h2><h3 id="3-4-1-字符串转义符"><a href="#3-4-1-字符串转义符" class="headerlink" title="3.4.1 字符串转义符"></a><strong>3.4.1 字符串转义符</strong></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> str1 = <span class="hljs-string">&quot;这是一个需要换行 \n 的文字&quot;</span>;       <span class="hljs-comment">// 通过 \n 进行转义，都用 \ 开头</span><br>\n  换行;  \\ 斜杠\        \<span class="hljs-string">&#x27; 斜杆单引号  \t tab缩进  </span><br></code></pre></td></tr></table></figure><h3 id="3-4-2-字符串的长度"><a href="#3-4-2-字符串的长度" class="headerlink" title="3.4.2 字符串的长度"></a><strong>3.4.2 字符串的长度</strong></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-number">1.</span> 检测获取字符串长度 length<br><span class="hljs-keyword">var</span> str1 = <span class="hljs-string">&#x27;pingkk&#x27;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str1.<span class="hljs-property">length</span>);  <span class="hljs-comment">//6   打印字符串长度</span><br></code></pre></td></tr></table></figure><h3 id="3-4-3-字符串拼接"><a href="#3-4-3-字符串拼接" class="headerlink" title="3.4.3 字符串拼接"></a><strong>3.4.3 字符串拼接</strong></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-number">1.</span> 字符串拼接 =&gt; 生成字符串  拼接符号 + <br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;pink&#x27;</span> + <span class="hljs-string">&#x27;tom&#x27;</span>);  <span class="hljs-comment">// pinktom</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;pink&#x27;</span> + <span class="hljs-number">1245</span>);   <span class="hljs-comment">// pink1245  </span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">12</span> + <span class="hljs-number">12</span>);  <span class="hljs-comment">// 24</span><br><span class="hljs-number">2.</span> + 号总结： 数值相加，字符串相连<br></code></pre></td></tr></table></figure><h3 id="3-4-4-字符串加强（方便修改变量）"><a href="#3-4-4-字符串加强（方便修改变量）" class="headerlink" title="3.4.4 字符串加强（方便修改变量）"></a><strong>3.4.4 字符串加强（方便修改变量）</strong></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> age = <span class="hljs-number">15</span>;            <span class="hljs-comment">// 方便修改变量</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;ping &#x27;</span> + age + <span class="hljs-string">&#x27;岁&#x27;</span>);   <span class="hljs-comment">// ping15岁</span><br></code></pre></td></tr></table></figure><h3 id="3-4-5-案例显示年龄"><a href="#3-4-5-案例显示年龄" class="headerlink" title="3.4.5 案例显示年龄"></a><strong>3.4.5 案例显示年龄</strong></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-keyword">var</span> age = <span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;请输入您的年龄&#x27;</span>);  <span class="hljs-comment">// 用户输入</span><br>    <span class="hljs-keyword">var</span> str = <span class="hljs-string">&#x27;您已经&#x27;</span> + age + <span class="hljs-string">&#x27;岁了&#x27;</span>;   <span class="hljs-comment">// 内部处理</span><br>    <span class="hljs-title function_">alert</span>(str);                         <span class="hljs-comment">// 返回数据</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h2 id="3-5-布尔型（Boolean）"><a href="#3-5-布尔型（Boolean）" class="headerlink" title="3.5 布尔型（Boolean）"></a><strong>3.5 布尔型</strong>（Boolean）</h2><ul><li>true 为 1；  false 为 0              </li></ul><h2 id="3-6-undefined-和-Null"><a href="#3-6-undefined-和-Null" class="headerlink" title="3.6 undefined 和 Null"></a><strong>3.6 undefined 和 Null</strong></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-literal">undefined</span> 未定义数据类型    <span class="hljs-literal">null</span>  空值<br><span class="hljs-keyword">var</span> vaiable = <span class="hljs-literal">undefined</span>,space = <span class="hljs-literal">null</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(vaiable + <span class="hljs-string">&#x27;pink&#x27;</span>);  <span class="hljs-comment">// vaiablepink  输出为字符串</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(vaiable + <span class="hljs-number">1</span>);  <span class="hljs-comment">// NaN   </span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(space + <span class="hljs-string">&#x27;pink&#x27;</span>); <span class="hljs-comment">// nullpink   输出为字符串</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(space + <span class="hljs-number">1</span>);    <span class="hljs-comment">// 1    空值 + 1 等于 1</span><br></code></pre></td></tr></table></figure><h2 id="3-7-获取变量数据类型"><a href="#3-7-获取变量数据类型" class="headerlink" title="3.7 获取变量数据类型"></a><strong>3.7 获取变量数据类型</strong></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">typeof</span> 检测变量数据类型<br><span class="hljs-keyword">var</span> num = <span class="hljs-number">10</span>,str = <span class="hljs-string">&#x27;pink&#x27;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> num);  <span class="hljs-comment">// number</span><br>consle.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> str); <span class="hljs-comment">// string</span><br><span class="hljs-keyword">var</span> age =  <span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;输入年龄&#x27;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> age);  <span class="hljs-comment">// string      prompt获取的数据是字符型</span><br></code></pre></td></tr></table></figure><h2 id="3-8-数据类型转换"><a href="#3-8-数据类型转换" class="headerlink" title="3.8 数据类型转换"></a><strong>3.8 数据类型转换</strong></h2><h3 id="3-8-1-什么是数据类型转换"><a href="#3-8-1-什么是数据类型转换" class="headerlink" title="3.8.1 什么是数据类型转换"></a><strong>3.8.1 什么是数据类型转换</strong></h3><ul><li>把一种数据类型的变量转换为另外一种数据类型变量</li></ul><h3 id="3-8-2-转换为字符串类型"><a href="#3-8-2-转换为字符串类型" class="headerlink" title="3.8.2 转换为字符串类型"></a><strong>3.8.2 转换为字符串类型</strong></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-number">1.</span><span class="hljs-title function_">toString</span>(); <span class="hljs-number">2.</span> <span class="hljs-title class_">String</span>(); 强制转换      <span class="hljs-number">3.</span> 加号拼接字符串<br><span class="hljs-keyword">var</span> num = <span class="hljs-number">10</span>;<br><span class="hljs-keyword">var</span> str = num.<span class="hljs-title function_">toString</span>();  <span class="hljs-comment">// 书写格式： 变量.toString()</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> str);   <span class="hljs-comment">//  string</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">String</span>(num));  <span class="hljs-comment">// string    String(变量);</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> num + <span class="hljs-string">&#x27;&#x27;</span>);  <span class="hljs-comment">// string     变量 + 空字符串</span><br></code></pre></td></tr></table></figure><h3 id="3-8-3-转换为数字型"><a href="#3-8-3-转换为数字型" class="headerlink" title="3.8.3 转换为数字型"></a><strong>3.8.3 转换为数字型</strong></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-number">1.</span><span class="hljs-built_in">parseInt</span>(string)函数，将string类型转为整数型<br><span class="hljs-number">2.</span><span class="hljs-title function_">parseFolat</span>(string)函数，将string转为浮点型<br><span class="hljs-number">3.</span><span class="hljs-title class_">Number</span>() 强制类型转换，将string转换为数值型<br><span class="hljs-number">4.</span>运算符隐式转换 - * /<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> age = <span class="hljs-title function_">prompt</span>(<span class="hljs-string">&quot;输入年龄&quot;</span>); </span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> <span class="hljs-built_in">parseInt</span>(age)); <span class="hljs-comment">// number   string转换为数字型</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> <span class="hljs-built_in">parseFloat</span>(age)); <span class="hljs-comment">// number  string转换为浮点型</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Number</span>(age)); <span class="hljs-comment">// number</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> <span class="hljs-string">&#x27;12&#x27;</span>- <span class="hljs-number">0</span>); <span class="hljs-comment">// 12  number</span></span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="3-8-4-转换为布尔型"><a href="#3-8-4-转换为布尔型" class="headerlink" title="3.8.4 转换为布尔型"></a><strong>3.8.4 转换为布尔型</strong></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-number">1.</span> <span class="hljs-title class_">Boolean</span>() 函数,代表空、否定的值会被转成<span class="hljs-literal">false</span>，<span class="hljs-string">&#x27;0&#x27;</span>,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-title class_">NaN</span>,<span class="hljs-title class_">Null</span>,<span class="hljs-literal">undefined</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Boolean</span>(<span class="hljs-string">&#x27;&#x27;</span>));  <span class="hljs-comment">//false</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Boolean</span>(<span class="hljs-number">12</span>));  <span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure><h3 id="3-8-5-案例"><a href="#3-8-5-案例" class="headerlink" title="3.8.5 案例"></a><strong>3.8.5 案例</strong></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-number">1.</span>计算年龄案例<br>&lt;script&gt;<br>    <span class="hljs-keyword">var</span> year = <span class="hljs-title function_">prompt</span>(<span class="hljs-string">&quot;请输入您的出生年份&quot;</span>);<br>    <span class="hljs-keyword">var</span> age = <span class="hljs-number">2021</span> - year;      <span class="hljs-comment">//已经隐式转换</span><br>    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;你已经&quot;</span>+ age + <span class="hljs-string">&quot;岁了&quot;</span>);<br>&lt;/script&gt;<br><span class="hljs-number">2.</span> 简单加法器<br>&lt;script&gt;<br>    <span class="hljs-keyword">var</span> num1 = <span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;请输入第一个数值&#x27;</span>);<br>    <span class="hljs-keyword">var</span> num2 = <span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;请输入第二个数值&#x27;</span>);<br>    <span class="hljs-keyword">var</span> sum = <span class="hljs-built_in">parseInt</span>(num1) + <span class="hljs-built_in">parseInt</span>(num2);<br>    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;两个值相加的结果为:&#x27;</span> + sum);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h1 id="4-运算符"><a href="#4-运算符" class="headerlink" title="4. 运算符"></a>4. <strong>运算符</strong></h1><h2 id="4-1-运算符简介"><a href="#4-1-运算符简介" class="headerlink" title="4.1 运算符简介"></a><strong>4.1 运算符简介</strong></h2><ul><li>进行比较和执行算数的符号</li></ul><h2 id="4-2-算数运算符"><a href="#4-2-算数运算符" class="headerlink" title="4.2 算数运算符"></a><strong>4.2 算数运算符</strong></h2><ul><li>+   -   *   /   %</li></ul><h2 id="4-3-表达式和返回值"><a href="#4-3-表达式和返回值" class="headerlink" title="4.3 表达式和返回值"></a><strong>4.3 表达式和返回值</strong></h2><ul><li>表达式：由数字、运算符、变量等组成的式子</li><li>表达式返回的结果就是返回值</li></ul><h2 id="4-4-递增和递减运算符"><a href="#4-4-递增和递减运算符" class="headerlink" title="4.4 递增和递减运算符"></a><strong>4.4 递增和递减运算符</strong></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-number">1.</span> 前置递增运算符,先自加，后返回值;<br><span class="hljs-keyword">var</span> num = <span class="hljs-number">1</span>;<br>++num;    <span class="hljs-comment">// 类似于 num = num + 1;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(num);  <span class="hljs-comment">// 2</span><br><span class="hljs-number">2.</span> 后置递增运算符,先返回原值，后自加;<br><span class="hljs-keyword">var</span> age = <span class="hljs-number">10</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(age++ + <span class="hljs-number">10</span>); <span class="hljs-comment">// 20    先返回原值后加10 </span><br></code></pre></td></tr></table></figure><h2 id="4-5-比较运算符"><a href="#4-5-比较运算符" class="headerlink" title="4.5 比较运算符"></a><strong>4.5 比较运算符</strong></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;  &gt;   &gt;=  &lt;=  ==  !=   ===   !==<br>===的要求是，两侧的值还有数据类型完全一致为<span class="hljs-literal">true</span><br>== 只要求值相等即可    <br></code></pre></td></tr></table></figure><h2 id="4-6-逻辑运算符"><a href="#4-6-逻辑运算符" class="headerlink" title="4.6 逻辑运算符"></a><strong>4.6 逻辑运算符</strong></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">&amp;&amp;（and,两个为真为真）  ||(or，一个为真为真)     ！(no,取反)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">3</span> &gt; <span class="hljs-number">5</span> || <span class="hljs-number">6</span> &gt; <span class="hljs-number">5</span>);  <span class="hljs-comment">//true</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">3</span> &lt; <span class="hljs-number">5</span> &amp;&amp; <span class="hljs-number">6</span> &gt; <span class="hljs-number">5</span>);  <span class="hljs-comment">//true</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(!<span class="hljs-literal">true</span>);    <span class="hljs-comment">//false      </span><br></code></pre></td></tr></table></figure><h2 id="4-6-1-逻辑中断"><a href="#4-6-1-逻辑中断" class="headerlink" title="4.6.1 逻辑中断"></a><strong>4.6.1 逻辑中断</strong></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js">短路运算，左边的表达式可以确定结果则不再运算右边的表达式<br><span class="hljs-number">1.</span>逻辑与短路运算，如果表达式<span class="hljs-number">1</span>为真，返回表达式<span class="hljs-number">2</span>，如果表达式<span class="hljs-number">1</span>为假，则返回表达式<span class="hljs-number">1</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">123</span> &amp;&amp; <span class="hljs-number">456</span>); <span class="hljs-comment">// 456</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">0</span> &amp;&amp; <span class="hljs-number">1</span> + <span class="hljs-number">2</span> &amp;&amp; <span class="hljs-number">4345</span>);  <span class="hljs-comment">// 0   0为假则直接返回表达式1 </span><br><span class="hljs-number">2.</span>逻辑或短路运算，如果表达式<span class="hljs-number">1</span>为真，返回表达式<span class="hljs-number">1</span>，如果表达式<span class="hljs-number">1</span>为假，则返回表达式<span class="hljs-number">2</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">123</span> || <span class="hljs-number">456</span>);       <span class="hljs-comment">//123   123为真返回123</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">0</span> || <span class="hljs-number">456</span> || <span class="hljs-number">123</span> + <span class="hljs-number">123</span>);       <span class="hljs-comment">//456 0为假，返回456         </span><br></code></pre></td></tr></table></figure><h2 id="4-7-赋值运算符"><a href="#4-7-赋值运算符" class="headerlink" title="4.7 赋值运算符"></a><strong>4.7 赋值运算符</strong></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">+=   -=<br><span class="hljs-keyword">var</span> num = <span class="hljs-number">10</span>;<br>num += <span class="hljs-number">2</span>;     <span class="hljs-comment">// 先加2 再赋值</span><br></code></pre></td></tr></table></figure><h1 id="5-循环"><a href="#5-循环" class="headerlink" title="5. 循环"></a>5. <strong>循环</strong></h1><h2 id="5-1-for-循环"><a href="#5-1-for-循环" class="headerlink" title="5.1 for 循环"></a><strong>5.1 for 循环</strong></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-number">1.</span> 语法结构<br><span class="hljs-keyword">for</span>(初始化变量;条件表达式;操作表达式)&#123;   循环体; &#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">10</span>;i++) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;循环体&#x27;</span> + i);   <br>&#125;<br><span class="hljs-number">2.</span> 执行过程<br>当 i = <span class="hljs-number">1</span>，判断 i 是否 &lt;= <span class="hljs-number">10</span>,为真则执行循环体，再执行操作表达式，再判断 i 是否 &lt;= <span class="hljs-number">10</span><br></code></pre></td></tr></table></figure><h2 id="5-2-for-循环重复执行不相同的代码"><a href="#5-2-for-循环重复执行不相同的代码" class="headerlink" title="5.2 for 循环重复执行不相同的代码"></a><strong>5.2 for 循环重复执行不相同的代码</strong></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;script&gt;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">10</span>; i++)&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;今年已经&quot;</span>+ i + <span class="hljs-string">&quot;岁了&quot;</span>);    <br>    &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h2 id="5-3-for-循环重复某些相同操作"><a href="#5-3-for-循环重复某些相同操作" class="headerlink" title="5.3 for 循环重复某些相同操作"></a><strong>5.3 for 循环重复某些相同操作</strong></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs js">案例<span class="hljs-number">1</span>，<span class="hljs-number">1</span>--<span class="hljs-number">100</span>所有整数累加<br>&lt;script&gt;<br>    <span class="hljs-keyword">var</span> sum = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">100</span>;i++) &#123;<br>    sum = sum + i;  <br>    &#125;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(sum);  <span class="hljs-comment">// 5050</span><br>&lt;/script&gt;<br>案例<span class="hljs-number">2</span>，求<span class="hljs-number">1</span>--<span class="hljs-number">100</span>之间所有数的平均值<br><span class="hljs-keyword">var</span> average = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">var</span> sum = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">100</span>; i++)&#123;<br>    sum = sum + i;<br>&#125;<br>average = sum / <span class="hljs-number">100</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(average);<br>案例<span class="hljs-number">3</span>，求<span class="hljs-number">1</span>--<span class="hljs-number">100</span>之间所有偶数和奇数的和<br><span class="hljs-keyword">var</span> sumJ = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">var</span> sumO = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">100</span>; i++) &#123;<br>    <span class="hljs-keyword">if</span>(i%<span class="hljs-number">2</span> == <span class="hljs-number">0</span>)&#123;<br>        sumO = sumO + i;    <br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        sumJ = sumJ + i;                         <br>    &#125;<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;奇数和为:&quot;</span>+sumJ+<span class="hljs-string">&quot;偶数和为：&quot;</span>+sumO);  <span class="hljs-comment">// 2500  2550</span><br>案例<span class="hljs-number">4</span>，求<span class="hljs-number">1</span>--<span class="hljs-number">100</span>之间所有能被<span class="hljs-number">3</span>整除的和<br><span class="hljs-keyword">var</span> sum = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">100</span>; i++)&#123;<br>    <span class="hljs-keyword">if</span>(i % <span class="hljs-number">3</span> == <span class="hljs-number">0</span>)&#123;<br>        sum += i;    <br>    &#125;<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(sum);  <span class="hljs-comment">// 1683</span><br></code></pre></td></tr></table></figure><h2 id="5-4-案例"><a href="#5-4-案例" class="headerlink" title="5.4 案例"></a><strong>5.4 案例</strong></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-number">1.</span> 要求用户输入班级人数，之后输入每个学生的成绩，最后打印班级总成绩以及平均成绩<br>&lt;script&gt;<br>        <span class="hljs-comment">// 平均值</span><br>        <span class="hljs-keyword">var</span> average = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">var</span> sum = <span class="hljs-number">0</span>; <span class="hljs-comment">//求总成绩</span><br>        <span class="hljs-comment">// 输入班级人数</span><br>        <span class="hljs-keyword">var</span> num = <span class="hljs-title function_">prompt</span>(<span class="hljs-string">&quot;请输入班级人数:&quot;</span>);<br>        <span class="hljs-comment">// 输入每个学生的成绩</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span>; i &lt;= num; i ++)&#123;<br>            <span class="hljs-comment">// alone 获取单个学生成绩</span><br>            <span class="hljs-keyword">var</span> result = <span class="hljs-title function_">prompt</span>(<span class="hljs-string">&quot;请输入第&quot;</span>+ i +<span class="hljs-string">&quot;个学生的成绩&quot;</span>);<br>            <span class="hljs-comment">// 进行成绩累加</span><br>            sum = <span class="hljs-built_in">parseFloat</span>(result) + sum;<br>        &#125;<br>        average = sum / num;<br>        <span class="hljs-comment">// 输出总成绩</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;班级总成绩为：&quot;</span>+sum);<br>        <span class="hljs-comment">// 输出平均成绩</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;班级平均成绩为：&quot;</span>+average);<br>&lt;/script&gt;<br><span class="hljs-number">2.</span> 一行打印自定义个⭐<br><span class="hljs-keyword">var</span> str = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">var</span> num = <span class="hljs-title function_">promot</span>(<span class="hljs-string">&quot;输入星星个数:&quot;</span>);<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span>; i &lt;= num; i++)&#123;<br>    str = str + <span class="hljs-string">&#x27;⭐&#x27;</span>;<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str);<br></code></pre></td></tr></table></figure><h1 id="6-数组"><a href="#6-数组" class="headerlink" title="6. 数组"></a>6. 数组</h1><h2 id="6-1-数组的概念"><a href="#6-1-数组的概念" class="headerlink" title="6.1 数组的概念"></a>6.1 数组的概念</h2><ul><li>数组就是一组数据的集合，其中每个数据被称为元素，在数组中可以放置任意类型的元素。</li></ul><h2 id="6-2-创建数组"><a href="#6-2-创建数组" class="headerlink" title="6.2 创建数组"></a>6.2 创建数组</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-number">1.</span> 利用 <span class="hljs-keyword">new</span> 创建数组，格式： <span class="hljs-keyword">var</span> 数组名 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>();<br><span class="hljs-keyword">var</span> arr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>();  <span class="hljs-comment">// 创建一个空数组</span><br><span class="hljs-number">2.</span> 利用数组字面量创建数组,格式: <span class="hljs-keyword">var</span> 数组名 = [];<br><span class="hljs-keyword">var</span> arr = [];    <span class="hljs-comment">// 创建一个空数组</span><br><span class="hljs-keyword">var</span> arr = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;string&#x27;</span>,<span class="hljs-literal">true</span>];  <span class="hljs-comment">// 可以存放任意数据，数据之间逗号隔开</span><br></code></pre></td></tr></table></figure><h2 id="6-3-数组的索引（下标）"><a href="#6-3-数组的索引（下标）" class="headerlink" title="6.3 数组的索引（下标）"></a>6.3 数组的索引（下标）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-number">1.</span> 获取数组元素，数组小标从 <span class="hljs-number">0</span> 开始<br><span class="hljs-keyword">var</span> arr = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;string&#x27;</span>,<span class="hljs-literal">true</span>];  <span class="hljs-comment">// 创建一个数组</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr[<span class="hljs-number">1</span>]);  <span class="hljs-comment">// 获取数组下标1的元素   打印出 2</span><br></code></pre></td></tr></table></figure><h2 id="6-4-遍历数组"><a href="#6-4-遍历数组" class="headerlink" title="6.4 遍历数组"></a>6.4 遍历数组</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> arr = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>];    <span class="hljs-comment">// 定义一个数组</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr.<span class="hljs-property">length</span>; i++)     <span class="hljs-comment">// 最终长度为数组的长度</span><br>&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr[i]);        <span class="hljs-comment">// 打印数组</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="6-5-案例"><a href="#6-5-案例" class="headerlink" title="6.5 案例"></a>6.5 案例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> arr = [<span class="hljs-number">2</span>,<span class="hljs-number">6</span>,<span class="hljs-number">1</span>,<span class="hljs-number">7</span>,<span class="hljs-number">4</span>];<br><span class="hljs-keyword">var</span> sum = <span class="hljs-number">0</span>;   <span class="hljs-comment">// 定义一个统计的值</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr.<span class="hljs-property">length</span>; i++)<br>&#123;<br>    sum = arr[i] + sum;<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;这个数组的和为：&quot;</span>+ sum);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;所有元素的平均值为:&quot;</span> + sum / arr.<span class="hljs-property">length</span>);<br></code></pre></td></tr></table></figure><h2 id="6-6-数组元素比较"><a href="#6-6-数组元素比较" class="headerlink" title="6.6 数组元素比较"></a>6.6 数组元素比较</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> arr = [<span class="hljs-number">2</span>,<span class="hljs-number">6</span>,<span class="hljs-number">1</span>,<span class="hljs-number">77</span>,<span class="hljs-number">52</span>,<span class="hljs-number">25</span>,<span class="hljs-number">7</span>];<br><span class="hljs-keyword">var</span> max = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt;= arr.<span class="hljs-property">length</span>;i++)<br>&#123;<br>    <span class="hljs-keyword">if</span>(arr[i] &gt; max)<br>    &#123;<br>        max = arr[i];<br>    &#125;<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;该数组中最大值为：&quot;</span> + max);   <span class="hljs-comment">// 77</span><br></code></pre></td></tr></table></figure><h2 id="6-7-数组转换为分割字符串"><a href="#6-7-数组转换为分割字符串" class="headerlink" title="6.7 数组转换为分割字符串"></a>6.7 数组转换为分割字符串</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> arr = [<span class="hljs-string">&#x27;red&#x27;</span>,<span class="hljs-string">&#x27;green&#x27;</span>,<span class="hljs-string">&#x27;blue&#x27;</span>,<span class="hljs-string">&#x27;pink&#x27;</span>]<br><span class="hljs-keyword">var</span> str = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr.<span class="hljs-property">length</span>; i++) &#123;<br>str += arr[i] + <span class="hljs-string">&#x27;|&#x27;</span>;<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str);<br></code></pre></td></tr></table></figure><h2 id="6-8-数组新增元素"><a href="#6-8-数组新增元素" class="headerlink" title="6.8 数组新增元素"></a>6.8 数组新增元素</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-number">1.</span> 通过修改length长度以及索引号增加数组元素<br><span class="hljs-keyword">var</span> arr = [<span class="hljs-string">&#x27;red&#x27;</span>,<span class="hljs-string">&#x27;green&#x27;</span>,<span class="hljs-string">&#x27;blue&#x27;</span>,<span class="hljs-string">&#x27;pink&#x27;</span>]<br>arr.<span class="hljs-property">length</span> = <span class="hljs-number">5</span>;  <span class="hljs-comment">// 将数组长度修改为 5</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr.<span class="hljs-property">length</span>);   <span class="hljs-comment">// empty * 1   空元素乘于 1</span><br><br><span class="hljs-number">2.</span> 新增数组元素，修改索引号<br><span class="hljs-keyword">var</span> arr = [<span class="hljs-string">&#x27;red&#x27;</span>,<span class="hljs-string">&#x27;green&#x27;</span>,<span class="hljs-string">&#x27;blue&#x27;</span>,<span class="hljs-string">&#x27;pink&#x27;</span>];<br>arr[<span class="hljs-number">4</span>] = whire;  <br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr);<br>arr[<span class="hljs-number">0</span>] = yellow;  <span class="hljs-comment">// 替换原有的数组元素</span><br></code></pre></td></tr></table></figure><h2 id="6-9-筛选数组"><a href="#6-9-筛选数组" class="headerlink" title="6.9 筛选数组"></a>6.9 筛选数组</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> arr = [<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">6</span>,<span class="hljs-number">1</span>,<span class="hljs-number">77</span>,<span class="hljs-number">52</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">25</span>,<span class="hljs-number">7</span>]<br><span class="hljs-keyword">var</span> newArr = [];<br><span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt;= arr.<span class="hljs-property">length</span>; i++) &#123;<br><span class="hljs-keyword">if</span>(arr[i] &gt; <span class="hljs-number">10</span>) &#123;<br><span class="hljs-comment">// 新数组从 0 依次递增</span><br>newArr[j] = arr[i];<br>j++;<br>&#125;<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(newArr);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Ajax</title>
    <link href="/2022/08/24/Ajax/"/>
    <url>/2022/08/24/Ajax/</url>
    
    <content type="html"><![CDATA[<h1 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h1><h2 id="1-原生Ajax"><a href="#1-原生Ajax" class="headerlink" title="1.原生Ajax"></a>1.原生Ajax</h2><h2 id="1-1AJAX简介"><a href="#1-1AJAX简介" class="headerlink" title="1. 1AJAX简介"></a>1. 1AJAX简介</h2><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-11_19-52-47.png"></p><h2 id="1-2-XML-简介"><a href="#1-2-XML-简介" class="headerlink" title="1.2 XML 简介"></a>1.2 XML 简介</h2><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-11_19-56-57.png"></p><ul><li>XML 现在已经被 JSON 取代</li></ul><h2 id="1-3-AJAX的特点"><a href="#1-3-AJAX的特点" class="headerlink" title="1.3 AJAX的特点"></a>1.3 AJAX的特点</h2><h3 id="1-3-1-AJAX的优点"><a href="#1-3-1-AJAX的优点" class="headerlink" title="1.3.1 AJAX的优点"></a>1.3.1 AJAX的优点</h3><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-11_20-00-37.png"></p><h3 id="1-3-2-AJAX的缺点"><a href="#1-3-2-AJAX的缺点" class="headerlink" title="1.3.2 AJAX的缺点"></a>1.3.2 AJAX的缺点</h3><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-11_20-00-42.png"></p><h2 id="1-4-AJAX的使用"><a href="#1-4-AJAX的使用" class="headerlink" title="1.4 AJAX的使用"></a>1.4 AJAX的使用</h2><h3 id="1-4-1-核心对象【请求报文】"><a href="#1-4-1-核心对象【请求报文】" class="headerlink" title="1.4.1 核心对象【请求报文】"></a>1.4.1 核心对象【请求报文】</h3><ul><li>行：POST    /  地址    HTTP/1.1</li><li>头：Host，cookie，content-type，user-agent</li><li>空行</li><li>体：username</li></ul><h3 id="1-4-2-核心对象【响应报文】"><a href="#1-4-2-核心对象【响应报文】" class="headerlink" title="1.4.2 核心对象【响应报文】"></a>1.4.2 核心对象【响应报文】</h3><ul><li>行： HTTP/1.1  200  OK</li><li>头：content-type，content-length，content-encoding</li><li>空行：</li><li>体：返回结果</li></ul><h3 id="1-4-3-chrome浏览器查看请求-响应报文"><a href="#1-4-3-chrome浏览器查看请求-响应报文" class="headerlink" title="1.4.3 chrome浏览器查看请求/响应报文"></a>1.4.3 chrome浏览器查看请求/响应报文</h3><ul><li>F12  – &gt;  Network</li></ul><h2 id="1-4-Node-js-安装"><a href="#1-4-Node-js-安装" class="headerlink" title="1.4 Node.js 安装"></a>1.4 Node.js 安装</h2><h2 id="1-5-express-js-安装"><a href="#1-5-express-js-安装" class="headerlink" title="1.5 express.js 安装"></a>1.5 express.js 安装</h2><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-11_20-32-18.png"></p><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-11_20-33-30.png"></p><h3 id="1-5-1-express-使用"><a href="#1-5-1-express-使用" class="headerlink" title="1.5.1 express 使用"></a>1.5.1 express 使用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 1. 引入 express</span><br><span class="hljs-keyword">const</span> &#123; response &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">const</span> &#123; request &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);<br><span class="hljs-comment">// 2. 创建应用对象</span><br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">express</span>();<br><span class="hljs-comment">// 3. 创建路由规则   request 请求报文封装   response 响应报文封装</span><br>app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">request,response</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 设置响应</span><br>    response.<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;Hello express&#x27;</span>);<br>&#125;);<br><span class="hljs-comment">// 4. 监听端口启动服务</span><br>app.<span class="hljs-title function_">listen</span>(<span class="hljs-number">8000</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;服务已启动,8000&#x27;</span>);<br>&#125;)<br></code></pre></td></tr></table></figure><ul><li>终端通过node启动服务</li></ul><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-11_20-39-59.png"></p><ul><li>通过浏览器打开</li></ul><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-11_20-41-35.png"></p><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-11_20-42-47.png"></p><ul><li>通过 Ctrl + C关闭端口</li></ul><h3 id="1-5-2-使用Ajax"><a href="#1-5-2-使用Ajax" class="headerlink" title="1.5.2 使用Ajax"></a>1.5.2 使用Ajax</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 1.  创建 ajax 对象</span><br><span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br><span class="hljs-comment">// 2. 初始化 设置方法了url</span><br>xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/server&#x27;</span>);<br><span class="hljs-comment">// 3. 发送</span><br>xhr.<span class="hljs-title function_">send</span>();<br><span class="hljs-comment">// 4.事件绑定   处理服务端返回的结果</span><br>xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 判断（服务端返回了所有结果)</span><br>    <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>) &#123;<br>        <span class="hljs-comment">// 判断响应状态码 200 404 500...</span><br>        <span class="hljs-comment">// 2xx 表示响应成功</span><br>        <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">status</span> &gt;= <span class="hljs-number">200</span> &amp;&amp; xhr.<span class="hljs-property">status</span> &lt; <span class="hljs-number">300</span>) &#123;<br>            <span class="hljs-comment">// 处理结果</span><br>            <span class="hljs-comment">// 1. 响应行</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">status</span>);  <span class="hljs-comment">// 状态码</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">statusText</span>);  <span class="hljs-comment">// 状态字符串</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-title function_">getAllResponseHeaders</span>()); <span class="hljs-comment">// 响应头</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">response</span>); <span class="hljs-comment">// 响应体</span><br>            <span class="hljs-comment">// 2. 将数据响应在 div 里面</span><br>            result.<span class="hljs-property">innerHTML</span> = xhr.<span class="hljs-property">response</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-11_21-31-09-16470507947011.png"></p><h3 id="1-5-3-设置-GET-请求参数"><a href="#1-5-3-设置-GET-请求参数" class="headerlink" title="1.5.3 设置 GET 请求参数"></a>1.5.3 设置 GET 请求参数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/server?a=100&amp;&amp;b=200&amp;&amp;c=300&#x27;</span>);<span class="hljs-comment">//请求体可以设置任意参数</span><br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-12_10-11-19.png"></p><h2 id="1-6-POST请求"><a href="#1-6-POST请求" class="headerlink" title="1.6 POST请求"></a>1.6 POST请求</h2><ul><li>设置post请求需要设置post路由器规则</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">app.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/server&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">request,response</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 设置响应头</span><br>    response.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>,<span class="hljs-string">&#x27;*&#x27;</span>);<br>    <span class="hljs-comment">// 设置响应</span><br>    response.<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;Hello Ajax POST&#x27;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li>调用 post </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 1. 创建ajax 对象</span><br><span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br><span class="hljs-comment">// 2. 初始化设置方法</span><br>xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;POST&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/server&#x27;</span>);<br><span class="hljs-comment">// 3. 发送请求</span><br>xhr.<span class="hljs-title function_">send</span>();<br><span class="hljs-comment">// 4. 绑定事件</span><br>xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 判断服务器返回结果</span><br>    <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>) &#123;<br>        <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">status</span> &gt;= <span class="hljs-number">200</span> &amp;&amp; xhr.<span class="hljs-property">status</span> &lt; <span class="hljs-number">300</span>) &#123;<br>            <span class="hljs-comment">// 处理结果</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">status</span>);<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">statusText</span>);<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-title function_">getAllResponseHeaders</span>());<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">response</span>);<br>            result.<span class="hljs-property">innerHTML</span> = xhr.<span class="hljs-property">response</span>;<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-12_10-24-18.png"></p><h3 id="1-6-1-POST请求设置参数"><a href="#1-6-1-POST请求设置参数" class="headerlink" title="1.6.1 POST请求设置参数"></a>1.6.1 POST请求设置参数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">xhr.<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;a=100&amp;b=200&amp;c=300&#x27;</span>);  <span class="hljs-comment">// 与 get请求设置参数位置不一样，请求体可以设置任意参数</span><br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-12_10-28-45.png"></p><h3 id="1-6-2-设置请求头信息"><a href="#1-6-2-设置请求头信息" class="headerlink" title="1.6.2 设置请求头信息"></a>1.6.2 设置请求头信息</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 1. 创建ajax 对象</span><br><span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br><span class="hljs-comment">// 2. 初始化设置方法</span><br>xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;POST&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/server&#x27;</span>);<br><span class="hljs-comment">// 设置请求头信息, 固定或者自定义写法</span><br>xhr.<span class="hljs-title function_">setRequestHeader</span>(<span class="hljs-string">&#x27;Content-Type&#x27;</span>,<span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>);<br><span class="hljs-comment">// 3. 发送请求</span><br>xhr.<span class="hljs-title function_">send</span>();<br><span class="hljs-comment">// 4. 绑定事件</span><br>xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 判断服务器返回结果</span><br>    <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>) &#123;<br>        <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">status</span> &gt;= <span class="hljs-number">200</span> &amp;&amp; xhr.<span class="hljs-property">status</span> &lt; <span class="hljs-number">300</span>) &#123;<br>            <span class="hljs-comment">// 处理结果</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">status</span>);<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">statusText</span>);<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-title function_">getAllResponseHeaders</span>());<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">response</span>);<br>            result.<span class="hljs-property">innerHTML</span> = xhr.<span class="hljs-property">response</span>;<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="1-6-3-处理-IE-缓存问题"><a href="#1-6-3-处理-IE-缓存问题" class="headerlink" title="1.6.3 处理 IE 缓存问题"></a>1.6.3 处理 IE 缓存问题</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">// 1. IE 浏览器在点击接收回请求之后，会将数据缓存在本地，这时候通过更改数据，重新点击，将不会再刷星</span><br><span class="hljs-comment">// 2. 增加时间戳可以实时刷新</span><br>xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/json-server?t=&#x27;</span> + <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>());<br></code></pre></td></tr></table></figure><h2 id="1-7-服务端响应JSON数据"><a href="#1-7-服务端响应JSON数据" class="headerlink" title="1.7 服务端响应JSON数据"></a>1.7 服务端响应JSON数据</h2><h3 id="1-7-1-服务器端设置-JSON-数据"><a href="#1-7-1-服务器端设置-JSON-数据" class="headerlink" title="1.7.1 服务器端设置 JSON 数据"></a>1.7.1 服务器端设置 JSON 数据</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 4. 设置所有权限都可以响应</span><br>app.<span class="hljs-title function_">all</span>(<span class="hljs-string">&#x27;/json-server&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">request,response</span>) =&gt;</span> &#123;<br>    response.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>,<span class="hljs-string">&#x27;*&#x27;</span>);<br>    <span class="hljs-comment">// json 数据需要对象进行传输</span><br>    <span class="hljs-keyword">const</span> data = &#123;<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;HELOO JSON&#x27;</span><br>    &#125;<br>    <span class="hljs-comment">// 通过 JSON.stringify() ,将数据处理成字符串</span><br>    <span class="hljs-keyword">let</span> str = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(data); <br>    <span class="hljs-comment">// 得到的字符串 发送给前端</span><br>    response.<span class="hljs-title function_">send</span>(str);<br>&#125;)<br></code></pre></td></tr></table></figure><h3 id="1-7-1-前端手动处理-JSON-数据"><a href="#1-7-1-前端手动处理-JSON-数据" class="headerlink" title="1.7.1 前端手动处理 JSON 数据"></a>1.7.1 前端手动处理 JSON 数据</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>) &#123;<br>        <span class="hljs-comment">// 通过 JSON.parse()  获取到 xhr的 response数据</span><br>        <span class="hljs-keyword">let</span> data = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(xhr.<span class="hljs-property">response</span>);<br>        <span class="hljs-comment">// 打印在页面上</span><br>        result.<span class="hljs-property">innerHTML</span> = data.<span class="hljs-property">name</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="1-7-2-前端自动处理-JSON-数据"><a href="#1-7-2-前端自动处理-JSON-数据" class="headerlink" title="1.7.2 前端自动处理 JSON 数据"></a>1.7.2 前端自动处理 JSON 数据</h3><ul><li>自动处理 JSON 数据必须设置接收类型为 JSON 数据</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 发送请求</span><br><span class="hljs-keyword">const</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br><span class="hljs-comment">// 设置响应体数据的类型为 json 数据</span><br>xhr.<span class="hljs-property">responseType</span> = <span class="hljs-string">&#x27;json&#x27;</span>;<br><span class="hljs-comment">// 初始化</span><br>xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/json-server&#x27;</span>);<br><span class="hljs-comment">// 设置请求头</span><br>xhr.<span class="hljs-title function_">setRequestHeader</span>(<span class="hljs-string">&#x27;Content-Type&#x27;</span>,<span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>);<br><span class="hljs-comment">// 发送请求</span><br>xhr.<span class="hljs-title function_">send</span>();<br><span class="hljs-comment">// 绑定事件</span><br>xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>) &#123;<br>    <span class="hljs-comment">// 将数据打印</span><br>    result.<span class="hljs-property">innerHTML</span> = xhr.<span class="hljs-property">response</span>.<span class="hljs-property">name</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-12_11-26-17.png"></p><h2 id="1-8-nodemon-自动重启服务"><a href="#1-8-nodemon-自动重启服务" class="headerlink" title="1.8 nodemon 自动重启服务"></a>1.8 nodemon 自动重启服务</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 安装</span><br>npm install -g nodemon<br><span class="hljs-comment">// 启动服务</span><br>nodemon 后端文件.<span class="hljs-property">js</span><br></code></pre></td></tr></table></figure><h2 id="1-9-请求超时与网络异常"><a href="#1-9-请求超时与网络异常" class="headerlink" title="1.9 请求超时与网络异常"></a>1.9 请求超时与网络异常</h2><h3 id="1-9-1-请求超时"><a href="#1-9-1-请求超时" class="headerlink" title="1.9.1 请求超时"></a>1.9.1 请求超时</h3><ul><li><h4 id="服务器端口设置延时器"><a href="#服务器端口设置延时器" class="headerlink" title="服务器端口设置延时器"></a>服务器端口设置延时器</h4></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 1. 服务器端口设置延时器</span><br>app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/delay&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">request,response</span>) =&gt;</span> &#123;<br>    response.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>,<span class="hljs-string">&#x27;*&#x27;</span>);<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        response.<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;延迟请求&#x27;</span>);<br>    &#125;,<span class="hljs-number">3000</span>)     <span class="hljs-comment">// 延迟3秒</span><br>&#125;)<br></code></pre></td></tr></table></figure><ul><li><h4 id="前端端口"><a href="#前端端口" class="headerlink" title="前端端口"></a>前端端口</h4></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br><span class="hljs-comment">// 超时设置, 超过2s 请求取消</span><br>xhr.<span class="hljs-property">timeout</span> = <span class="hljs-number">2000</span>;<br><span class="hljs-comment">// 超时回调</span><br>xhr.<span class="hljs-property">ontimeout</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;请求延迟，请重试&#x27;</span>)<br>&#125;<br>xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/delay&#x27;</span>);<br>xhr.<span class="hljs-title function_">send</span>();<br>xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>) &#123;<br>        <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">status</span> &gt;= <span class="hljs-number">200</span> &amp;&amp; xhr.<span class="hljs-property">status</span> &lt; <span class="hljs-number">300</span>) &#123;<br>            result.<span class="hljs-property">innerHTML</span> = xhr.<span class="hljs-property">response</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-12_15-02-43.png"></p><h3 id="1-9-2-网络异常"><a href="#1-9-2-网络异常" class="headerlink" title="1.9.2 网络异常"></a>1.9.2 网络异常</h3><ul><li><h4 id="前端端口-1"><a href="#前端端口-1" class="headerlink" title="前端端口"></a>前端端口</h4></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br><span class="hljs-comment">// 网络异常回调</span><br>xhr.<span class="hljs-property">onerror</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;网络出现故障，请检查网络&#x27;</span>);<br>&#125;<br>xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/delay&#x27;</span>);<br>xhr.<span class="hljs-title function_">send</span>();<br>xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>) &#123;<br>        <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">status</span> &gt;= <span class="hljs-number">200</span> &amp;&amp; xhr.<span class="hljs-property">status</span> &lt; <span class="hljs-number">300</span>) &#123;<br>            result.<span class="hljs-property">innerHTML</span> = xhr.<span class="hljs-property">response</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-12_15-02-14.png"></p><h2 id="1-10-手动请求取消"><a href="#1-10-手动请求取消" class="headerlink" title="1.10 手动请求取消"></a>1.10 手动请求取消</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 两个按钮 1个点击发送，1个点击取消</span><br>btn[<span class="hljs-number">0</span>].<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    x = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br>    x.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/delay&#x27;</span>);<br>    x.<span class="hljs-title function_">send</span>();<br>&#125;)<br><span class="hljs-comment">// 通过 abort 方法取消发送</span><br>btn[<span class="hljs-number">1</span>].<span class="hljs-property">onclick</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    x.<span class="hljs-title function_">abort</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-12_15-18-19.png"></p><h2 id="1-11-重复发送请求"><a href="#1-11-重复发送请求" class="headerlink" title="1.11 重复发送请求"></a>1.11 重复发送请求</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 判断标识变量,如果标识变量正在请求则取消</span><br><span class="hljs-keyword">if</span>(isSending) &#123;<br>    x.<span class="hljs-title function_">abort</span>();<br>&#125;<br>x = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br><span class="hljs-comment">// 修改标识变量的值</span><br>isSending = <span class="hljs-literal">true</span>;<br>x.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/delay&#x27;</span>);<br>x.<span class="hljs-title function_">send</span>();<br><span class="hljs-comment">// 请求完成情况</span><br>x.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 状态码为4 则发送成功修改为 false</span><br>    <span class="hljs-keyword">if</span>(x.<span class="hljs-property">readyStatus</span> === <span class="hljs-number">4</span>) &#123;<br>        isSending = <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-12_15-34-15.png"></p><h1 id="2-jQurey中的Ajax"><a href="#2-jQurey中的Ajax" class="headerlink" title="2. jQurey中的Ajax"></a>2. jQurey中的Ajax</h1><h2 id="2-1-GET请求"><a href="#2-1-GET请求" class="headerlink" title="2.1 GET请求"></a>2.1 GET请求</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;http://127.0.0.1:8000/jquery-server&#x27;</span>,&#123;<br>    <span class="hljs-attr">a</span>:<span class="hljs-number">100</span>,<span class="hljs-attr">b</span>:<span class="hljs-number">200</span>  <span class="hljs-comment">// 设置请求参数</span><br>&#125;,<br>    <span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data);<br>&#125;,<span class="hljs-string">&#x27;json&#x27;</span>);  <span class="hljs-comment">// 设置响应体是json格式</span><br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-12_17-43-44.png"></p><h2 id="2-2-POST请求"><a href="#2-2-POST请求" class="headerlink" title="2.2 POST请求"></a>2.2 POST请求</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;http://127.0.0.1:8000/jquery-server&#x27;</span>,&#123;<br>    <span class="hljs-attr">a</span>:<span class="hljs-number">100</span>,<span class="hljs-attr">b</span>:<span class="hljs-number">200</span>   <span class="hljs-comment">// 设置请求参数</span><br>&#125;,<br>    <span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data);<br>&#125;,<span class="hljs-string">&#x27;json&#x27;</span>)<span class="hljs-comment">// 表示响应体是json格式</span><br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-12_17-45-06.png"></p><h2 id="2-3-通用请求"><a href="#2-3-通用请求" class="headerlink" title="2.3 通用请求"></a>2.3 通用请求</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$.<span class="hljs-title function_">ajax</span>(&#123;<br><span class="hljs-comment">// url</span><br><span class="hljs-attr">url</span>:<span class="hljs-string">&#x27;http://127.0.0.1:8000/jquery-server&#x27;</span>,<br><span class="hljs-comment">// 参数</span><br>    <span class="hljs-attr">data</span>:&#123;<br>        <span class="hljs-attr">a</span>:<span class="hljs-number">100</span>,<br>        <span class="hljs-attr">b</span>:<span class="hljs-number">200</span><br>    &#125;,<br><span class="hljs-comment">// 请求类型</span><br><span class="hljs-attr">type</span>:<span class="hljs-string">&#x27;GET&#x27;</span>,<br><span class="hljs-comment">// 响应体结果设置</span><br><span class="hljs-attr">dataType</span>:<span class="hljs-string">&#x27;json&#x27;</span>,<br><span class="hljs-comment">// 成功的回调</span><br>    <span class="hljs-attr">success</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data);<br>    &#125;,<br><span class="hljs-comment">// 超时时间</span><br><span class="hljs-attr">timeout</span>:<span class="hljs-number">2000</span>,<br><span class="hljs-comment">// 失败回调</span><br>    <span class="hljs-attr">error</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;出错了&#x27;</span>);<br>    &#125;,<br><span class="hljs-comment">// 自定义头信息 </span><br>    <span class="hljs-attr">headers</span>: &#123;<br>        <span class="hljs-attr">c</span>:<span class="hljs-number">300</span>,<br>        <span class="hljs-attr">d</span>:<span class="hljs-number">300</span><br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-12_17-46-55.png"></p><h2 id="2-4-后端全通用设置"><a href="#2-4-后端全通用设置" class="headerlink" title="2.4 后端全通用设置"></a>2.4 后端全通用设置</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">app.<span class="hljs-title function_">all</span>(<span class="hljs-string">&#x27;/jquery-server&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">request,response</span>) =&gt;</span> &#123;<br>    response.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>,<span class="hljs-string">&#x27;*&#x27;</span>);<br>    response.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Headers&#x27;</span>,<span class="hljs-string">&#x27;*&#x27;</span>);<br>    <span class="hljs-keyword">const</span> data = &#123;<br>        name : <span class="hljs-string">&#x27;ajax&#x27;</span><br>    &#125;<br>    response.<span class="hljs-title function_">send</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(data));<br>&#125;)<br></code></pre></td></tr></table></figure><h1 id="3-axios发送AJAX请求"><a href="#3-axios发送AJAX请求" class="headerlink" title="3. axios发送AJAX请求"></a>3. axios发送AJAX请求</h1><h2 id="3-1-axios下载地址"><a href="#3-1-axios下载地址" class="headerlink" title="3.1 axios下载地址"></a>3.1 axios下载地址</h2><ul><li><a href="https://github.com/axios/axios">https://github.com/axios/axios</a></li></ul><h2 id="3-2-GET-请求"><a href="#3-2-GET-请求" class="headerlink" title="3.2 GET 请求"></a>3.2 GET 请求</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 配置 baseURL 进行简化操作</span><br>axios.<span class="hljs-property">defaults</span>.<span class="hljs-property">baseURL</span> = <span class="hljs-string">&#x27;http://127.0.0.1:8000&#x27;</span>;<br><span class="hljs-comment">// GET 请求</span><br>axios.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/axios-server&#x27;</span>,&#123;<br>    <span class="hljs-comment">// url参数</span><br>    <span class="hljs-attr">params</span>:&#123;<br>        <span class="hljs-attr">id</span>:<span class="hljs-number">100</span>,<br>        <span class="hljs-attr">age</span>:<span class="hljs-number">1</span><br>    &#125;,<br>    <span class="hljs-comment">// 请求头信息</span><br>    <span class="hljs-attr">headers</span>:&#123;<br>        <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;AJAX&#x27;</span>,<br>        <span class="hljs-attr">age</span>:<span class="hljs-number">122</span><br>    &#125;<br>&#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">value</span> =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(value);<br>&#125;);<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-12_19-39-37.png"></p><h2 id="3-3-POST-请求"><a href="#3-3-POST-请求" class="headerlink" title="3.3 POST 请求"></a>3.3 POST 请求</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 配置 baseURL 进行简化操作</span><br>axios.<span class="hljs-property">defaults</span>.<span class="hljs-property">baseURL</span> = <span class="hljs-string">&#x27;http://127.0.0.1:8000&#x27;</span>;<br>axios.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/axios-server&#x27;</span>,<br>           &#123;<br>    username : <span class="hljs-string">&#x27;admin&#x27;</span>,<br>    password : <span class="hljs-string">&#x27;admin&#x27;</span><br>&#125;,&#123;<br>    <span class="hljs-attr">params</span>: &#123;<br>        <span class="hljs-attr">id</span>:<span class="hljs-number">200</span>,<br>        <span class="hljs-attr">vip</span>:<span class="hljs-number">2</span><br>    &#125;,<br>    <span class="hljs-attr">headers</span>:&#123;<br>        <span class="hljs-attr">wight</span>:<span class="hljs-number">150</span>,<br>        <span class="hljs-attr">height</span>:<span class="hljs-number">150</span><br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="3-4-通用方式发送请求"><a href="#3-4-通用方式发送请求" class="headerlink" title="3.4 通用方式发送请求"></a>3.4 通用方式发送请求</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 配置 baseURL 进行简化操作</span><br>axios.<span class="hljs-property">defaults</span>.<span class="hljs-property">baseURL</span> = <span class="hljs-string">&#x27;http://127.0.0.1:8000&#x27;</span>;<br><span class="hljs-title function_">axios</span>(&#123;<br>    <span class="hljs-comment">// 请求方式</span><br>    method : <span class="hljs-string">&#x27;POST&#x27;</span>,<br>    <span class="hljs-comment">// url</span><br>    <span class="hljs-attr">url</span>:<span class="hljs-string">&#x27;/axios-server&#x27;</span>,<br>    <span class="hljs-comment">//url 参数</span><br>    <span class="hljs-attr">params</span>:&#123;<br>    vip : <span class="hljs-number">12</span>,<br>    level :<span class="hljs-number">22</span><br>    &#125;,<br>    <span class="hljs-comment">// 头信息</span><br>    <span class="hljs-attr">headers</span>:&#123;<br>    <span class="hljs-attr">a</span>:<span class="hljs-number">100</span>,<br>    <span class="hljs-attr">b</span>:<span class="hljs-number">222</span><br>    &#125;,<br>    <span class="hljs-attr">data</span>:&#123;<br>    <span class="hljs-attr">uname</span>:<span class="hljs-string">&#x27;admin&#x27;</span>,<br>    <span class="hljs-attr">pad</span>:<span class="hljs-string">&#x27;admin&#x27;</span><br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><p><img src="/2022/08/24/Ajax/Snipaste_2022-03-12_20-00-50.png"></p><h2 id="3-5-fetch-函数"><a href="#3-5-fetch-函数" class="headerlink" title="3.5 fetch() 函数"></a>3.5 fetch() 函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">fetch</span>(<span class="hljs-string">&#x27;http://127.0.0.1:8000/fetch-server&#x27;</span>,&#123;<br><span class="hljs-comment">// 请求方法</span><br><span class="hljs-attr">method</span>:<span class="hljs-string">&#x27;POST&#x27;</span>,<br><span class="hljs-comment">// 请求头</span><br>    <span class="hljs-attr">headers</span>:&#123;<br>   <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;uname&#x27;</span><br>&#125;,<br><span class="hljs-comment">// 请求体</span><br><span class="hljs-attr">body</span>:<span class="hljs-string">&#x27;uname=admin&amp;pad=admin&#x27;</span><br>&#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">response</span> =&gt;</span> &#123;<br><span class="hljs-keyword">return</span> response.<span class="hljs-title function_">json</span>();<br>&#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">response</span> =&gt;</span>&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(response);<br>&#125;);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>博客更新操作步骤</title>
    <link href="/2022/08/21/%E5%8D%9A%E5%AE%A2%E9%97%AE%E9%A2%98/"/>
    <url>/2022/08/21/%E5%8D%9A%E5%AE%A2%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<ol><li><code>hexo clean</code> 清理缓存</li><li><code>hexo d</code> 打包</li><li>每一次写新文章需要<code>hexo new xxx</code><ul><li>然后把图片放在对应的路径</li><li>之后<code>hexo clean</code>  <code>hexo g</code> <code>hexo s</code></li><li>解决图片不显示问题:<code>https://www.bilibili.com/video/BV1D7411U7Yk?spm_id_from=333.337.search-card.all.click&amp;vd_source=65834937bd318a334ced3a2252fef1c7</code></li></ul></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>做项目的时候遇到的问题</title>
    <link href="/2022/08/21/project-question/"/>
    <url>/2022/08/21/project-question/</url>
    
    <content type="html"><![CDATA[<h2 id="1-proxy解决跨域问题"><a href="#1-proxy解决跨域问题" class="headerlink" title="1. proxy解决跨域问题"></a>1. proxy解决跨域问题</h2><ul><li>在<code>vue.config.js</code>配置<code>proxy</code>解决跨域问题<ul><li>具体代码：</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br><span class="hljs-attr">devServer</span>: &#123;<br><span class="hljs-attr">proxy</span>: &#123;  <span class="hljs-comment">//配置跨域</span><br><span class="hljs-string">&#x27;/ajax&#x27;</span>: &#123;<br><span class="hljs-attr">target</span>: <span class="hljs-string">&#x27;https://m.maoyan.com/ajax/&#x27;</span>,  <span class="hljs-comment">//这里后台的地址模拟的;应该填写你们真实的后台接口</span><br><span class="hljs-attr">changOrigin</span>: <span class="hljs-literal">true</span>,  <span class="hljs-comment">//允许跨域</span><br><span class="hljs-attr">secure</span>:<span class="hljs-literal">true</span>,<br><span class="hljs-attr">pathRewrite</span>: &#123;<br><span class="hljs-string">&#x27;^/ajax&#x27;</span>: <span class="hljs-string">&#x27;/&#x27;</span><br>&#125;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><code>&#39;/ajax&#39;</code>是接口共同识别的地方，如果出现<code>/ajax</code>将被替换为<code>/</code></li></ul><h2 id="2-父组件给子组件传参问题"><a href="#2-父组件给子组件传参问题" class="headerlink" title="2. 父组件给子组件传参问题"></a>2. 父组件给子组件传参问题</h2><h3 id="父组件给子组件传参"><a href="#父组件给子组件传参" class="headerlink" title="父组件给子组件传参"></a>父组件给子组件传参</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 父组件里面有子组件</span><br><span class="hljs-comment">// : 是子组件要接口的参数名，后面接着要传递的参数</span><br>&lt;son :para = <span class="hljs-string">&#x27;parameter&#x27;</span>&gt;&lt;/son&gt;<br><br><span class="hljs-comment">// 子组件通过props进行接收</span><br><span class="hljs-attr">props</span>:[<span class="hljs-string">&#x27;para&#x27;</span>]<br></code></pre></td></tr></table></figure><h3 id="点击事件传参接参"><a href="#点击事件传参接参" class="headerlink" title="点击事件传参接参"></a>点击事件传参接参</h3><ul><li>需求是通过点击事件把原先的页面数据通过点击后，传递过去一个需要的值给其他页面</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div @click=<span class="hljs-string">&quot;parameter(id)&quot;</span>&gt;设置点击事件进行传参&lt;/div&gt;<br><span class="hljs-attr">methods</span>:&#123;<br><span class="hljs-title function_">parameter</span>(<span class="hljs-params">mid</span>)&#123;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">$router</span>.<span class="hljs-title function_">push</span>(&#123;<br><span class="hljs-comment">// 跳转的地址</span><br><span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;/detail&#x27;</span>,<br><span class="hljs-attr">query</span>:&#123;<br><span class="hljs-comment">// 传递过去的参数</span><br>mid<br>&#125;<br>&#125;)<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 其他页面进行接收</span><br><span class="hljs-comment">// 使用 this.$route.query.params 进行接收</span><br><span class="hljs-attr">methods</span>:&#123;<br><span class="hljs-title function_">getId</span>(<span class="hljs-params">mid</span>)&#123;<br><span class="hljs-keyword">const</span> mId = <span class="hljs-variable language_">this</span>.<span class="hljs-property">$route</span>.<span class="hljs-property">query</span>.<span class="hljs-property">mid</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="3-axios组件封装"><a href="#3-axios组件封装" class="headerlink" title="3. axios组件封装"></a>3. <code>axios</code>组件封装</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript">npm i axios<br><br><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;axios&#x27;</span><br><br><span class="hljs-keyword">const</span> http = axios.<span class="hljs-title function_">create</span>(&#123;<br>    <span class="hljs-attr">baseURL</span>:<span class="hljs-string">&#x27;http://localhost:3000/&#x27;</span><br>&#125;)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> http<br><br><br><span class="hljs-comment">// 全局 使用axios</span><br><span class="hljs-keyword">import</span> http <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/axios/http&#x27;</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$http</span> = http<br></code></pre></td></tr></table></figure><h2 id="4-iconfont-字体图标的使用"><a href="#4-iconfont-字体图标的使用" class="headerlink" title="4. iconfont 字体图标的使用"></a>4. <code>iconfont</code> 字体图标的使用</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">下载本地文件后，在main.<span class="hljs-property">js</span>引入 iconfont.<span class="hljs-property">css</span> 即可<br></code></pre></td></tr></table></figure><h2 id="5-底部菜单栏固定定位设置宽度，父元素被撑大问题"><a href="#5-底部菜单栏固定定位设置宽度，父元素被撑大问题" class="headerlink" title="5. 底部菜单栏固定定位设置宽度，父元素被撑大问题"></a>5. 底部菜单栏固定定位设置宽度，父元素被撑大问题</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">width</span>:<span class="hljs-title function_">calc</span>(<span class="hljs-number">100</span>% - <span class="hljs-number">10</span>%)<br></code></pre></td></tr></table></figure><h2 id="6-vue-渲染数据时所渲染的值为空，之后渲染完毕页面不报错问题"><a href="#6-vue-渲染数据时所渲染的值为空，之后渲染完毕页面不报错问题" class="headerlink" title="6. vue 渲染数据时所渲染的值为空，之后渲染完毕页面不报错问题"></a>6. <code>vue</code> 渲染数据时所渲染的值为空，之后渲染完毕页面不报错问题</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">Error</span> <span class="hljs-keyword">in</span> <span class="hljs-attr">render</span>: <span class="hljs-string">&quot;TypeError: Cannot read properties of undefined (reading xxx&#x27;)&quot;</span><br><br>解决：需要在页面渲染时给定一个空值即可<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>

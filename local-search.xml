<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Nodejs</title>
    <link href="/2022/08/24/Nodejs/"/>
    <url>/2022/08/24/Nodejs/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Css</title>
    <link href="/2022/08/24/Css/"/>
    <url>/2022/08/24/Css/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript</title>
    <link href="/2022/08/24/JavaScript/"/>
    <url>/2022/08/24/JavaScript/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Vue</title>
    <link href="/2022/08/24/Vue/"/>
    <url>/2022/08/24/Vue/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Html</title>
    <link href="/2022/08/24/Html/"/>
    <url>/2022/08/24/Html/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>博客更新操作步骤</title>
    <link href="/2022/08/21/%E5%8D%9A%E5%AE%A2%E9%97%AE%E9%A2%98/"/>
    <url>/2022/08/21/%E5%8D%9A%E5%AE%A2%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<ol><li>删除<code>hexo/.deploy_git、public</code>文件</li><li>编辑好文章之后保存到，<code>source/_posts</code>下</li><li>通过命令工具，使用命令<code>hexo d</code> 进行打包</li><li>再登录宝塔面板找到对应文件目录将<code>public</code> 仓库的东西进行替换</li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>做项目的时候遇到的问题</title>
    <link href="/2022/08/21/project-question/"/>
    <url>/2022/08/21/project-question/</url>
    
    <content type="html"><![CDATA[<h2 id="1-proxy解决跨域问题"><a href="#1-proxy解决跨域问题" class="headerlink" title="1. proxy解决跨域问题"></a>1. proxy解决跨域问题</h2><ul><li>在<code>vue.config.js</code>配置<code>proxy</code>解决跨域问题<ul><li>具体代码：</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br><span class="hljs-attr">devServer</span>: &#123;<br><span class="hljs-attr">proxy</span>: &#123;  <span class="hljs-comment">//配置跨域</span><br><span class="hljs-string">&#x27;/ajax&#x27;</span>: &#123;<br><span class="hljs-attr">target</span>: <span class="hljs-string">&#x27;https://m.maoyan.com/ajax/&#x27;</span>,  <span class="hljs-comment">//这里后台的地址模拟的;应该填写你们真实的后台接口</span><br><span class="hljs-attr">changOrigin</span>: <span class="hljs-literal">true</span>,  <span class="hljs-comment">//允许跨域</span><br><span class="hljs-attr">secure</span>:<span class="hljs-literal">true</span>,<br><span class="hljs-attr">pathRewrite</span>: &#123;<br><span class="hljs-string">&#x27;^/ajax&#x27;</span>: <span class="hljs-string">&#x27;/&#x27;</span><br>&#125;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><code>&#39;/ajax&#39;</code>是接口共同识别的地方，如果出现<code>/ajax</code>将被替换为<code>/</code></li></ul><h2 id="2-父组件给子组件传参问题"><a href="#2-父组件给子组件传参问题" class="headerlink" title="2. 父组件给子组件传参问题"></a>2. 父组件给子组件传参问题</h2><h3 id="父组件给子组件传参"><a href="#父组件给子组件传参" class="headerlink" title="父组件给子组件传参"></a>父组件给子组件传参</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 父组件里面有子组件</span><br><span class="hljs-comment">// : 是子组件要接口的参数名，后面接着要传递的参数</span><br>&lt;son :para = <span class="hljs-string">&#x27;parameter&#x27;</span>&gt;&lt;/son&gt;<br><br><span class="hljs-comment">// 子组件通过props进行接收</span><br><span class="hljs-attr">props</span>:[<span class="hljs-string">&#x27;para&#x27;</span>]<br></code></pre></td></tr></table></figure><h3 id="点击事件传参接参"><a href="#点击事件传参接参" class="headerlink" title="点击事件传参接参"></a>点击事件传参接参</h3><ul><li>需求是通过点击事件把原先的页面数据通过点击后，传递过去一个需要的值给其他页面</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div @click=<span class="hljs-string">&quot;parameter(id)&quot;</span>&gt;设置点击事件进行传参&lt;/div&gt;<br><span class="hljs-attr">methods</span>:&#123;<br><span class="hljs-title function_">parameter</span>(<span class="hljs-params">mid</span>)&#123;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">$router</span>.<span class="hljs-title function_">push</span>(&#123;<br><span class="hljs-comment">// 跳转的地址</span><br><span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;/detail&#x27;</span>,<br><span class="hljs-attr">query</span>:&#123;<br><span class="hljs-comment">// 传递过去的参数</span><br>mid<br>&#125;<br>&#125;)<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 其他页面进行接收</span><br><span class="hljs-comment">// 使用 this.$route.query.params 进行接收</span><br><span class="hljs-attr">methods</span>:&#123;<br><span class="hljs-title function_">getId</span>(<span class="hljs-params">mid</span>)&#123;<br><span class="hljs-keyword">const</span> mId = <span class="hljs-variable language_">this</span>.<span class="hljs-property">$route</span>.<span class="hljs-property">query</span>.<span class="hljs-property">mid</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="3-axios组件封装"><a href="#3-axios组件封装" class="headerlink" title="3. axios组件封装"></a>3. <code>axios</code>组件封装</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript">npm i axios<br><br><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;axios&#x27;</span><br><br><span class="hljs-keyword">const</span> http = axios.<span class="hljs-title function_">create</span>(&#123;<br>    <span class="hljs-attr">baseURL</span>:<span class="hljs-string">&#x27;http://localhost:3000/&#x27;</span><br>&#125;)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> http<br><br><br><span class="hljs-comment">// 全局 使用axios</span><br><span class="hljs-keyword">import</span> http <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/axios/http&#x27;</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$http</span> = http<br></code></pre></td></tr></table></figure><h2 id="4-iconfont-字体图标的使用"><a href="#4-iconfont-字体图标的使用" class="headerlink" title="4. iconfont 字体图标的使用"></a>4. <code>iconfont</code> 字体图标的使用</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">下载本地文件后，在main.<span class="hljs-property">js</span>引入 iconfont.<span class="hljs-property">css</span> 即可<br></code></pre></td></tr></table></figure><h2 id="5-底部菜单栏固定定位设置宽度，父元素被撑大问题"><a href="#5-底部菜单栏固定定位设置宽度，父元素被撑大问题" class="headerlink" title="5. 底部菜单栏固定定位设置宽度，父元素被撑大问题"></a>5. 底部菜单栏固定定位设置宽度，父元素被撑大问题</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">width</span>:<span class="hljs-title function_">calc</span>(<span class="hljs-number">100</span>% - <span class="hljs-number">10</span>%)<br></code></pre></td></tr></table></figure><h2 id="6-vue-渲染数据时所渲染的值为空，之后渲染完毕页面不报错问题"><a href="#6-vue-渲染数据时所渲染的值为空，之后渲染完毕页面不报错问题" class="headerlink" title="6. vue 渲染数据时所渲染的值为空，之后渲染完毕页面不报错问题"></a>6. <code>vue</code> 渲染数据时所渲染的值为空，之后渲染完毕页面不报错问题</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">Error</span> <span class="hljs-keyword">in</span> <span class="hljs-attr">render</span>: <span class="hljs-string">&quot;TypeError: Cannot read properties of undefined (reading xxx&#x27;)&quot;</span><br><br>解决：需要在页面渲染时给定一个空值即可<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>

<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Ajax</title>
    <link href="/2022/08/24/Ajax/"/>
    <url>/2022/08/24/Ajax/</url>
    
    <content type="html"><![CDATA[<h1 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h1><h2 id="1-原生Ajax"><a href="#1-原生Ajax" class="headerlink" title="1.原生Ajax"></a>1.原生Ajax</h2><h3 id="1-1AJAX简介"><a href="#1-1AJAX简介" class="headerlink" title="1. 1AJAX简介"></a>1. 1AJAX简介</h3><p><img src="/.com//Snipaste_2022-03-11_19-52-47.png"></p><h3 id="1-2-XML-简介"><a href="#1-2-XML-简介" class="headerlink" title="1.2 XML 简介"></a>1.2 XML 简介</h3><p><img src="/.com//Snipaste_2022-03-11_19-56-57.png"></p><ul><li>XML 现在已经被 JSON 取代</li></ul><h3 id="1-3-AJAX的特点"><a href="#1-3-AJAX的特点" class="headerlink" title="1.3 AJAX的特点"></a>1.3 AJAX的特点</h3><h4 id="1-3-1-AJAX的优点"><a href="#1-3-1-AJAX的优点" class="headerlink" title="1.3.1 AJAX的优点"></a>1.3.1 AJAX的优点</h4><p><img src="/.com//Snipaste_2022-03-11_20-00-37.png"></p><h4 id="1-3-2-AJAX的缺点"><a href="#1-3-2-AJAX的缺点" class="headerlink" title="1.3.2 AJAX的缺点"></a>1.3.2 AJAX的缺点</h4><p><img src="/.com//Snipaste_2022-03-11_20-00-42.png"></p><h3 id="1-4-AJAX的使用"><a href="#1-4-AJAX的使用" class="headerlink" title="1.4 AJAX的使用"></a>1.4 AJAX的使用</h3><h4 id="1-4-1-核心对象【请求报文】"><a href="#1-4-1-核心对象【请求报文】" class="headerlink" title="1.4.1 核心对象【请求报文】"></a>1.4.1 核心对象【请求报文】</h4><ul><li>行：POST    /  地址    HTTP/1.1</li><li>头：Host，cookie，content-type，user-agent</li><li>空行</li><li>体：username</li></ul><h4 id="1-4-2-核心对象【响应报文】"><a href="#1-4-2-核心对象【响应报文】" class="headerlink" title="1.4.2 核心对象【响应报文】"></a>1.4.2 核心对象【响应报文】</h4><ul><li>行： HTTP/1.1  200  OK</li><li>头：content-type，content-length，content-encoding</li><li>空行：</li><li>体：返回结果</li></ul><h4 id="1-4-3-chrome浏览器查看请求-响应报文"><a href="#1-4-3-chrome浏览器查看请求-响应报文" class="headerlink" title="1.4.3 chrome浏览器查看请求/响应报文"></a>1.4.3 chrome浏览器查看请求/响应报文</h4><ul><li>F12  – &gt;  Network</li></ul><h3 id="1-4-Node-js-安装"><a href="#1-4-Node-js-安装" class="headerlink" title="1.4 Node.js 安装"></a>1.4 Node.js 安装</h3><h3 id="1-5-express-js-安装"><a href="#1-5-express-js-安装" class="headerlink" title="1.5 express.js 安装"></a>1.5 express.js 安装</h3><p><img src="/.com//Snipaste_2022-03-11_20-32-18.png"></p><p><img src="/.com//Snipaste_2022-03-11_20-33-30.png"></p><h4 id="1-5-1-express-使用"><a href="#1-5-1-express-使用" class="headerlink" title="1.5.1 express 使用"></a>1.5.1 express 使用</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 1. 引入 express</span><br><span class="hljs-keyword">const</span> &#123; response &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">const</span> &#123; request &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);<br><span class="hljs-comment">// 2. 创建应用对象</span><br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">express</span>();<br><span class="hljs-comment">// 3. 创建路由规则   request 请求报文封装   response 响应报文封装</span><br>app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">request,response</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 设置响应</span><br>    response.<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;Hello express&#x27;</span>);<br>&#125;);<br><span class="hljs-comment">// 4. 监听端口启动服务</span><br>app.<span class="hljs-title function_">listen</span>(<span class="hljs-number">8000</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;服务已启动,8000&#x27;</span>);<br>&#125;)<br></code></pre></td></tr></table></figure><ul><li>终端通过node启动服务</li></ul><p><img src="/.com//Snipaste_2022-03-11_20-39-59.png"></p><ul><li>通过浏览器打开</li></ul><p><img src="/.com//Snipaste_2022-03-11_20-41-35.png"></p><p><img src="/.com//Snipaste_2022-03-11_20-42-47.png"></p><ul><li>通过 Ctrl + C关闭端口</li></ul><h4 id="1-5-2-使用Ajax"><a href="#1-5-2-使用Ajax" class="headerlink" title="1.5.2 使用Ajax"></a>1.5.2 使用Ajax</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 1.  创建 ajax 对象</span><br><span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br><span class="hljs-comment">// 2. 初始化 设置方法了url</span><br>xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/server&#x27;</span>);<br><span class="hljs-comment">// 3. 发送</span><br>xhr.<span class="hljs-title function_">send</span>();<br><span class="hljs-comment">// 4.事件绑定   处理服务端返回的结果</span><br>xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 判断（服务端返回了所有结果)</span><br>    <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>) &#123;<br>        <span class="hljs-comment">// 判断响应状态码 200 404 500...</span><br>        <span class="hljs-comment">// 2xx 表示响应成功</span><br>        <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">status</span> &gt;= <span class="hljs-number">200</span> &amp;&amp; xhr.<span class="hljs-property">status</span> &lt; <span class="hljs-number">300</span>) &#123;<br>            <span class="hljs-comment">// 处理结果</span><br>            <span class="hljs-comment">// 1. 响应行</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">status</span>);  <span class="hljs-comment">// 状态码</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">statusText</span>);  <span class="hljs-comment">// 状态字符串</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-title function_">getAllResponseHeaders</span>()); <span class="hljs-comment">// 响应头</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">response</span>); <span class="hljs-comment">// 响应体</span><br>            <span class="hljs-comment">// 2. 将数据响应在 div 里面</span><br>            result.<span class="hljs-property">innerHTML</span> = xhr.<span class="hljs-property">response</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/.com//Snipaste_2022-03-11_21-31-09-16470507947011.png"></p><h4 id="1-5-3-设置-GET-请求参数"><a href="#1-5-3-设置-GET-请求参数" class="headerlink" title="1.5.3 设置 GET 请求参数"></a>1.5.3 设置 GET 请求参数</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/server?a=100&amp;&amp;b=200&amp;&amp;c=300&#x27;</span>);<span class="hljs-comment">//请求体可以设置任意参数</span><br></code></pre></td></tr></table></figure><p><img src="/.com//Snipaste_2022-03-12_10-11-19.png"></p><h3 id="1-6-POST请求"><a href="#1-6-POST请求" class="headerlink" title="1.6 POST请求"></a>1.6 POST请求</h3><ul><li>设置post请求需要设置post路由器规则</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">app.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/server&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">request,response</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 设置响应头</span><br>    response.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>,<span class="hljs-string">&#x27;*&#x27;</span>);<br>    <span class="hljs-comment">// 设置响应</span><br>    response.<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;Hello Ajax POST&#x27;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li>调用 post </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 1. 创建ajax 对象</span><br><span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br><span class="hljs-comment">// 2. 初始化设置方法</span><br>xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;POST&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/server&#x27;</span>);<br><span class="hljs-comment">// 3. 发送请求</span><br>xhr.<span class="hljs-title function_">send</span>();<br><span class="hljs-comment">// 4. 绑定事件</span><br>xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 判断服务器返回结果</span><br>    <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>) &#123;<br>        <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">status</span> &gt;= <span class="hljs-number">200</span> &amp;&amp; xhr.<span class="hljs-property">status</span> &lt; <span class="hljs-number">300</span>) &#123;<br>            <span class="hljs-comment">// 处理结果</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">status</span>);<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">statusText</span>);<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-title function_">getAllResponseHeaders</span>());<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">response</span>);<br>            result.<span class="hljs-property">innerHTML</span> = xhr.<span class="hljs-property">response</span>;<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/.com//Snipaste_2022-03-12_10-24-18.png"></p><h4 id="1-6-1-POST请求设置参数"><a href="#1-6-1-POST请求设置参数" class="headerlink" title="1.6.1 POST请求设置参数"></a>1.6.1 POST请求设置参数</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">xhr.<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;a=100&amp;b=200&amp;c=300&#x27;</span>);  <span class="hljs-comment">// 与 get请求设置参数位置不一样，请求体可以设置任意参数</span><br></code></pre></td></tr></table></figure><p><img src="/.com//Snipaste_2022-03-12_10-28-45.png"></p><h4 id="1-6-2-设置请求头信息"><a href="#1-6-2-设置请求头信息" class="headerlink" title="1.6.2 设置请求头信息"></a>1.6.2 设置请求头信息</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 1. 创建ajax 对象</span><br><span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br><span class="hljs-comment">// 2. 初始化设置方法</span><br>xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;POST&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/server&#x27;</span>);<br><span class="hljs-comment">// 设置请求头信息, 固定或者自定义写法</span><br>xhr.<span class="hljs-title function_">setRequestHeader</span>(<span class="hljs-string">&#x27;Content-Type&#x27;</span>,<span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>);<br><span class="hljs-comment">// 3. 发送请求</span><br>xhr.<span class="hljs-title function_">send</span>();<br><span class="hljs-comment">// 4. 绑定事件</span><br>xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 判断服务器返回结果</span><br>    <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>) &#123;<br>        <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">status</span> &gt;= <span class="hljs-number">200</span> &amp;&amp; xhr.<span class="hljs-property">status</span> &lt; <span class="hljs-number">300</span>) &#123;<br>            <span class="hljs-comment">// 处理结果</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">status</span>);<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">statusText</span>);<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-title function_">getAllResponseHeaders</span>());<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">response</span>);<br>            result.<span class="hljs-property">innerHTML</span> = xhr.<span class="hljs-property">response</span>;<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="1-6-3-处理-IE-缓存问题"><a href="#1-6-3-处理-IE-缓存问题" class="headerlink" title="1.6.3 处理 IE 缓存问题"></a>1.6.3 处理 IE 缓存问题</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">// 1. IE 浏览器在点击接收回请求之后，会将数据缓存在本地，这时候通过更改数据，重新点击，将不会再刷星</span><br><span class="hljs-comment">// 2. 增加时间戳可以实时刷新</span><br>xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/json-server?t=&#x27;</span> + <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>());<br></code></pre></td></tr></table></figure><h3 id="1-7-服务端响应JSON数据"><a href="#1-7-服务端响应JSON数据" class="headerlink" title="1.7 服务端响应JSON数据"></a>1.7 服务端响应JSON数据</h3><h4 id="1-7-1-服务器端设置-JSON-数据"><a href="#1-7-1-服务器端设置-JSON-数据" class="headerlink" title="1.7.1 服务器端设置 JSON 数据"></a>1.7.1 服务器端设置 JSON 数据</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 4. 设置所有权限都可以响应</span><br>app.<span class="hljs-title function_">all</span>(<span class="hljs-string">&#x27;/json-server&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">request,response</span>) =&gt;</span> &#123;<br>    response.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>,<span class="hljs-string">&#x27;*&#x27;</span>);<br>    <span class="hljs-comment">// json 数据需要对象进行传输</span><br>    <span class="hljs-keyword">const</span> data = &#123;<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;HELOO JSON&#x27;</span><br>    &#125;<br>    <span class="hljs-comment">// 通过 JSON.stringify() ,将数据处理成字符串</span><br>    <span class="hljs-keyword">let</span> str = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(data); <br>    <span class="hljs-comment">// 得到的字符串 发送给前端</span><br>    response.<span class="hljs-title function_">send</span>(str);<br>&#125;)<br></code></pre></td></tr></table></figure><h4 id="1-7-1-前端手动处理-JSON-数据"><a href="#1-7-1-前端手动处理-JSON-数据" class="headerlink" title="1.7.1 前端手动处理 JSON 数据"></a>1.7.1 前端手动处理 JSON 数据</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>) &#123;<br>        <span class="hljs-comment">// 通过 JSON.parse()  获取到 xhr的 response数据</span><br>        <span class="hljs-keyword">let</span> data = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(xhr.<span class="hljs-property">response</span>);<br>        <span class="hljs-comment">// 打印在页面上</span><br>        result.<span class="hljs-property">innerHTML</span> = data.<span class="hljs-property">name</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="1-7-2-前端自动处理-JSON-数据"><a href="#1-7-2-前端自动处理-JSON-数据" class="headerlink" title="1.7.2 前端自动处理 JSON 数据"></a>1.7.2 前端自动处理 JSON 数据</h4><ul><li>自动处理 JSON 数据必须设置接收类型为 JSON 数据</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 发送请求</span><br><span class="hljs-keyword">const</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br><span class="hljs-comment">// 设置响应体数据的类型为 json 数据</span><br>xhr.<span class="hljs-property">responseType</span> = <span class="hljs-string">&#x27;json&#x27;</span>;<br><span class="hljs-comment">// 初始化</span><br>xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/json-server&#x27;</span>);<br><span class="hljs-comment">// 设置请求头</span><br>xhr.<span class="hljs-title function_">setRequestHeader</span>(<span class="hljs-string">&#x27;Content-Type&#x27;</span>,<span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>);<br><span class="hljs-comment">// 发送请求</span><br>xhr.<span class="hljs-title function_">send</span>();<br><span class="hljs-comment">// 绑定事件</span><br>xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>) &#123;<br>    <span class="hljs-comment">// 将数据打印</span><br>    result.<span class="hljs-property">innerHTML</span> = xhr.<span class="hljs-property">response</span>.<span class="hljs-property">name</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/.com//Snipaste_2022-03-12_11-26-17.png"></p><h3 id="1-8-nodemon-自动重启服务"><a href="#1-8-nodemon-自动重启服务" class="headerlink" title="1.8 nodemon 自动重启服务"></a>1.8 nodemon 自动重启服务</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 安装</span><br>npm install -g nodemon<br><span class="hljs-comment">// 启动服务</span><br>nodemon 后端文件.<span class="hljs-property">js</span><br></code></pre></td></tr></table></figure><h3 id="1-9-请求超时与网络异常"><a href="#1-9-请求超时与网络异常" class="headerlink" title="1.9 请求超时与网络异常"></a>1.9 请求超时与网络异常</h3><h4 id="1-9-1-请求超时"><a href="#1-9-1-请求超时" class="headerlink" title="1.9.1 请求超时"></a>1.9.1 请求超时</h4><ul><li><h4 id="服务器端口设置延时器"><a href="#服务器端口设置延时器" class="headerlink" title="服务器端口设置延时器"></a>服务器端口设置延时器</h4></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 1. 服务器端口设置延时器</span><br>app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/delay&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">request,response</span>) =&gt;</span> &#123;<br>    response.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>,<span class="hljs-string">&#x27;*&#x27;</span>);<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        response.<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;延迟请求&#x27;</span>);<br>    &#125;,<span class="hljs-number">3000</span>)     <span class="hljs-comment">// 延迟3秒</span><br>&#125;)<br></code></pre></td></tr></table></figure><ul><li><h4 id="前端端口"><a href="#前端端口" class="headerlink" title="前端端口"></a>前端端口</h4></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br><span class="hljs-comment">// 超时设置, 超过2s 请求取消</span><br>xhr.<span class="hljs-property">timeout</span> = <span class="hljs-number">2000</span>;<br><span class="hljs-comment">// 超时回调</span><br>xhr.<span class="hljs-property">ontimeout</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;请求延迟，请重试&#x27;</span>)<br>&#125;<br>xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/delay&#x27;</span>);<br>xhr.<span class="hljs-title function_">send</span>();<br>xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>) &#123;<br>        <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">status</span> &gt;= <span class="hljs-number">200</span> &amp;&amp; xhr.<span class="hljs-property">status</span> &lt; <span class="hljs-number">300</span>) &#123;<br>            result.<span class="hljs-property">innerHTML</span> = xhr.<span class="hljs-property">response</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/.com//Snipaste_2022-03-12_15-02-43.png"></p><h4 id="1-9-2-网络异常"><a href="#1-9-2-网络异常" class="headerlink" title="1.9.2 网络异常"></a>1.9.2 网络异常</h4><ul><li><h4 id="前端端口-1"><a href="#前端端口-1" class="headerlink" title="前端端口"></a>前端端口</h4></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br><span class="hljs-comment">// 网络异常回调</span><br>xhr.<span class="hljs-property">onerror</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;网络出现故障，请检查网络&#x27;</span>);<br>&#125;<br>xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/delay&#x27;</span>);<br>xhr.<span class="hljs-title function_">send</span>();<br>xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>) &#123;<br>        <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">status</span> &gt;= <span class="hljs-number">200</span> &amp;&amp; xhr.<span class="hljs-property">status</span> &lt; <span class="hljs-number">300</span>) &#123;<br>            result.<span class="hljs-property">innerHTML</span> = xhr.<span class="hljs-property">response</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/.com//Snipaste_2022-03-12_15-02-14.png"></p><h3 id="1-10-手动请求取消"><a href="#1-10-手动请求取消" class="headerlink" title="1.10 手动请求取消"></a>1.10 手动请求取消</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 两个按钮 1个点击发送，1个点击取消</span><br>btn[<span class="hljs-number">0</span>].<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    x = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br>    x.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/delay&#x27;</span>);<br>    x.<span class="hljs-title function_">send</span>();<br>&#125;)<br><span class="hljs-comment">// 通过 abort 方法取消发送</span><br>btn[<span class="hljs-number">1</span>].<span class="hljs-property">onclick</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    x.<span class="hljs-title function_">abort</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/.com//Snipaste_2022-03-12_15-18-19.png"></p><h3 id="1-11-重复发送请求"><a href="#1-11-重复发送请求" class="headerlink" title="1.11 重复发送请求"></a>1.11 重复发送请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 判断标识变量,如果标识变量正在请求则取消</span><br><span class="hljs-keyword">if</span>(isSending) &#123;<br>    x.<span class="hljs-title function_">abort</span>();<br>&#125;<br>x = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br><span class="hljs-comment">// 修改标识变量的值</span><br>isSending = <span class="hljs-literal">true</span>;<br>x.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;http://127.0.0.1:8000/delay&#x27;</span>);<br>x.<span class="hljs-title function_">send</span>();<br><span class="hljs-comment">// 请求完成情况</span><br>x.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 状态码为4 则发送成功修改为 false</span><br>    <span class="hljs-keyword">if</span>(x.<span class="hljs-property">readyStatus</span> === <span class="hljs-number">4</span>) &#123;<br>        isSending = <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/.com//Snipaste_2022-03-12_15-34-15.png"></p><h2 id="2-jQurey中的Ajax"><a href="#2-jQurey中的Ajax" class="headerlink" title="2.jQurey中的Ajax"></a>2.jQurey中的Ajax</h2><h3 id="2-1-GET请求"><a href="#2-1-GET请求" class="headerlink" title="2.1 GET请求"></a>2.1 GET请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;http://127.0.0.1:8000/jquery-server&#x27;</span>,&#123;<br>    <span class="hljs-attr">a</span>:<span class="hljs-number">100</span>,<span class="hljs-attr">b</span>:<span class="hljs-number">200</span>  <span class="hljs-comment">// 设置请求参数</span><br>&#125;,<br>    <span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data);<br>&#125;,<span class="hljs-string">&#x27;json&#x27;</span>);  <span class="hljs-comment">// 设置响应体是json格式</span><br></code></pre></td></tr></table></figure><p><img src="/.com//Snipaste_2022-03-12_17-43-44.png"></p><h3 id="2-2-POST请求"><a href="#2-2-POST请求" class="headerlink" title="2.2 POST请求"></a>2.2 POST请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;http://127.0.0.1:8000/jquery-server&#x27;</span>,&#123;<br>    <span class="hljs-attr">a</span>:<span class="hljs-number">100</span>,<span class="hljs-attr">b</span>:<span class="hljs-number">200</span>   <span class="hljs-comment">// 设置请求参数</span><br>&#125;,<br>    <span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data);<br>&#125;,<span class="hljs-string">&#x27;json&#x27;</span>)<span class="hljs-comment">// 表示响应体是json格式</span><br></code></pre></td></tr></table></figure><p><img src="/.com//Snipaste_2022-03-12_17-45-06.png"></p><h3 id="2-3-通用请求"><a href="#2-3-通用请求" class="headerlink" title="2.3 通用请求"></a>2.3 通用请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$.<span class="hljs-title function_">ajax</span>(&#123;<br><span class="hljs-comment">// url</span><br><span class="hljs-attr">url</span>:<span class="hljs-string">&#x27;http://127.0.0.1:8000/jquery-server&#x27;</span>,<br><span class="hljs-comment">// 参数</span><br>    <span class="hljs-attr">data</span>:&#123;<br>        <span class="hljs-attr">a</span>:<span class="hljs-number">100</span>,<br>        <span class="hljs-attr">b</span>:<span class="hljs-number">200</span><br>    &#125;,<br><span class="hljs-comment">// 请求类型</span><br><span class="hljs-attr">type</span>:<span class="hljs-string">&#x27;GET&#x27;</span>,<br><span class="hljs-comment">// 响应体结果设置</span><br><span class="hljs-attr">dataType</span>:<span class="hljs-string">&#x27;json&#x27;</span>,<br><span class="hljs-comment">// 成功的回调</span><br>    <span class="hljs-attr">success</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data);<br>    &#125;,<br><span class="hljs-comment">// 超时时间</span><br><span class="hljs-attr">timeout</span>:<span class="hljs-number">2000</span>,<br><span class="hljs-comment">// 失败回调</span><br>    <span class="hljs-attr">error</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;出错了&#x27;</span>);<br>    &#125;,<br><span class="hljs-comment">// 自定义头信息 </span><br>    <span class="hljs-attr">headers</span>: &#123;<br>        <span class="hljs-attr">c</span>:<span class="hljs-number">300</span>,<br>        <span class="hljs-attr">d</span>:<span class="hljs-number">300</span><br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p><img src="/.com//Snipaste_2022-03-12_17-46-55.png"></p><h3 id="2-4-后端全通用设置"><a href="#2-4-后端全通用设置" class="headerlink" title="2.4 后端全通用设置"></a>2.4 后端全通用设置</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">app.<span class="hljs-title function_">all</span>(<span class="hljs-string">&#x27;/jquery-server&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">request,response</span>) =&gt;</span> &#123;<br>    response.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>,<span class="hljs-string">&#x27;*&#x27;</span>);<br>    response.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Headers&#x27;</span>,<span class="hljs-string">&#x27;*&#x27;</span>);<br>    <span class="hljs-keyword">const</span> data = &#123;<br>        name : <span class="hljs-string">&#x27;ajax&#x27;</span><br>    &#125;<br>    response.<span class="hljs-title function_">send</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(data));<br>&#125;)<br></code></pre></td></tr></table></figure><h2 id="3-axios发送AJAX请求"><a href="#3-axios发送AJAX请求" class="headerlink" title="3. axios发送AJAX请求"></a>3. axios发送AJAX请求</h2><h3 id="3-1-axios下载地址"><a href="#3-1-axios下载地址" class="headerlink" title="3.1 axios下载地址"></a>3.1 axios下载地址</h3><ul><li><a href="https://github.com/axios/axios">https://github.com/axios/axios</a></li></ul><h3 id="3-2-GET-请求"><a href="#3-2-GET-请求" class="headerlink" title="3.2 GET 请求"></a>3.2 GET 请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 配置 baseURL 进行简化操作</span><br>axios.<span class="hljs-property">defaults</span>.<span class="hljs-property">baseURL</span> = <span class="hljs-string">&#x27;http://127.0.0.1:8000&#x27;</span>;<br><span class="hljs-comment">// GET 请求</span><br>axios.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/axios-server&#x27;</span>,&#123;<br>    <span class="hljs-comment">// url参数</span><br>    <span class="hljs-attr">params</span>:&#123;<br>        <span class="hljs-attr">id</span>:<span class="hljs-number">100</span>,<br>        <span class="hljs-attr">age</span>:<span class="hljs-number">1</span><br>    &#125;,<br>    <span class="hljs-comment">// 请求头信息</span><br>    <span class="hljs-attr">headers</span>:&#123;<br>        <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;AJAX&#x27;</span>,<br>        <span class="hljs-attr">age</span>:<span class="hljs-number">122</span><br>    &#125;<br>&#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">value</span> =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(value);<br>&#125;);<br></code></pre></td></tr></table></figure><p><img src="/.com//Snipaste_2022-03-12_19-39-37.png"></p><h3 id="3-3-POST-请求"><a href="#3-3-POST-请求" class="headerlink" title="3.3 POST 请求"></a>3.3 POST 请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 配置 baseURL 进行简化操作</span><br>axios.<span class="hljs-property">defaults</span>.<span class="hljs-property">baseURL</span> = <span class="hljs-string">&#x27;http://127.0.0.1:8000&#x27;</span>;<br>axios.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/axios-server&#x27;</span>,<br>           &#123;<br>    username : <span class="hljs-string">&#x27;admin&#x27;</span>,<br>    password : <span class="hljs-string">&#x27;admin&#x27;</span><br>&#125;,&#123;<br>    <span class="hljs-attr">params</span>: &#123;<br>        <span class="hljs-attr">id</span>:<span class="hljs-number">200</span>,<br>        <span class="hljs-attr">vip</span>:<span class="hljs-number">2</span><br>    &#125;,<br>    <span class="hljs-attr">headers</span>:&#123;<br>        <span class="hljs-attr">wight</span>:<span class="hljs-number">150</span>,<br>        <span class="hljs-attr">height</span>:<span class="hljs-number">150</span><br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="3-4-通用方式发送请求"><a href="#3-4-通用方式发送请求" class="headerlink" title="3.4 通用方式发送请求"></a>3.4 通用方式发送请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 配置 baseURL 进行简化操作</span><br>axios.<span class="hljs-property">defaults</span>.<span class="hljs-property">baseURL</span> = <span class="hljs-string">&#x27;http://127.0.0.1:8000&#x27;</span>;<br><span class="hljs-title function_">axios</span>(&#123;<br>    <span class="hljs-comment">// 请求方式</span><br>    method : <span class="hljs-string">&#x27;POST&#x27;</span>,<br>    <span class="hljs-comment">// url</span><br>    <span class="hljs-attr">url</span>:<span class="hljs-string">&#x27;/axios-server&#x27;</span>,<br>    <span class="hljs-comment">//url 参数</span><br>    <span class="hljs-attr">params</span>:&#123;<br>    vip : <span class="hljs-number">12</span>,<br>    level :<span class="hljs-number">22</span><br>    &#125;,<br>    <span class="hljs-comment">// 头信息</span><br>    <span class="hljs-attr">headers</span>:&#123;<br>    <span class="hljs-attr">a</span>:<span class="hljs-number">100</span>,<br>    <span class="hljs-attr">b</span>:<span class="hljs-number">222</span><br>    &#125;,<br>    <span class="hljs-attr">data</span>:&#123;<br>    <span class="hljs-attr">uname</span>:<span class="hljs-string">&#x27;admin&#x27;</span>,<br>    <span class="hljs-attr">pad</span>:<span class="hljs-string">&#x27;admin&#x27;</span><br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><p><img src="/.com//Snipaste_2022-03-12_20-00-50.png"></p><h3 id="3-5-fetch-函数"><a href="#3-5-fetch-函数" class="headerlink" title="3.5 fetch() 函数"></a>3.5 fetch() 函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">fetch</span>(<span class="hljs-string">&#x27;http://127.0.0.1:8000/fetch-server&#x27;</span>,&#123;<br><span class="hljs-comment">// 请求方法</span><br><span class="hljs-attr">method</span>:<span class="hljs-string">&#x27;POST&#x27;</span>,<br><span class="hljs-comment">// 请求头</span><br>    <span class="hljs-attr">headers</span>:&#123;<br>   <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;uname&#x27;</span><br>&#125;,<br><span class="hljs-comment">// 请求体</span><br><span class="hljs-attr">body</span>:<span class="hljs-string">&#x27;uname=admin&amp;pad=admin&#x27;</span><br>&#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">response</span> =&gt;</span> &#123;<br><span class="hljs-keyword">return</span> response.<span class="hljs-title function_">json</span>();<br>&#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">response</span> =&gt;</span>&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(response);<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="4-案例【腾讯天气】"><a href="#4-案例【腾讯天气】" class="headerlink" title="4. 案例【腾讯天气】"></a>4. 案例【腾讯天气】</h2><h3 id="4-1-接口文档"><a href="#4-1-接口文档" class="headerlink" title="4.1 接口文档"></a>4.1 接口文档</h3><p><img src="/.com//Snipaste_2022-03-13_14-15-34.png"></p><p><img src="/.com//Users/JiayA/Desktop/Snipaste_2022-03-13_14-16-02.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>博客更新操作步骤</title>
    <link href="/2022/08/21/%E5%8D%9A%E5%AE%A2%E9%97%AE%E9%A2%98/"/>
    <url>/2022/08/21/%E5%8D%9A%E5%AE%A2%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<ol><li><code>hexo clean</code> 清理缓存</li><li><code>hexo d</code> 打包</li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>做项目的时候遇到的问题</title>
    <link href="/2022/08/21/project-question/"/>
    <url>/2022/08/21/project-question/</url>
    
    <content type="html"><![CDATA[<h2 id="1-proxy解决跨域问题"><a href="#1-proxy解决跨域问题" class="headerlink" title="1. proxy解决跨域问题"></a>1. proxy解决跨域问题</h2><ul><li>在<code>vue.config.js</code>配置<code>proxy</code>解决跨域问题<ul><li>具体代码：</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br><span class="hljs-attr">devServer</span>: &#123;<br><span class="hljs-attr">proxy</span>: &#123;  <span class="hljs-comment">//配置跨域</span><br><span class="hljs-string">&#x27;/ajax&#x27;</span>: &#123;<br><span class="hljs-attr">target</span>: <span class="hljs-string">&#x27;https://m.maoyan.com/ajax/&#x27;</span>,  <span class="hljs-comment">//这里后台的地址模拟的;应该填写你们真实的后台接口</span><br><span class="hljs-attr">changOrigin</span>: <span class="hljs-literal">true</span>,  <span class="hljs-comment">//允许跨域</span><br><span class="hljs-attr">secure</span>:<span class="hljs-literal">true</span>,<br><span class="hljs-attr">pathRewrite</span>: &#123;<br><span class="hljs-string">&#x27;^/ajax&#x27;</span>: <span class="hljs-string">&#x27;/&#x27;</span><br>&#125;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><code>&#39;/ajax&#39;</code>是接口共同识别的地方，如果出现<code>/ajax</code>将被替换为<code>/</code></li></ul><h2 id="2-父组件给子组件传参问题"><a href="#2-父组件给子组件传参问题" class="headerlink" title="2. 父组件给子组件传参问题"></a>2. 父组件给子组件传参问题</h2><h3 id="父组件给子组件传参"><a href="#父组件给子组件传参" class="headerlink" title="父组件给子组件传参"></a>父组件给子组件传参</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 父组件里面有子组件</span><br><span class="hljs-comment">// : 是子组件要接口的参数名，后面接着要传递的参数</span><br>&lt;son :para = <span class="hljs-string">&#x27;parameter&#x27;</span>&gt;&lt;/son&gt;<br><br><span class="hljs-comment">// 子组件通过props进行接收</span><br><span class="hljs-attr">props</span>:[<span class="hljs-string">&#x27;para&#x27;</span>]<br></code></pre></td></tr></table></figure><h3 id="点击事件传参接参"><a href="#点击事件传参接参" class="headerlink" title="点击事件传参接参"></a>点击事件传参接参</h3><ul><li>需求是通过点击事件把原先的页面数据通过点击后，传递过去一个需要的值给其他页面</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div @click=<span class="hljs-string">&quot;parameter(id)&quot;</span>&gt;设置点击事件进行传参&lt;/div&gt;<br><span class="hljs-attr">methods</span>:&#123;<br><span class="hljs-title function_">parameter</span>(<span class="hljs-params">mid</span>)&#123;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">$router</span>.<span class="hljs-title function_">push</span>(&#123;<br><span class="hljs-comment">// 跳转的地址</span><br><span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;/detail&#x27;</span>,<br><span class="hljs-attr">query</span>:&#123;<br><span class="hljs-comment">// 传递过去的参数</span><br>mid<br>&#125;<br>&#125;)<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 其他页面进行接收</span><br><span class="hljs-comment">// 使用 this.$route.query.params 进行接收</span><br><span class="hljs-attr">methods</span>:&#123;<br><span class="hljs-title function_">getId</span>(<span class="hljs-params">mid</span>)&#123;<br><span class="hljs-keyword">const</span> mId = <span class="hljs-variable language_">this</span>.<span class="hljs-property">$route</span>.<span class="hljs-property">query</span>.<span class="hljs-property">mid</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="3-axios组件封装"><a href="#3-axios组件封装" class="headerlink" title="3. axios组件封装"></a>3. <code>axios</code>组件封装</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript">npm i axios<br><br><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;axios&#x27;</span><br><br><span class="hljs-keyword">const</span> http = axios.<span class="hljs-title function_">create</span>(&#123;<br>    <span class="hljs-attr">baseURL</span>:<span class="hljs-string">&#x27;http://localhost:3000/&#x27;</span><br>&#125;)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> http<br><br><br><span class="hljs-comment">// 全局 使用axios</span><br><span class="hljs-keyword">import</span> http <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/axios/http&#x27;</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$http</span> = http<br></code></pre></td></tr></table></figure><h2 id="4-iconfont-字体图标的使用"><a href="#4-iconfont-字体图标的使用" class="headerlink" title="4. iconfont 字体图标的使用"></a>4. <code>iconfont</code> 字体图标的使用</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">下载本地文件后，在main.<span class="hljs-property">js</span>引入 iconfont.<span class="hljs-property">css</span> 即可<br></code></pre></td></tr></table></figure><h2 id="5-底部菜单栏固定定位设置宽度，父元素被撑大问题"><a href="#5-底部菜单栏固定定位设置宽度，父元素被撑大问题" class="headerlink" title="5. 底部菜单栏固定定位设置宽度，父元素被撑大问题"></a>5. 底部菜单栏固定定位设置宽度，父元素被撑大问题</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">width</span>:<span class="hljs-title function_">calc</span>(<span class="hljs-number">100</span>% - <span class="hljs-number">10</span>%)<br></code></pre></td></tr></table></figure><h2 id="6-vue-渲染数据时所渲染的值为空，之后渲染完毕页面不报错问题"><a href="#6-vue-渲染数据时所渲染的值为空，之后渲染完毕页面不报错问题" class="headerlink" title="6. vue 渲染数据时所渲染的值为空，之后渲染完毕页面不报错问题"></a>6. <code>vue</code> 渲染数据时所渲染的值为空，之后渲染完毕页面不报错问题</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">Error</span> <span class="hljs-keyword">in</span> <span class="hljs-attr">render</span>: <span class="hljs-string">&quot;TypeError: Cannot read properties of undefined (reading xxx&#x27;)&quot;</span><br><br>解决：需要在页面渲染时给定一个空值即可<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
